VCFFileDataAdapter.prototype.loadFromFile=FileDataAdapter.prototype.loadFromFile;VCFFileDataAdapter.prototype.loadFromContent=FileDataAdapter.prototype.loadFromContent;VCFFileDataAdapter.prototype.read=FileDataAdapter.prototype.read;VCFFileDataAdapter.prototype.getDataset=FileDataAdapter.prototype.getDataset;function VCFFileDataAdapter(){FileDataAdapter.prototype.constructor.call(this);this.content=this.dataset=null;this.lines=[]}VCFFileDataAdapter.prototype.getLines=function(){return this.lines};
VCFFileDataAdapter.prototype.parse=function(a){this.content=a;for(var a=a.split("\n"),b=0;b<a.length;b++){var c=a[b].replace(/^\s+|\s+$/g,"");null!=c&&0<c.length&&(c=c.replace(/\t/g,"**%**").split("**%**"),"#"!=c[0].substr(0,1)&&this.lines.push(c))}};SIFFileDataAdapter.prototype.loadFromFile=FileDataAdapter.prototype.loadFromFile;SIFFileDataAdapter.prototype.loadFromContent=FileDataAdapter.prototype.loadFromContent;
function SIFFileDataAdapter(){FileDataAdapter.prototype.constructor.call(this);this.dataset=new GraphDataset;this.graph={};this.graph.edges=[];this.graph.nodes=[];this.graph.relations=[]}SIFFileDataAdapter.prototype.toSIFID=function(a){var b="",c;for(c in a.vertices){var d="",d=a.getVertexById(c);if(0==d.getEdges().length)d=d.getId()+"\n",b+=d;else for(var e=d.getEdgesOut(),f=0;f<e.length;f++)d=e[f].getNodeSource().getId()+"\t--\t"+e[f].getNodeTarget().getId()+"\n",b+=d}return b};
SIFFileDataAdapter.prototype.toSIF=function(a){var b="",c;for(c in a.vertices){var d="",d=a.getVertexById(c);if(0==d.getEdges().length)d=d.getName()+"\n",b+=d;else for(var e=d.getEdgesOut(),f=0;f<e.length;f++)d=e[f].getNodeSource().getName()+"\t--\t"+e[f].getNodeTarget().getName()+"\n",b+=d}return b};SIFFileDataAdapter.prototype.toDOT=function(a){a="graph network {\n"+this.toSIF(a);return a+"}"};SIFFileDataAdapter.prototype.toDOTID=function(a){a="graph network {\n"+this.toSIFID(a);return a+"}"};
SIFFileDataAdapter.prototype.parse=function(a){for(var b=a.split("\n"),a=[],c=0;c<b.length;c++)if(0<b[c].length){var d=b[c].replace(/^\s+|\s+$/g,"").replace(/\s+/g,"**%**").split("**%**");0<d.length&&a.push(d)}b=[];d={};for(c=0;c<a.length;c++){var e=a[c][0];null==d[e]&&(b.push(e),d[e]=new Vertex(b.length-1,e,{}));for(var f=2;f<a[c].length;f++)e=a[c][f],null==d[e]&&(b.push(e),d[e]=new Vertex(b.length-1,e,{}))}for(var c=[],e=[],g=0;g<a.length;g++)for(f=2;f<a[g].length;f++){var h=a[g][0],k=a[g][f],l=
"e_"+h+"_"+k;e.push(l);l=new Edge(e.length-1,l,d[h],d[k],{type:a[g][1]});d[h].addEdge(l);d[k].addEdge(l);c.push(l.toJSON())}this.graph.edges=e;this.graph.nodes=b;this.graph.relations=c;this.dataset.loadFromJSON(this.graph)};InteractomeSIFFileDataAdapter.prototype.loadFromFile=SIFFileDataAdapter.prototype.loadFromFile;InteractomeSIFFileDataAdapter.prototype.parse=SIFFileDataAdapter.prototype.parse;InteractomeSIFFileDataAdapter.prototype.loadFromContent=SIFFileDataAdapter.prototype.loadFromContent;
function InteractomeSIFFileDataAdapter(){SIFFileDataAdapter.prototype.constructor.call(this);this.dataset=new GraphDataset}TabularFileDataAdapter.prototype.loadFromFile=FileDataAdapter.prototype.loadFromFile;TabularFileDataAdapter.prototype.loadFromContent=FileDataAdapter.prototype.loadFromContent;TabularFileDataAdapter.prototype.read=FileDataAdapter.prototype.read;TabularFileDataAdapter.prototype.getDataset=FileDataAdapter.prototype.getDataset;
function TabularFileDataAdapter(a){FileDataAdapter.prototype.constructor.call(this);this.comment=this.content=this.dataset=null;null!=a&&null!=a.comment&&(this.comment=a.comment);this.lines=[]}TabularFileDataAdapter.prototype.getLines=function(){return this.lines};TabularFileDataAdapter.prototype.getLinesCount=function(){return this.lines.length};
TabularFileDataAdapter.prototype.getValuesByColumnIndex=function(a){for(var b=[],c=0;c<this.getLinesCount();c++)null!=this.getLines()[c][a]&&b.push(this.getLines()[c][a]);return b};TabularFileDataAdapter.prototype.getHeuristicTypeByColumnIndex=function(a){return this.getHeuristicTypeByValues(this.getValuesByColumnIndex(a))};
TabularFileDataAdapter.prototype.getHeuristicTypeByValues=function(a){for(var b=/^[-+]?[0-9]*\.?[0-9]+$/,c=0;c<a.length;c++)if(!b.test((new String(a[c])).replace(",",".")))return"string";return"numeric"};
TabularFileDataAdapter.prototype.parse=function(a){this.content=a;for(var a=a.split("\n"),b=0;b<a.length;b++){var c=a[b].replace(/^\s+|\s+$/g,""),c=c.replace(/\//gi,"");if(null!=c&&0<c.length){var d=c.replace(/\t/g,"**%**").split("**%**");null==this.comment?this.lines.push(d):"#"!=c.substring(0,1)&&this.lines.push(d)}}};GFFFileDataAdapter.prototype.loadFromFile=FileDataAdapter.prototype.loadFromFile;GFFFileDataAdapter.prototype.loadFromContent=FileDataAdapter.prototype.loadFromContent;
GFFFileDataAdapter.prototype.read=FileDataAdapter.prototype.read;GFFFileDataAdapter.prototype.getDataset=FileDataAdapter.prototype.getDataset;function GFFFileDataAdapter(){FileDataAdapter.prototype.constructor.call(this);this.content=this.dataset=null;this.lines=[]}GFFFileDataAdapter.prototype.getLines=function(){return this.lines};
GFFFileDataAdapter.prototype.parse=function(a){this.content=a;for(var a=a.split("\n"),b=0;b<a.length;b++){var c=a[b].replace(/^\s+|\s+$/g,"");null!=c&&0<c.length&&(c=c.replace(/\t/g,"**%**").split("**%**"),"#"!=c[0].substr(0,1)&&this.lines.push(c))}};DotFileDataAdapter.prototype.loadFromFile=FileDataAdapter.prototype.loadFromFile;DotFileDataAdapter.prototype.loadFromContent=FileDataAdapter.prototype.loadFromContent;DotFileDataAdapter.prototype.getDataset=FileDataAdapter.prototype.getDataset;
function DotFileDataAdapter(){FileDataAdapter.prototype.constructor.call(this);this.dataset=new GraphDataset}DotFileDataAdapter.prototype._toSIFID=function(a){var b="",c;for(c in a.vertices){var d="",d=a.getVertexById(c);if(0==d.getEdges().length)d=d.getId()+"\n",b+=d;else for(var e=d.getEdgesOut(),f=0;f<e.length;f++)d=e[f].getNodeSource().getId()+" -- "+e[f].getNodeTarget().getId()+"\n",b+=d}return b};
DotFileDataAdapter.prototype._toSIF=function(a){var b="",c;for(c in a.vertices){var d="",d=a.getVertexById(c);if(0==d.getEdges().length)d=d.getName()+"\n",b+=d;else for(var e=d.getEdgesOut(),f=0;f<e.length;f++)d=e[f].getNodeSource().getName()+" -- "+e[f].getNodeTarget().getName()+"\n",b+=d}return b};DotFileDataAdapter.prototype.toDOT=function(a){a="graph network {\n"+this._toSIF(a);return a+"}"};DotFileDataAdapter.prototype.toDOTID=function(a){a="graph network {\n"+this._toSIFID(a);return a+"}"};
DotFileDataAdapter.prototype.nodeAttributesToJSON=function(a){for(var b=a.replace("[",""),b=b.replace("];","");-1!=b.indexOf(" ");)b=b.replace(" ","\u00b7");for(;-1!=b.indexOf(",\u00b7");)b=b.replace(",\u00b7"," || ");var b=b.split(" || "),c={};try{for(var d=0;d<b.length;d++){var e=b[d].split("=");if(2!=e.length){var f=b[d-1].split("=")[0];c[f]+=e[0]}else{for(;-1!=e[1].indexOf("\u00b7");)e[1]=e[1].replace("\u00b7"," ");c[e[0]]=e[1]}}}catch(g){console.log("FATAL ERROR: "+g+" Text: "+a)}return c};
DotFileDataAdapter.prototype.parse=function(a){this.parseLines(a.split("\n"))};DotFileDataAdapter.prototype.parseFromJSON=function(a){this.parseLines(a)};
DotFileDataAdapter.prototype.parseLines=function(a){for(var b=[],c=[],d={},e=[],f=0;f<a.length;f++){var g=a[f].replace(/^\s+|\s+$/g,"");if((-1!=g.indexOf("->")||-1!=g.indexOf("--"))&&-1==g.indexOf("label")){var h=g.substr(g.indexOf("["),g.indexOf("];")),k=g.replace(h,"").replace(/^\s+|\s+$/g,"").split(" "),h={};h.source=k[0];h.target=k[2];if(""!=g){if(-1!=g.indexOf("[")&&-1==g.indexOf("];")){f++;for(var l=a[f].replace(/^\s+|\s+$/g,""),g=g+l;-1==g.indexOf("];");)f++,l=a[f].replace(/^\s+|\s+$/g,""),
g+=l}l=this.nodeAttributesToJSON(g.substr(g.indexOf("["),g.indexOf("];")));h.args=l;h.args.type=k[1];b.push(h)}}else if(-1!=g.indexOf("graph"))c.push(g);else if(-1!=g.indexOf("node")&&-1!=g.indexOf("node [label="))e.push(g);else if((-1==g.indexOf("{")&&-1==g.indexOf("}")||-1!=g.indexOf("label"))&&0!=g.length){if(-1!=g.indexOf("[")&&-1==g.indexOf("];")){f++;l=a[f].replace(/^\s+|\s+$/g,"");for(g+=l;-1==g.indexOf("];");)f++,l=a[f].replace(/^\s+|\s+$/g,""),g+=l}k=g.indexOf('label="');l=g.length;if(-1!=
k)for(var m=k+=7;m<l;m++)if('"'==g[m]){var q=g.substr(k,m-k),l=m;if(-1!=q.indexOf("="))for(;-1!=q.indexOf("=");)var q=q.replace("=","-"),s=g.substr(k,m-k),g=g.replace(s,q)}l=this.nodeAttributesToJSON(g.substr(g.indexOf("["),g.indexOf("];")));g=g.substr(0,g.indexOf("[")).replace(/^\s+|\s+$/g,"");d[g]=l}}for(var n in d)null==this.dataset.getVertexByName(d[n].label)&&(void 0==d[n].label&&(d[n].label=""),this.dataset.addNode(d[n].label,d[n]));for(h in b)a=this.dataset.getVertexByName(d[b[h].source].label),
c=this.dataset.getVertexByName(d[b[h].target].label),this.dataset.addEdge(a.getId()+"_"+c.getId(),a.getId(),c.getId(),b[h].args);for(n in this.dataset.vertices){for(q=this.dataset.getVertexById(n).getName();-1!=q.indexOf('"');)q=q.replace('"',"");this.dataset.getVertexById(n).setName(q)}};InteractomeDotFileDataAdapter.prototype.loadFromFile=DotFileDataAdapter.prototype.loadFromFile;InteractomeDotFileDataAdapter.prototype.loadFromContent=DotFileDataAdapter.prototype.loadFromContent;
InteractomeDotFileDataAdapter.prototype.nodeAttributesToJSON=DotFileDataAdapter.prototype.nodeAttributesToJSON;InteractomeDotFileDataAdapter.prototype.parse=DotFileDataAdapter.prototype.parse;InteractomeDotFileDataAdapter.prototype.getDataset=DotFileDataAdapter.prototype.getDataset;InteractomeDotFileDataAdapter.prototype.parseLines=DotFileDataAdapter.prototype.parseLines;
function InteractomeDotFileDataAdapter(){DotFileDataAdapter.prototype.constructor.call(this);this.dataset=new InteractomeGraphDataset;this.layout=new LayoutDataset}
InteractomeDotFileDataAdapter.prototype.getFormatter=function(a,b){this.formatter=new NetworkDataSetFormatter({defaultFormat:{size:4,opacity:1,fill:"#FFFFFF",radius:"5",strokeWidth:"1",stroke:"#000000",title:{fontSize:10,fill:"black"}},selected:{opacity:0.9,fill:"red",radius:"5",stroke:"white"},over:{opacity:1,fill:"gray",radius:"5",stroke:"none",strokeWidth:"2"}},{defaultFormat:{opacity:1,stroke:"#000000",strokeWidth:"2",strokeOpacity:0.5,title:{fontSize:6,fontColor:"black"}},selected:{stroke:"red",
fill:"black"},over:{stroke:"blue",strokeOpacity:1,strokeWidth:"4"}},{height:500,width:a,right:b,backgroundColor:"white",balanceNodes:!1,nodesMaxSize:4,nodesMinSize:2});this.formatter.dataBind(this.dataset);for(var c in this.dataset.vertices){var d=this.dataset.vertices[c].args;"box"==d.shape&&this.formatter.changeNodeType(c,"SquareVertexNetworkFormatter");"octagon"==d.shape&&this.formatter.changeNodeType(c,"CircleVertexNetworkFormatter");"tripleoctagon"==d.shape&&this.formatter.changeNodeType(c,"EllipseVertexNetworkFormatter");
null!=d.color&&(this.formatter.getVertexById(c).getDefault().setFill(d.color),this.formatter.getVertexById(c).getOver().setFill(d.color));null!=d.size&&(this.formatter.getVertexById(c).getDefault().setSize(d.size),this.formatter.getVertexById(c).getOver().setSize(d.size))}for(var e in this.dataset.edges)d=this.dataset.edges[e].args,"--"==d.type&&this.formatter.changeEdgeType(e,"LineEdgeNetworkFormatter"),"->"==d.type&&this.formatter.changeEdgeType(e,"DirectedLineEdgeNetworkFormatter"),null!=d.arrowhead&&
"odot"==d.arrowhead&&this.formatter.changeEdgeType(e,"OdotDirectedLineEdgeNetworkFormatter"),null!=d.opacity&&this.formatter.getEdgeById(e).getDefault().setStrokeOpacity(d.opacity),null!=d.size&&this.formatter.getEdgeById(e).getDefault().setSize(d.size);return this.formatter};InteractomeDotFileDataAdapter.prototype.getLayout=function(){this.layout.dataBind(this.dataset);return this.layout};BiopaxDotFileDataAdapter.prototype.loadFromFile=DotFileDataAdapter.prototype.loadFromFile;
BiopaxDotFileDataAdapter.prototype.loadFromContent=DotFileDataAdapter.prototype.loadFromContent;BiopaxDotFileDataAdapter.prototype.nodeAttributesToJSON=DotFileDataAdapter.prototype.nodeAttributesToJSON;BiopaxDotFileDataAdapter.prototype.parse=DotFileDataAdapter.prototype.parse;BiopaxDotFileDataAdapter.prototype.getDataset=DotFileDataAdapter.prototype.getDataset;BiopaxDotFileDataAdapter.prototype.parseFromJSON=DotFileDataAdapter.prototype.parseFromJSON;
BiopaxDotFileDataAdapter.prototype.parseLines=DotFileDataAdapter.prototype.parseLines;
function BiopaxDotFileDataAdapter(){DotFileDataAdapter.prototype.constructor.call(this);this.dataset=new GraphDataset;this.layout=new LayoutDataset;this.formatter=new NetworkDataSetFormatter({defaultFormat:{size:3,opacity:1,fill:"#FFFFFF",radius:"5",strokeWidth:"1",stroke:"#000000",title:{fontSize:10,fill:"black"}},selected:{opacity:0.9,fill:"red",radius:"5",stroke:"white"},over:{opacity:1,fill:"gray",radius:"5",stroke:"none",strokeWidth:"2"}},{defaultFormat:{opacity:1,stroke:"#000000",strokeWidth:"2",
strokeOpacity:0.5,title:{fontSize:6,fontColor:"black"}},selected:{stroke:"red",fill:"black"},over:{stroke:"blue",strokeOpacity:1,strokeWidth:"4"}},{backgroundColor:"white",balanceNodes:!1,nodesMaxSize:4,nodesMinSize:2})}
BiopaxDotFileDataAdapter.prototype.getFormatter=function(){this.formatter.dataBind(this.dataset);for(var a in this.dataset.vertices){var b=this.dataset.vertices[a].args;b.pos.replace('"',"").replace('"',"");"box"==b.shape&&(null!=b.style?-1!=b.style.indexOf("rounded")?this.formatter.changeNodeType(a,"RoundedVertexNetworkFormatter"):(this.formatter.changeNodeType(a,"SquareVertexNetworkFormatter"),this.formatter.getVertexById(a).getDefault().setSize(this.formatter.getVertexById(a).getDefault().getSize()/
1.5)):(this.formatter.changeNodeType(a,"SquareVertexNetworkFormatter"),this.formatter.getVertexById(a).getDefault().setSize(this.formatter.getVertexById(a).getDefault().getSize()/1.5)));"octagon"==b.shape&&this.formatter.changeNodeType(a,"OctagonVertexNetworkFormatter");"ellipse"==b.shape&&this.formatter.changeNodeType(a,"EllipseVertexNetworkFormatter");"tripleoctagon"==b.shape&&this.formatter.changeNodeType(a,"EllipseVertexNetworkFormatter");null!=b.color&&(this.formatter.getVertexById(a).getDefault().setFill(b.color),
this.formatter.getVertexById(a).getOver().setFill(b.color));if(null!=b.fillcolor){for(;-1!=b.fillcolor.indexOf('"');)b.fillcolor=b.fillcolor.replace('"',"");this.formatter.getVertexById(a).getDefault().setFill(b.fillcolor);this.formatter.getVertexById(a).getOver().setFill(b.fillcolor)}}for(var c in this.dataset.edges)b=this.dataset.edges[c].args,"--"==b.type&&this.formatter.changeEdgeType(c,"LineEdgeNetworkFormatter"),"->"==b.type&&this.formatter.changeEdgeType(c,"DirectedLineEdgeNetworkFormatter"),
null!=b.arrowhead&&"odot"==b.arrowhead&&this.formatter.changeEdgeType(c,"OdotDirectedLineEdgeNetworkFormatter");return this.formatter};
BiopaxDotFileDataAdapter.prototype.getLayout=function(){this.layout.dataBind(this.dataset);var a=Infinity,b=Infinity,c=-Infinity,d=-Infinity,e;for(e in this.dataset.vertices){var f=this.dataset.vertices[e].args.pos.replace('"',""),f=f.replace('"',""),g=parseFloat(f.split(",")[0]),f=parseFloat(f.split(",")[1]);g>c&&(c=g);g<a&&(a=g);f>d&&(d=f);g<b&&(b=f)}for(e in this.dataset.vertices)f=this.dataset.vertices[e].args.pos.replace('"',""),a=0.8*(parseFloat(f.split(",")[0])/c)+0.05,b=0.8*(1-parseFloat(f.split(",")[1])/
d)+0.05,this.layout.getNodeById(e).setCoordinates(a,b);return this.layout};FileDataAdapter.prototype.toJson=DataAdapter.prototype.toJSON;FileDataAdapter.prototype.getDataset=DataAdapter.prototype.getDataset;function FileDataAdapter(){DataAdapter.prototype.constructor.call(this);this.content=this.file=null;this.onRead=new Event(this)}FileDataAdapter.prototype.loadFromFile=function(a){this.file=a;var b=this;if(a){var c=new FileReader;c.readAsText(a,"UTF-8");c.onload=function(a){b.loadFromContent(a.target.result)}}};
FileDataAdapter.prototype.loadFromContent=function(a){this.content=a;this.parse(this.content);this.onRead.notify(this)};FileDataAdapter.prototype.read=function(a){var b=this;if(a){var c=new FileReader;c.readAsText(a,"UTF-8");c.onload=function(a){this.content=a.target.result;b.onRead.notify(this)}}};FileDataAdapter.prototype.parse=function(){};BEDFileDataAdapter.prototype.loadFromFile=FileDataAdapter.prototype.loadFromFile;BEDFileDataAdapter.prototype.loadFromContent=FileDataAdapter.prototype.loadFromContent;
BEDFileDataAdapter.prototype.read=FileDataAdapter.prototype.read;BEDFileDataAdapter.prototype.getDataset=FileDataAdapter.prototype.getDataset;function BEDFileDataAdapter(){FileDataAdapter.prototype.constructor.call(this);this.content=this.dataset=null;this.lines=[]}BEDFileDataAdapter.prototype.getLines=function(){return this.lines};
BEDFileDataAdapter.prototype.parse=function(a){this.content=a;for(var a=a.split("\n"),b=0;b<a.length;b++){var c=a[b].replace(/^\s+|\s+$/g,"");null!=c&&0<c.length&&(c=c.replace(/\s+/g,"**%**").split("**%**"),"#"!=c[0].substr(0,1)&&this.lines.push(c))}};GFFLocalRegionDataAdapter.prototype.toJSON=LocalRegionDataAdapter.prototype.toJSON;GFFLocalRegionDataAdapter.prototype._getHashMapKey=LocalRegionDataAdapter.prototype._getHashMapKey;GFFLocalRegionDataAdapter.prototype.isRegionAvalaible=LocalRegionDataAdapter.prototype.isRegionAvalaible;
GFFLocalRegionDataAdapter.prototype.fill=LocalRegionDataAdapter.prototype.fill;GFFLocalRegionDataAdapter.prototype.getFinished=LocalRegionDataAdapter.prototype.getFinished;GFFLocalRegionDataAdapter.prototype.anticipateRegionRetrieved=LocalRegionDataAdapter.prototype.anticipateRegionRetrieved;GFFLocalRegionDataAdapter.prototype.setIntervalView=LocalRegionDataAdapter.prototype.setIntervalView;
function GFFLocalRegionDataAdapter(){LocalRegionDataAdapter.prototype.constructor.call(this);this.resource="gff"}GFFLocalRegionDataAdapter.prototype.getLabel=function(a){return a[2]};
GFFLocalRegionDataAdapter.prototype.loadFromFileDataAdapter=function(a){for(var b=0;b<a.lines.length;b++){var c=a.lines[b][0].replace("chr","");if(57649472==a.lines[b][3])debugger;var d={chromosome:c,label:this.getLabel(a.lines[b]),start:parseFloat(a.lines[b][3]),end:parseFloat(a.lines[b][4]),score:parseFloat(a.lines[b][5]),strand:a.lines[b][6],frame:a.lines[b][7],group:a.lines[b][8]};this.features.push(d);null==this.featuresByChromosome[c]&&(this.featuresByChromosome[c]=[]);this.featuresByChromosome[c].push(d)}};
BEDLocalRegionDataAdapter.prototype.toJSON=LocalRegionDataAdapter.prototype.toJSON;BEDLocalRegionDataAdapter.prototype._getHashMapKey=LocalRegionDataAdapter.prototype._getHashMapKey;BEDLocalRegionDataAdapter.prototype.isRegionAvalaible=LocalRegionDataAdapter.prototype.isRegionAvalaible;BEDLocalRegionDataAdapter.prototype.fill=LocalRegionDataAdapter.prototype.fill;BEDLocalRegionDataAdapter.prototype.getFinished=LocalRegionDataAdapter.prototype.getFinished;
BEDLocalRegionDataAdapter.prototype.anticipateRegionRetrieved=LocalRegionDataAdapter.prototype.anticipateRegionRetrieved;BEDLocalRegionDataAdapter.prototype.setIntervalView=LocalRegionDataAdapter.prototype.setIntervalView;function BEDLocalRegionDataAdapter(){LocalRegionDataAdapter.prototype.constructor.call(this);this.resource="bed"}
BEDLocalRegionDataAdapter.prototype.loadFromFileDataAdapter=function(a){for(var b=0;b<a.lines.length;b++){var c=a.lines[b][0].replace("chr",""),d={label:a.lines[b][3],chromosome:c,start:parseFloat(a.lines[b][1]),end:parseFloat(a.lines[b][2]),score:a.lines[b][4],strand:a.lines[b][5],thickStart:a.lines[b][6],thickEnd:a.lines[b][7],itemRgb:a.lines[b][8],blockCount:a.lines[b][9],blockSizes:a.lines[b][10],blockStarts:a.lines[b][11]};this.features.push(d);null==this.featuresByChromosome[c]&&(this.featuresByChromosome[c]=
[]);this.featuresByChromosome[c].push(d)}};RuleRegionDataAdapter.prototype.toJSON=DataAdapter.prototype.toJSON;
function RuleRegionDataAdapter(a){DataAdapter.prototype.constructor.call(this);this.resource="rule";this.lockSuccessEventNotify=!1;this.datasets={};this.autoFill=!0;this.pixelRatio=5.0E-6;this.space=100;this.maxChromosomeSize=26E7;null!=a&&(null!=a.autoFill&&(this.autoFill=a.autoFill),null!=a.pixelRatio&&(this.pixelRatio=a.pixelRatio));this.dataset=new DataSet;this.resource="rule";this.ratio=this.space/this.pixelRatio;this.preloadSuccess=new Event(this);this.successed=new Event;this.preloadSuccess=
new Event(this)}RuleRegionDataAdapter.prototype._getHashMapKey=function(a,b,c){return a+"-"+b+"-"+c};RuleRegionDataAdapter.prototype.isRegionAvalaible=function(a,b,c){return null!=this.datasets[this._getHashMapKey(a,b,c)]};
RuleRegionDataAdapter.prototype._getFeaturesFromRegion=function(a,b){for(var c=[],d=a;d<b;d=parseFloat(d)+parseFloat(this.ratio))if(0<=d&&d<this.maxChromosomeSize){for(var e=2;9>e;e+=2)a=parseFloat(d)+parseFloat(e*this.ratio/10),c.push({start:a,end:d+a,label:!1});1==Math.ceil(this.pixelRatio)&&(d=1E3*Math.ceil(d/1E3));c.push({start:d,end:d,label:!0})}return c};
RuleRegionDataAdapter.prototype.fill=function(a,b,c,d){this.resource=d;if(null==a||null==b||null==c)throw"Missing value in a not optional parameter: chromosome, start or end";if(this.isRegionAvalaible(a,b,c))this.lockSuccessEventNotify=!1;else{var d=[],e=[],d=this._getFeaturesFromRegion(b,c);e.push(d);this.lockSuccessEventNotify?this.anticipateRegionRetrieved(e,a,b,c):this.getFinished(e,a,b,c)}};
RuleRegionDataAdapter.prototype.getFinished=function(a,b,c,d){this.dataset.loadFromJSON(a);this.datasets[this._getHashMapKey(b,c,d)]=this.dataset;this.successed.notify()};RuleRegionDataAdapter.prototype.anticipateRegionRetrieved=function(a,b,c,d){this.dataset.loadFromJSON(a);this.datasets[this._getHashMapKey(b,c,d)]=a;this.lockSuccessEventNotify=!1;this.preloadSuccess.notify()};
RuleRegionDataAdapter.prototype.setIntervalView=function(a,b){if(this.autoFill&&!this.lockSuccessEventNotify)for(var c in this.datasets){var d=c.split("-"),e=d[1],d=d[2];if(e<b&&b<d){var f=d-e,g=f/3;if(0>e-1||parseFloat(d)+1>this.maxChromosomeSize)break;if(b-e<g){this.lockSuccessEventNotify=!0;c=parseFloat(parseFloat(e)-parseFloat(f));this.fill(a,c,e,this.resource);break}if(d-b<g){this.lockSuccessEventNotify=!0;e=parseFloat(parseFloat(d)+parseFloat(f));this.fill(a,d,e,this.resource);break}}}};
VCFLocalRegionDataAdapter.prototype.toJSON=LocalRegionDataAdapter.prototype.toJSON;VCFLocalRegionDataAdapter.prototype._getHashMapKey=LocalRegionDataAdapter.prototype._getHashMapKey;VCFLocalRegionDataAdapter.prototype.isRegionAvalaible=LocalRegionDataAdapter.prototype.isRegionAvalaible;VCFLocalRegionDataAdapter.prototype.fill=LocalRegionDataAdapter.prototype.fill;VCFLocalRegionDataAdapter.prototype.getFinished=LocalRegionDataAdapter.prototype.getFinished;
VCFLocalRegionDataAdapter.prototype.anticipateRegionRetrieved=LocalRegionDataAdapter.prototype.anticipateRegionRetrieved;VCFLocalRegionDataAdapter.prototype.setIntervalView=LocalRegionDataAdapter.prototype.setIntervalView;function VCFLocalRegionDataAdapter(){LocalRegionDataAdapter.prototype.constructor.call(this);this.resource="vcf";this.qualitycontrol={}}VCFLocalRegionDataAdapter.prototype.getLabel=function(a){return a[2]+" "+a[3]+"/"+a[4]+" Q:"+a[5]};
VCFLocalRegionDataAdapter.prototype.addQualityControl=function(a){a=1E3*(Math.ceil(a/1E3)-1);this.qualitycontrol[a]=null==this.qualitycontrol[a]?1:this.qualitycontrol[a]+1};
VCFLocalRegionDataAdapter.prototype.loadFromFileDataAdapter=function(a){for(var b=0;b<a.lines.length;b++){this.addQualityControl(a.lines[b][5]);var c={id:a.lines[b][2],chromosome:a.lines[b][0],start:parseFloat(a.lines[b][1]),end:parseFloat(a.lines[b][1])+1,ref:a.lines[b][3],alt:a.lines[b][4],quality:a.lines[b][5],filter:a.lines[b][6],info:a.lines[b][7],format:a.lines[b][8],all:a.lines[b],label:this.getLabel(a.lines[b])};this.features.push(c);null==this.featuresByChromosome[a.lines[b][0]]&&(this.featuresByChromosome[a.lines[b][0]]=
[]);this.featuresByChromosome[a.lines[b][0]].push(c)}};DasRegionDataAdapter.prototype.toJSON=DataAdapter.prototype.toJSON;function DasRegionDataAdapter(a){DataAdapter.prototype.constructor.call(this);this.datasets={};this.autoFill=!0;null!=a&&(null!=a.autoFill&&(this.autoFill=a.autoFill),null!=a.url&&(this.url=a.url));this.features=[];this.xml=null;this.dataset=new DataSet;this.resource="das";this.preloadSuccess=new Event(this);this.successed=new Event;this.onError=new Event}
DasRegionDataAdapter.prototype._getHashMapKey=function(a,b,c){return a+"-"+b+"-"+c};DasRegionDataAdapter.prototype.isRegionAvalaible=function(a,b,c){return null!=this.datasets[this._getHashMapKey(a,b,c)]};
DasRegionDataAdapter.prototype.fill=function(a,b,c){var d=this;if(null==a||null==b||null==c)throw"Missing value in a not optional parameter: chromosome, start or end";var e=this.url+"?segment="+a+":"+b+","+c;if(this.isRegionAvalaible(a,b,c))return this.lockSuccessEventNotify=!1,this.datasets[this._getHashMapKey(a,b,c)];$.ajax({url:e,type:"GET",dataType:"xml",error:function(){alert("error");d.onError.notify("It is not allowed by Access-Control-Allow-Origin ")},success:function(e){try{d.xml=(new XMLSerializer).serializeToString(e);
var g=(new XMLSerializer).serializeToString(e),e=xml2json.parser(g),g=[];if(null!=e.dasgff.gff.segment.feature){for(var h=0;h<array.length;h++)e.dasgff.gff.segment.feature[h].chromosome=a;g.push(e.dasgff.gff.segment.feature)}else g.push([]);d.lockSuccessEventNotify?d.anticipateRegionRetrieved(g,a,b,c):d.getFinished(g,a,b,c)}catch(k){alert("There was a problem parsing the xml: "+k),console.log(e)}}})};
DasRegionDataAdapter.prototype.getFinished=function(a,b,c,d){this.dataset.loadFromJSON(a);this.datasets[this._getHashMapKey(b,c,d)]=this.dataset;this.successed.notify()};DasRegionDataAdapter.prototype.anticipateRegionRetrieved=function(a,b,c,d){this.dataset.loadFromJSON(a);this.datasets[this._getHashMapKey(b,c,d)]=a;this.lockSuccessEventNotify=!1;this.preloadSuccess.notify()};
DasRegionDataAdapter.prototype.setIntervalView=function(a,b){if(this.autoFill&&!this.lockSuccessEventNotify)for(var c in this.datasets){var d=c.split("-"),a=d[0],e=d[1],d=d[2];if(e<b&&b<d){var f=(d-e)/3;if(d-b<=f){this.lockSuccessEventNotify=!0;e=parseInt(d)+parseInt(d-e);this.fill(a,d,e,this.resource);break}if(b-e<=f){this.lockSuccessEventNotify=!0;c=parseInt(e)-parseInt(d-e);this.fill(a,c,e,this.resource);break}}}};
function DataAdapter(){this.dataset=new DataSet;this.internalId=Math.round(1E7*Math.random())}DataAdapter.prototype.toJSON=function(){return this.dataset.toJSON()};DataAdapter.prototype.getDataset=function(){return this.dataset};LocalRegionDataAdapter.prototype.toJSON=DataAdapter.prototype.toJSON;
function LocalRegionDataAdapter(a){DataAdapter.prototype.constructor.call(this);this.datasets={};this.autoFill=!0;null!=a&&null!=a.autoFill&&(this.autoFill=a.autoFill);this.features=[];this.dataset=new DataSet;this.resource="bed";this.featuresByChromosome={};this.loadedFromFeatures=!1;this.preloadSuccess=new Event(this);this.successed=new Event}
LocalRegionDataAdapter.prototype.loadFromFeatures=function(a){for(var b=0;b<a.length;b++){var c=a[b];if(null!=c.chromosome&&null!=c.start&&null!=c.end){var c=c.chromosome,d=new GenericFeatureFormatter(a[b]);this.features.push(c);null==this.featuresByChromosome[c]&&(this.featuresByChromosome[c]=[]);this.featuresByChromosome[c].push(d)}}this.loadedFromFeatures=!0};LocalRegionDataAdapter.prototype._getHashMapKey=function(a,b,c){return a+"-"+b+"-"+c};
LocalRegionDataAdapter.prototype.isRegionAvalaible=function(a,b,c){return null!=this.datasets[this._getHashMapKey(a,b,c)]};
LocalRegionDataAdapter.prototype.fill=function(a,b,c){if(null==a||null==b||null==c)throw"Missing value in a not optional parameter: chromosome, start or end";if(this.isRegionAvalaible(a,b,c))this.lockSuccessEventNotify=!1;else{var d=[],e=[];if(null!=this.featuresByChromosome[a])for(var f=0;f<this.featuresByChromosome[a].length;f++)this.featuresByChromosome[a][f].start<parseFloat(c)&&this.featuresByChromosome[a][f].end>parseFloat(b)&&e.push(this.featuresByChromosome[a][f]);this.loadedFromFeatures?
d=e:d[0]=e;this.lockSuccessEventNotify?this.anticipateRegionRetrieved(d,a,b,c):this.getFinished(d,a,b,c)}};LocalRegionDataAdapter.prototype.getFinished=function(a,b,c,d){this.dataset.loadFromJSON(a);this.datasets[this._getHashMapKey(b,c,d)]=this.dataset;this.successed.notify()};LocalRegionDataAdapter.prototype.anticipateRegionRetrieved=function(a,b,c,d){this.dataset.loadFromJSON(a);this.datasets[this._getHashMapKey(b,c,d)]=a;this.lockSuccessEventNotify=!1;this.preloadSuccess.notify()};
LocalRegionDataAdapter.prototype.setIntervalView=function(a,b){if(this.autoFill&&!this.lockSuccessEventNotify)for(var c in this.datasets){var d=c.split("-"),a=d[0],e=d[1],d=d[2];if(e<b&&b<d){var f=(d-e)/3;if(d-b<=f){this.lockSuccessEventNotify=!0;e=parseInt(d)+parseInt(d-e);this.fill(a,d,e,this.resource);break}if(b-e<=f){this.lockSuccessEventNotify=!0;c=parseInt(e)-parseInt(d-e);this.fill(a,c,e,this.resource);break}}}};function DataSet(){this.json=null}
DataSet.prototype.loadFromJSON=function(a){null!=a&&this.validate(a)&&(this.json=a)};DataSet.prototype.toJSON=function(){return this.json};DataSet.prototype.validate=function(){return!0};function FeatureDataSet(){DataSet.prototype.constructor.call(this)}FeatureDataSet.prototype.loadFromJSON=DataSet.prototype.loadFromJSON;FeatureDataSet.prototype.loadFromFile=DataSet.prototype.loadFromFile;FeatureDataSet.prototype.loadFromURL=DataSet.prototype.loadFromURL;FeatureDataSet.prototype.toJSON=DataSet.prototype.toJSON;
FeatureDataSet.prototype.validate=function(){return!0};function ExpressionMatrixDataSet(){DataSet.prototype.constructor.call(this);this.normalizedRows={};this.colorRows={};this.classesName=null;this._classMaxInterval={};this._classMinInterval={};this._json=null;this.groupByClass=!0}ExpressionMatrixDataSet.prototype.toJSON=DataSet.prototype.toJSON;ExpressionMatrixDataSet.prototype.loadFromJSON=function(a){this.validate(a)&&(this.json=a,this._json=JSON.parse(JSON.stringify(a)),this.init())};
ExpressionMatrixDataSet.prototype.getRowNameByStatisticValue=function(a,b,c){for(var a=this.getRowIndexByStatisticValue(a,b,c),b=this.getRowNames(),c=[],d=0;d<a.length;d++)c.push(b[a[d]]);return c};ExpressionMatrixDataSet.prototype.getRowIndexByStatisticValue=function(a,b,c){for(var d=this.getStatisticNames(),e=0;e<d.length;e++)if(d[e]==a){for(var a=[],d=this.getStatisticMatrix(),f=0;f<d.length;f++)d[f][e]>=b&&d[f][e]<=c&&a.push(f);return a}};
ExpressionMatrixDataSet.prototype.init=function(){this.normalizedRows={};this.colorRows={};this.classesName=null;this._classMaxInterval={};this._classMinInterval={};this.normalizeMatrix()};ExpressionMatrixDataSet.prototype.validate=function(){return!0};ExpressionMatrixDataSet.prototype.getStatisticNames=function(){return this.json.statisticMatrix.columnNames};ExpressionMatrixDataSet.prototype.getStatisticMatrix=function(){return this.json.statisticMatrix.matrix};
ExpressionMatrixDataSet.prototype.getRowNames=function(){return this.json.dataMatrix.rowNames};ExpressionMatrixDataSet.prototype.getColumnNames=function(){return this.json.dataMatrix.columnNames};ExpressionMatrixDataSet.prototype.getMatrix=function(){return this.json.dataMatrix.matrix};ExpressionMatrixDataSet.prototype.getClasses=function(){return this.json.classNames};
ExpressionMatrixDataSet.prototype.getClassesName=function(){if(null==this.classesName){var a=this.getClasses(),b=[];b.push(a[0]);this._classMinInterval[0]=0;for(var c=1;c<a.length;c++)a[c]!=b[b.length-1]&&(b.push(a[c]),this._classMaxInterval[b.length-2]=c-1,this._classMinInterval[b.length-1]=c);this._classMaxInterval[b.length-1]=a.length-1;this.classesName=b}return this.classesName};
ExpressionMatrixDataSet.prototype.getClassIntervalByIndex=function(a){null==this.classesName&&(this.classesName=this.getClassesName());return[this._classMinInterval[a],this._classMaxInterval[a]]};ExpressionMatrixDataSet.prototype.normalizeMatrix=function(){for(var a=0;a<this.getRowNames().length;a++)this.normalizedRows[a]=this.normalizedRow(a),this.colorRows[a]=this.getColorRow(a),this.classesName=this.getClassesName()};
ExpressionMatrixDataSet.prototype.normalizedRow=function(a){null==this.normalizedRows[a]&&(this.normalizedRows[a]=Normalizer.normalizeArray(this.getMatrix()[a]));return this.normalizedRows[a]};ExpressionMatrixDataSet.prototype.getNormalizedData=function(a,b){return this.normalizedRow([a])[b]};ExpressionMatrixDataSet.prototype.getColorRow=function(a){null==this.colorRows[a]&&(this.colorRows[a]=Colors.getHexStringByScoreArrayValue(this.normalizedRow(a)));return this.colorRows[a]};
ExpressionMatrixDataSet.prototype.getColor=function(a,b){return this.getColorRow(a)[b]};ExpressionMatrixDataSet.prototype.getClassesRange=function(){this.getClasses()};function SNPFeatureDataSet(){FeatureDataSet.prototype.constructor.call(this)}SNPFeatureDataSet.prototype=FeatureDataSet;SNPFeatureDataSet.prototype.constructor=FeatureDataSet;SNPFeatureDataSet.prototype.loadFromJSON=FeatureDataSet.prototype.loadFromJSON;SNPFeatureDataSet.prototype.loadFromFile=FeatureDataSet.prototype.loadFromFile;
SNPFeatureDataSet.prototype.loadFromURL=FeatureDataSet.prototype.loadFromURL;SNPFeatureDataSet.prototype.toJSON=FeatureDataSet.prototype.toJSON;SNPFeatureDataSet.prototype.validate=function(a){for(var a=a[0],b=0;b<a.length;b++){if(null==a[b].chromosome)throw"Data can not be validated because record "+b+" has not chromosome";if(null==a[b].start)throw"Data can not be validated because record "+b+" has not start";if(null==a[b].end)throw"Data can not be validated because record "+b+" has not end";}return!0};
CellBaseDataAdapter.prototype.toJSON=DataAdapter.prototype.toJSON;function CellBaseDataAdapter(a){DataAdapter.prototype.constructor.call(this);this.cellBaseManager=new CellBaseManager(a);this.successed=new Event}CellBaseDataAdapter.prototype.getVersion=function(){return this.cellBaseManager.getVersion()};CellBaseDataAdapter.prototype.getSpecies=function(){return this.cellBaseManager.getSpecies()};CellBaseDataAdapter.prototype.setVersion=function(a){this.cellBaseManager.setVersion(a)};
CellBaseDataAdapter.prototype.setSpecies=function(a){this.cellBaseManager.setSpecies(a)};CellBaseDataAdapter.prototype.fill=function(a,b,c,d){this.cellBaseManager.get(a,b,c,d);var e=this;this.cellBaseManager.successed.addEventListener(function(a,b){e.getFinished(b)})};CellBaseDataAdapter.prototype.getFinished=function(a){this.dataset.loadFromJSON(a);this.successed.notify()};
CellBaseDataAdapter.prototype.arrayToString=function(a,b){for(var c=new StringBuffer,d=0;d<a.length;d++)d!=a.length-1?c.append(a[d]+b):c.append(a[d]);return c.toString()};RegionCellBaseDataAdapter.prototype.setVersion=CellBaseDataAdapter.prototype.setVersion;RegionCellBaseDataAdapter.prototype.setSpecies=CellBaseDataAdapter.prototype.setSpecies;RegionCellBaseDataAdapter.prototype.toJSON=CellBaseDataAdapter.prototype.toJSON;
function RegionCellBaseDataAdapter(a,b){CellBaseDataAdapter.prototype.constructor.call(this,a);this.dataset=new FeatureDataSet;this.category="genomic";this.subcategory="region";this.resource=null;this.checkDuplicates=this.lockSuccessEventNotify=!1;this.datasets={};this.autoFill=!0;null!=b&&(null!=b.autoFill&&(this.autoFill=b.autoFill),null!=b.resource&&(this.resource=b.resource));this.preloadSuccess=new Event(this)}
RegionCellBaseDataAdapter.prototype._getHashMapKey=function(a,b,c){return a+"-"+b+"-"+c};RegionCellBaseDataAdapter.prototype.isRegionAvalaible=function(a,b,c){return null!=this.datasets[this._getHashMapKey(a,b,c)]};
RegionCellBaseDataAdapter.prototype.fill=function(a,b,c,d){var e=this;this.resource=d;if(null==a||null==b||null==c)throw"Missing value in a not optional parameter: chromosome, start or end";this.isRegionAvalaible(a,b,c)?this.lockSuccessEventNotify=!1:(this.cellBaseManager.successed=new Event(this),this.cellBaseManager.successed.addEventListener(function(d,g){e.lockSuccessEventNotify?e.anticipateRegionRetrieved(g,a,b,c):e.getFinished(g,a,b,c)}),this.cellBaseManager.get(this.category,this.subcategory,
a+":"+Math.ceil(b)+"-"+Math.ceil(c),d))};RegionCellBaseDataAdapter.prototype.getFinished=function(a,b,c,d){this.dataset.loadFromJSON(a);this.datasets[this._getHashMapKey(b,c,d)]=this.dataset;this.successed.notify()};RegionCellBaseDataAdapter.prototype.anticipateRegionRetrieved=function(a,b,c,d){this.dataset.loadFromJSON(a);this.datasets[this._getHashMapKey(b,c,d)]=a;this.lockSuccessEventNotify=!1;this.preloadSuccess.notify()};
RegionCellBaseDataAdapter.prototype.getFeaturesByPosition=function(a){var b=[],c={},d;for(d in this.datasets)for(var b=this.datasets[d].toJSON(),e=0;e<b.length;e++){var f=b[e];f.start<=a&&f.end>=a&&null==c[f.id]&&(b.push(f),c[f.id]=!0)}console.log(b.length);return b};
RegionCellBaseDataAdapter.prototype.setIntervalView=function(a,b){if(this.autoFill&&!this.lockSuccessEventNotify)for(var c in this.datasets){var d=c.split("-"),a=d[0],e=d[1],d=d[2];if(e<b&&b<d){var f=(d-e)/3;if(d-b<=f){this.lockSuccessEventNotify=!0;e=parseInt(d)+parseInt(d-e);this.fill(a,d,e,this.resource);break}if(b-e<=f){this.lockSuccessEventNotify=!0;c=parseInt(e)-parseInt(d-e);0>c&&(c=1);this.fill(a,c,e,this.resource);break}}}};GeneRegionCellBaseDataAdapter.prototype.setVersion=RegionCellBaseDataAdapter.prototype.setVersion;
GeneRegionCellBaseDataAdapter.prototype.setSpecies=RegionCellBaseDataAdapter.prototype.setSpecies;GeneRegionCellBaseDataAdapter.prototype.toJSON=RegionCellBaseDataAdapter.prototype.toJSON;GeneRegionCellBaseDataAdapter.prototype.setIntervalView=RegionCellBaseDataAdapter.prototype.setIntervalView;GeneRegionCellBaseDataAdapter.prototype.getFinished=RegionCellBaseDataAdapter.prototype.getFinished;GeneRegionCellBaseDataAdapter.prototype._getHashMapKey=RegionCellBaseDataAdapter.prototype._getHashMapKey;
GeneRegionCellBaseDataAdapter.prototype.isRegionAvalaible=RegionCellBaseDataAdapter.prototype.isRegionAvalaible;
function GeneRegionCellBaseDataAdapter(a,b){this.species=a;this.geneDataAdapter=new CellBaseManager(this.species);this.exonDataAdapter=this.transcriptDataAdapter=null;this.dataset=new FeatureDataSet;this.done=3;this.geneData=null;this.obtainTranscripts=!0;this.datasets={};this.autoFill=!0;null!=b&&(null!=b.autoFill&&(this.autoFill=b.autoFill),null!=b.obtainTranscripts&&(this.obtainTranscripts=b.obtainTranscripts));this.lockSuccessEventNotify=!1;this.preloadSuccess=new Event(this);this.successed=new Event}
GeneRegionCellBaseDataAdapter.prototype.partialRetrieveDone=function(a,b){this.done--;if("transcript"==a)for(var c=0;c<this.geneData.length;c++)this.geneData[c].transcript=[],this.geneData[c].transcript=b[c]};
GeneRegionCellBaseDataAdapter.prototype.fill=function(a,b,c){var d=this;this.chromosome=a;b=Math.ceil(b);c=Math.ceil(c);this.start=b;this.end=c;this.geneDataAdapter=new CellBaseManager(this.species);this.isRegionAvalaible(a,b,c)?this.lockSuccessEventNotify=!1:(this.geneDataAdapter.successed=new Event(this),this.geneDataAdapter.successed.addEventListener(function(e,f){d.retrievedGene(f,a,b,c)}),this.geneDataAdapter.get("genomic","region",a+":"+b+"-"+c,"gene"))};
GeneRegionCellBaseDataAdapter.prototype.retrieveExonInformation=function(a){this.exonDataAdapter=new CellBaseManager(this.species);var b=this;0==a.length?b.lockSuccessEventNotify?b.anticipateRegionRetrieved({},this.chromosome,this.start,this.end):b.getFinished({},this.chromosome,this.start,this.end):(this.exonDataAdapter.successed.addEventListener(function(a,d){for(var e=0,f=0;f<b.transcriptData.length;f++)for(var g=0;g<b.transcriptData[f].length;g++)b.transcriptData[f][g].exon=d[e],e++;for(f=0;f<
b.geneData.length;f++)b.geneData[f].transcript=b.transcriptData[f];b.lockSuccessEventNotify?b.anticipateRegionRetrieved(b.geneData,b.chromosome,b.start,b.end):b.getFinished(b.geneData,b.chromosome,b.start,b.end)}),this.exonDataAdapter.get("feature","transcript",a,"exon"))};
GeneRegionCellBaseDataAdapter.prototype.retrieveTranscriptInformation=function(a){this.transcriptDataAdapter=new CellBaseManager(this.species);var b=this;0==a.length?b.retrieveExonInformation(a):(this.transcriptDataAdapter.successed.addEventListener(function(a,d){b.transcriptData=d[0];for(var e=0;e<b.geneData.length;e++)b.geneData[e].transcript=b.transcriptData[e];for(var f="",g=0,e=0;e<b.geneData.length;e++)if(null!=b.geneData[e].transcript)for(var h=0;h<b.geneData[e].transcript.length;h++)f=f+","+
b.transcriptData[e][h].stableId,g++;f=f.substr(1,f.length);b.retrieveExonInformation(f)}),this.transcriptDataAdapter.get("feature","gene",a,"transcript"))};GeneRegionCellBaseDataAdapter.prototype.getFinished=function(a,b,c,d){this.dataset.loadFromJSON(a);this.datasets[this._getHashMapKey(b,c,d)]=this.dataset;this.successed.notify()};
GeneRegionCellBaseDataAdapter.prototype.anticipateRegionRetrieved=function(a,b,c,d){this.dataset.loadFromJSON(a);this.datasets[this._getHashMapKey(b,c,d)]=this.dataset;this.lockSuccessEventNotify=!1;this.preloadSuccess.notify()};
GeneRegionCellBaseDataAdapter.prototype.getFeaturesByPosition=function(a){var b=[],c={},d;for(d in this.datasets)for(var e=this.datasets[d].toJSON(),f=0;f<e.length;f++){var g=e[f];if(g.start<=a&&g.end>=a&&null==c[g.id]&&(b.push(g),c[g.id]=!0,g=g.transcript,null!=g))for(var h=0;h<g.length;h++){var k=g[h];if(k.start<=a&&k.end>=a&&(b.push(k),k=k.exon,null!=k))for(var l=0;l<k.length;l++){var m=k[l];m.start<=a&&m.end>=a&&b.push(m)}}}return b};
GeneRegionCellBaseDataAdapter.prototype.retrievedGene=function(a,b,c,d){this.geneData=a[0];for(var e=new String,f=0;f<a[0].length;f++)e=e+","+a[0][f].stableId;this.obtainTranscripts?this.retrieveTranscriptInformation(e.substr(1,e.length)):this.lockSuccessEventNotify?this.anticipateRegionRetrieved(a[0],b,c,d):this.getFinished(a[0],b,c,d)};KaryotypeCellBaseDataAdapter.prototype.setVersion=CellBaseDataAdapter.prototype.setVersion;KaryotypeCellBaseDataAdapter.prototype.getVersion=CellBaseDataAdapter.prototype.getVersion;
KaryotypeCellBaseDataAdapter.prototype.getSpecies=CellBaseDataAdapter.prototype.getSpecies;KaryotypeCellBaseDataAdapter.prototype.setSpecies=CellBaseDataAdapter.prototype.setSpecies;KaryotypeCellBaseDataAdapter.prototype.getFinished=CellBaseDataAdapter.prototype.getFinished;KaryotypeCellBaseDataAdapter.prototype.toJSON=CellBaseDataAdapter.prototype.toJSON;
function KaryotypeCellBaseDataAdapter(a){CellBaseDataAdapter.prototype.constructor.call(this,a);this.species=a;this.category="feature";this.subcategory="karyotype";this.resource="chromosome";this.chromosomeNames=null}KaryotypeCellBaseDataAdapter.prototype.fill=function(){var a=this,b=new CellBaseDataAdapter(this.species);b.successed.addEventListener(function(){a.getCytobandsByChromosome(b.dataset.json)});b.fill("feature","karyotype","none","chromosome")};
KaryotypeCellBaseDataAdapter.prototype.sortfunction=function(a,b){var c=!0,d;for(i=0;i<a.length&&!0==c;i++)d=a.charAt(i),-1=="0123456789.".indexOf(d)&&(c=!1);return!c?1:a-b};KaryotypeCellBaseDataAdapter.prototype.IsNumeric=function(a){var b=!0,c;for(i=0;i<a.length&&!0==b;i++)c=a.charAt(i),-1=="0123456789.".indexOf(c)&&(b=!1);return b};
KaryotypeCellBaseDataAdapter.prototype.getCytobandsByChromosome=function(a){var b=this,c=new CellBaseManager(this.species);c.successed.addEventListener(function(a,c){b.getFinished(c)});a.sort(this.sortfunction);this.chromosomeNames=a;c.get("feature","karyotype",a.toString(),"cytoband")};XrefFeatureListCellBaseDataAdapter.prototype.setVersion=CellBaseDataAdapter.prototype.setVersion;XrefFeatureListCellBaseDataAdapter.prototype.setSpecies=CellBaseDataAdapter.prototype.setSpecies;
XrefFeatureListCellBaseDataAdapter.prototype.getVersion=CellBaseDataAdapter.prototype.getVersion;XrefFeatureListCellBaseDataAdapter.prototype.getSpecies=CellBaseDataAdapter.prototype.getSpecies;XrefFeatureListCellBaseDataAdapter.prototype.getFinished=CellBaseDataAdapter.prototype.getFinished;XrefFeatureListCellBaseDataAdapter.prototype.arrayToString=CellBaseDataAdapter.prototype.arrayToString;XrefFeatureListCellBaseDataAdapter.prototype.toJSON=CellBaseDataAdapter.prototype.toJSON;
function XrefFeatureListCellBaseDataAdapter(a){CellBaseDataAdapter.prototype.constructor.call(this,a);this.category="feature";this.subcategory="id";this.resource="xref?dbname=";this.databases="go_cellular_component,go_molecular_function,go_biological_process,kegg,reactome,ensembl_gene,interpro,uniprot_swissprot_accession,jaspar".split(",")}
XrefFeatureListCellBaseDataAdapter.prototype.fill=function(a,b){this.resource+=this.arrayToString(this.databases,",");null!=b&&(a+="&identifier="+b);this.cellBaseManager.get(this.category,this.subcategory,a,this.resource);var c=this;this.cellBaseManager.successed.addEventListener(function(a,b){c.getFinished(b)})};
function InfoWidget(a,b,c){this.id="InfoWidget_"+Math.round(1E7*Math.random());this.targetId=null;this.species=b;this.featureId=this.title=null;this.width=800;this.height=400;null!=a&&(this.targetId=a);null!=c&&(null!=c.title&&(this.title=c.title),null!=c.width&&(this.width=c.width),null!=c.height&&(this.height=c.height));switch(b){case "hsa":this.ensemblSpecie="Homo_sapiens";this.reactomeSpecie="48887";this.wikipathwaysSpecie="Homo+sapiens";this.haphapSpecie=this.dbsnpSpecie=this.intactSpecie=this.uniprotSpecie=
this.omimSpecie="";break;case "mmu":this.ensemblSpecies="Mus_musculus";this.reactomeSpecies="48892";this.wikipathwaysSpecie="Mus+musculus";this.haphapSpecie=this.dbsnpSpecie=this.intactSpecie=this.uniprotSpecie=this.omimSpecie="";break;case "dre":this.ensemblSpecie="Danio_rerio",this.reactomeSpecie="68323",this.wikipathwaysSpecie="Danio+rerio",this.haphapSpecie=this.dbsnpSpecie=this.intactSpecie=this.uniprotSpecie=this.omimSpecie=""}}
InfoWidget.prototype.draw=function(a){this.feature=a;console.log(a.getName());this.panel=Ext.getCmp(this.title+" "+this.feature.getName());null==this.panel?(this.render(),this.panel.show(),this.getData()):this.panel.show()};
InfoWidget.prototype.render=function(){this.panel=Ext.create("Ext.ux.Window",{title:this.title+" "+this.feature.getName(),id:this.title+" "+this.feature.getName(),resizable:!1,minimizable:!0,constrain:!0,closable:!0,height:this.height,width:this.width,layout:{type:"hbox",align:"stretch"},items:[this.getTreePanel()],buttonAlign:"right",listeners:{scope:this,minimize:function(){this.panel.hide()},destroy:function(){delete this.panel}}})};
InfoWidget.prototype.getTreePanel=function(){var a=this.getdataTypes();this.checkDataTypes(a);a=Ext.create("Ext.data.TreeStore",{root:{expanded:!0,text:"Options",children:a}});return Ext.create("Ext.tree.Panel",{title:"Detailed information",bodyPadding:10,flex:1,border:!1,store:a,useArrows:!0,rootVisible:!1,listeners:{scope:this,itemclick:function(a,c){this.optionClick(c.data)}}})};
InfoWidget.prototype.doGrid=function(a,b,c,d){for(var e=Ext.create("Ext.grid.feature.Grouping",{groupHeaderTpl:d+' ({rows.length} Item{[values.rows.length > 1 ? "s" : ""]})'}),f=[],g=0;g<b.length;g++)f.push({type:"string",dataIndex:b[g]});f={ftype:"filters",local:!0,filters:f};Ext.define(c,{extend:"Ext.data.Model",fields:b});b=Ext.create("Ext.data.Store",{groupField:d,model:c});return Ext.create("Ext.grid.Panel",{id:this.id+c,store:b,title:c,border:!1,cls:"panel-border-left",flex:3,features:[e,f],
columns:a,bbar:["->",{text:"Clear Grouping",handler:function(){e.disable()}}]})};InfoWidget.prototype.checkDataTypes=function(a){for(var b=0;b<a.length;b++)null!=a[b].children?(a[b].iconCls="icon-box",a[b].expanded=!0,this.checkDataTypes(a[b].children)):(a[b].iconCls="icon-blue-box",a[b].leaf=!0)};InfoWidget.prototype.getdataTypes=function(){return[]};InfoWidget.prototype.optionClick=function(){};InfoWidget.prototype.getData=function(){};
InfoWidget.prototype.getGeneTemplate=function(){return new Ext.XTemplate('<p><span class="panel-border-bottom"><span class="ssel s130">{externalName}</span> &nbsp; <span class="emph s120"> {stableId} </span></span>',' &nbsp; <a target="_blank" href="http://www.ensembl.org/'+this.ensemblSpecie+'/Location/View?g={stableId}">Ensembl</a>',"</p><br>",'<p><span class="w75 dis s90">Location: </span> <span class="">{chromosome}:{start}-{end} </span><span style="margin-left:50px" class=" dis s90">Strand: </span> {strand}</p>',
'<p><span class="w75 dis s90">Biotype: </span> {biotype}</p>','<p><span class="w75 dis s90">Description: </span> <span><tpl if="description == &quot;&quot;">No description available</tpl>{description}</span></p>',"<br>",'<p><span class="w75 dis s90">Source: </span> <span class="s110">{source}</span></p>','<p><span class="w75 dis s90">External DB: </span> {externalDb}</p>','<p><span class="w75 dis s90">Status: </span> {status}</p>')};
InfoWidget.prototype.getTranscriptTemplate=function(){return new Ext.XTemplate('<p><span class="panel-border-bottom"><span class="ssel s130">{externalName}</span> &nbsp; <span class="emph s120"> {stableId} </span></span>',' &nbsp; <a target="_blank" href="http://www.ensembl.org/'+this.ensemblSpecie+'/Transcript/Transcript?t={stableId}">Ensembl</a>',"</p><br>",'<p><span class="w100 dis s90">Location: </span> <span class="">{chromosome}:{start}-{end} </span><span style="margin-left:50px" class=" dis s90">Strand: </span> {strand}</p>',
'<p><span class="w100 dis s90">Biotype: </span> {biotype}</p>','<p><span class="w100 dis s90">Description: </span> <span><tpl if="description == &quot;&quot;">No description available</tpl>{description}</span></p>',"<br>",'<p><span class="w100 dis s90">CDS &nbsp; (start-end): </span> {codingRegionStart}-{codingRegionEnd} <span style="margin-left:50px" class="w100 dis s90">CDNA (start-end): </span> {cdnaCodingStart}-{cdnaCodingEnd}</p>',"<br>",'<p><span class="w100 dis s90">External DB: </span> {externalDb}</p>',
'<p><span class="w100 dis s90">Status: </span> {status}</p><br>')};
InfoWidget.prototype.getSnpTemplate=function(){return new Ext.XTemplate('<p><span class="panel-border-bottom"><span class="ssel s130">{name}</span></span>',' &nbsp; <a target="_blank" href="http://www.ensembl.org/'+this.ensemblSpecie+'/Variation/Summary?v={name}">Ensembl</a>',"</p><br>",'<p><span class="w140 dis s90">Location: </span> <span class="">{chromosome}:{start}-{end} </span><span style="margin-left:50px" class=" dis s90">Strand: </span> {strand}</p>','<p><span class="w140 dis s90">Source: </span> <span class="s110">{source}</span></p>',
"<br>",'<p><span class="w140 dis s90">Map weight: </span> {mapWeight}</p>','<p><span class="w140 dis s90">Allele string: </span> {alleleString}</p>','<p><span class="w140 dis s90">Ancestral allele: </span> {ancestralAllele}</p>','<p><span class="w140 dis s90">Display So consequence: </span> {displaySoConsequence}</p>','<p><span class="w140 dis s90">So consequence type: </span> {soConsequenceType}</p>','<p><span class="w140 dis s90">Display consequence: </span> {displayConsequence}</p>','<p><span class="w140 dis s90">Sequence: </span> {sequence}</p>')};
InfoWidget.prototype.getExonTemplate=function(){return new Ext.XTemplate('<span><span class="panel-border-bottom"><span class="ssel s110">{stableId}</span></span></span>','<span><span style="margin-left:30px" class="dis s90"> Location: </span> <span class="">{chromosome}:{start}-{end} </span></span>','<span><span style="margin-left:30px" class="dis s90"> Strand: </span> {strand}</span>')};
InfoWidget.prototype.getVCFVariantTemplate=function(){return new Ext.XTemplate('<p><span><span class="panel-border-bottom"><span class="ssel s130">{chromosome}:{start}-{alt}</span> &nbsp; <span class="emph s120"> {label} </span></span></span></p><br>','<p><span class="w75 dis s90">Alt: </span> {alt}</p>','<p><span class="w75 dis s90">Ref: </span> {ref}</p>','<p><span class="w75 dis s90">Quality: </span> {quality}</p>','<p><span class="w75 dis s90">Format: </span> {format}</p>','<p><span class="w75 dis s90">Samples: </span> {samples}</p>',
'<p><span class="w75 dis s90">Info: </span> {info}</p>')};GeneInfoWidget.prototype.draw=InfoWidget.prototype.draw;GeneInfoWidget.prototype.render=InfoWidget.prototype.render;GeneInfoWidget.prototype.getTreePanel=InfoWidget.prototype.getTreePanel;GeneInfoWidget.prototype.checkDataTypes=InfoWidget.prototype.checkDataTypes;GeneInfoWidget.prototype.doGrid=InfoWidget.prototype.doGrid;GeneInfoWidget.prototype.getGeneTemplate=InfoWidget.prototype.getGeneTemplate;
GeneInfoWidget.prototype.getTranscriptTemplate=InfoWidget.prototype.getTranscriptTemplate;function GeneInfoWidget(a,b,c){null==c&&(c={});c.title="Gene Info";InfoWidget.prototype.constructor.call(this,a,b,c)}GeneInfoWidget.prototype.getdataTypes=function(){return dataTypes=[{text:"Genomic",children:[{text:"Information"},{text:"Transcripts"}]},{text:"Functional information",children:[{text:"GO"},{text:"Reactome"},{text:"Interpro"}]},{text:"Regulatory",children:[{text:"Jaspar"},{text:"miRNA"}]},{text:"3D protein"}]};
GeneInfoWidget.prototype.optionClick=function(a){if(a.leaf)switch(null!=this.panel.getComponent(1)&&(this.panel.getComponent(1).hide(),this.panel.remove(1,!1)),a.text){case "Information":this.panel.add(this.getInfoPanel(this.data).show());break;case "Transcripts":this.panel.add(this.getTranscriptGrid(this.data.transcripts).show());break;case "GO":this.panel.add(this.getXrefGrid(this.data.go,"GO").show());break;case "Interpro":this.panel.add(this.getXrefGrid(this.data.interpro,"Interpro").show());
break;case "Reactome":this.panel.add(this.getXrefGrid(this.data.reactome,"Reactome").show());break;case "3D protein":this.panel.add(this.get3Dprotein(this.data.snps).show())}};GeneInfoWidget.prototype.getInfoPanel=function(a){if(null==this.infoPanel){var b=this.getGeneTemplate();this.infoPanel=Ext.create("Ext.panel.Panel",{title:"Information",border:!1,cls:"panel-border-left",flex:3,bodyPadding:10,data:a,tpl:b})}return this.infoPanel};
GeneInfoWidget.prototype.getTranscriptGrid=function(a){if(null==this.transcriptGrid){for(var b=this.getTranscriptTemplate(),c=[],d=0;d<a.length;d++){var e=Ext.create("Ext.panel.Panel",{border:!1,bodyPadding:5,data:a[d],tpl:b});c.push(e)}this.transcriptGrid=Ext.create("Ext.panel.Panel",{title:"Transcripts ("+d+")",border:!1,cls:"panel-border-left",flex:3,bodyPadding:5,autoScroll:!0,items:c})}return this.transcriptGrid};
GeneInfoWidget.prototype.getXrefGrid=function(a,b){null==this[b+"Grid"]&&(0>=a.length?this[b+"Grid"]=Ext.create("Ext.panel.Panel",{cls:"panel-border-left",border:!1,flex:3,bodyPadding:"40",html:"No results found"}):(this[b+"Grid"]=this.doGrid([{header:"Display Id",dataIndex:"displayId",flex:1},{header:"Description",dataIndex:"description",flex:3}],["description","displayId"],b,""),this[b+"Grid"].store.loadData(a)));return this[b+"Grid"]};
GeneInfoWidget.prototype.get3Dprotein=function(){var a=this;if(null==this.p3dProtein){this.p3dProtein=Ext.create("Ext.tab.Panel",{title:"3D Protein Viewer",border:!1,cls:"panel-border-left",flex:3,autoScroll:!0});var b=[];$.ajax({url:"http://ws.bioinfo.cipf.es/celldb/rest/v1/hsa/feature/id/"+this.feature.feature.stableId+"/xref?dbname=pdb",async:!1,success:function(c){if(""!=c){b=c.trim().split("\n");for(c=0;c<b.length;c++){var d=b[c].trim(),d=Ext.create("Ext.panel.Panel",{title:d,bodyCls:"background-black",
html:'<center><canvas class="ChemDoodleWebComponent" id="pdb_canvas_'+d+'" width="600" height="600" style="width: 600px; height: 600px; ">This browser does not support HTML5/Canvas.</canvas></center>',listeners:{afterrender:function(a){a=a.title;ChemDoodle.default_backgroundColor="#000000";var b=new ChemDoodle.TransformCanvas3D("pdb_canvas_"+a,300,300);b.gl?(b.specs.set3DRepresentation("Ball and Stick"),b.specs.proteins_ribbonCartoonize=!0,b.handle=null,b.timeout=15,b.startAnimation=ChemDoodle._AnimatorCanvas.prototype.startAnimation,
b.stopAnimation=ChemDoodle._AnimatorCanvas.prototype.stopAnimation,b.isRunning=ChemDoodle._AnimatorCanvas.prototype.isRunning,b.dblclick=ChemDoodle.RotatorCanvas.prototype.dblclick,b.nextFrame=function(a){var b=[];mat4.identity(b);var a=a/1E3,c=Math.PI/15;mat4.rotate(b,c*a,[1,0,0]);mat4.rotate(b,c*a,[0,1,0]);mat4.rotate(b,c*a,[0,0,1]);mat4.multiply(this.rotationMatrix,b)},$.get("http://www.rcsb.org/pdb/files/"+a+".pdb",function(a){a=ChemDoodle.readPDB(a);b.loadMolecule(a);b.startAnimation()})):(b.emptyMessage=
"Your browser does not support WebGL",b.displayMessage())}}});a.p3dProtein.add(d)}}else a.p3dProtein.setTitle("No proteins found")}})}return this.p3dProtein};GeneInfoWidget.prototype.getEnsembleId=function(){};
GeneInfoWidget.prototype.getData=function(){var a=this;this.panel.disable();this.panel.setLoading("Getting information...");var b=new CellBaseDataAdapter(this.species);b.successed.addEventListener(function(){a.dataReceived(JSON.parse(b.toJSON()))});b.fill("feature","gene",this.feature.feature.stableId,"fullinfo")};GeneInfoWidget.prototype.dataReceived=function(a){this.data=a[0];this.optionClick({text:"Information",leaf:"true"});this.panel.enable();this.panel.setLoading(!1)};
ProteinInfoWidget.prototype.draw=InfoWidget.prototype.draw;ProteinInfoWidget.prototype.render=InfoWidget.prototype.render;ProteinInfoWidget.prototype.getTreePanel=InfoWidget.prototype.getTreePanel;ProteinInfoWidget.prototype.checkDataTypes=InfoWidget.prototype.checkDataTypes;ProteinInfoWidget.prototype.doGrid=InfoWidget.prototype.doGrid;function ProteinInfoWidget(a,b,c){null==c&&(c={});c.title="Protein Info";InfoWidget.prototype.constructor.call(this,a,b,c)}
ProteinInfoWidget.prototype.getdataTypes=function(){return dataTypes=[{text:"Sumary",children:[{text:"Long"},{text:"Seq"}]},{text:"Functional information",children:[{text:"GO"},{text:"Reactome"},{text:"Interpro"}]},{text:"Interactions"},{text:"Variations"}]};ProteinInfoWidget.prototype.optionClick=function(a){a.leaf&&null!=this.panel.getComponent(1)&&(this.panel.getComponent(1).hide(),this.panel.remove(1,!1))};SnpInfoWidget.prototype.draw=InfoWidget.prototype.draw;SnpInfoWidget.prototype.render=InfoWidget.prototype.render;
SnpInfoWidget.prototype.getTreePanel=InfoWidget.prototype.getTreePanel;SnpInfoWidget.prototype.checkDataTypes=InfoWidget.prototype.checkDataTypes;SnpInfoWidget.prototype.doGrid=InfoWidget.prototype.doGrid;SnpInfoWidget.prototype.getSnpTemplate=InfoWidget.prototype.getSnpTemplate;function SnpInfoWidget(a,b,c){null==c&&(c={});c.title="SNP Info";InfoWidget.prototype.constructor.call(this,a,b,c)}
SnpInfoWidget.prototype.getdataTypes=function(){return dataTypes=[{text:"Genomic",children:[{text:"Information"},{text:"Gene"}]},{text:"Consequence Type"},{text:"Population"}]};SnpInfoWidget.prototype.optionClick=function(a){if(a.leaf)switch(null!=this.panel.getComponent(1)&&(this.panel.getComponent(1).hide(),this.panel.remove(1,!1)),a.text){case "Information":this.panel.add(this.getInfoPanel(this.data).show())}};
SnpInfoWidget.prototype.getInfoPanel=function(a){if(null==this.infoPanel){var b=this.getSnpTemplate();this.infoPanel=Ext.create("Ext.panel.Panel",{title:"Information",border:!1,cls:"panel-border-left",flex:3,bodyPadding:10,data:a,tpl:b})}return this.infoPanel};
SnpInfoWidget.prototype.getData=function(){var a=this;this.panel.disable();this.panel.setLoading("Getting information...");var b=new CellBaseDataAdapter(this.species);b.successed.addEventListener(function(){a.dataReceived(JSON.parse(b.toJSON()))});b.fill("feature","snp",this.feature.getName(),"fullinfo")};
SnpInfoWidget.prototype.dataReceived=function(a){for(var a=a[0],b=0;b<a.length;b++)a[b].chromosome==this.feature.feature.chromosome&&a[b].start==this.feature.start&&a[b].end==this.feature.end&&(this.data=a[b],console.log(a[b]));this.optionClick({text:"Information",leaf:"true"});this.panel.enable();this.panel.setLoading(!1)};TranscriptInfoWidget.prototype.draw=InfoWidget.prototype.draw;TranscriptInfoWidget.prototype.render=InfoWidget.prototype.render;TranscriptInfoWidget.prototype.getTreePanel=InfoWidget.prototype.getTreePanel;
TranscriptInfoWidget.prototype.checkDataTypes=InfoWidget.prototype.checkDataTypes;TranscriptInfoWidget.prototype.doGrid=InfoWidget.prototype.doGrid;TranscriptInfoWidget.prototype.getGeneTemplate=InfoWidget.prototype.getGeneTemplate;TranscriptInfoWidget.prototype.getTranscriptTemplate=InfoWidget.prototype.getTranscriptTemplate;TranscriptInfoWidget.prototype.getExonTemplate=InfoWidget.prototype.getExonTemplate;
function TranscriptInfoWidget(a,b,c){null==c&&(c={});c.title="Transcript";InfoWidget.prototype.constructor.call(this,a,b,c)}TranscriptInfoWidget.prototype.getdataTypes=function(){return dataTypes=[{text:"Genomic",children:[{text:"Information"},{text:"Gene"},{text:"Exons"}]},{text:"Functional information",children:[{text:"GO"},{text:"Interpro"},{text:"Reactome"}]},{text:"Variation",children:[{text:"SNPs"},{text:"Mutations"}]},{text:"Regulatory",children:[]},{text:"3D protein"}]};
TranscriptInfoWidget.prototype.optionClick=function(a){if(a.leaf)switch(null!=this.panel.getComponent(1)&&(this.panel.getComponent(1).hide(),this.panel.remove(1,!1)),a.text){case "Information":this.panel.add(this.getInfoPanel(this.data).show());break;case "Gene":this.panel.add(this.getGenePanel(this.data.gene).show());break;case "Exons":this.panel.add(this.getExonsGrid(this.data.exons).show());break;case "GO":this.panel.add(this.getXrefGrid(this.data.go,"GO").show());break;case "Interpro":this.panel.add(this.getXrefGrid(this.data.interpro,
"Interpro").show());break;case "Reactome":this.panel.add(this.getXrefGrid(this.data.reactome,"Reactome").show());break;case "SNPs":this.panel.add(this.getSnpsGrid(this.data.snps).show());break;case "3D protein":this.panel.add(this.get3Dprotein(this.data.snps).show())}};
TranscriptInfoWidget.prototype.getInfoPanel=function(a){if(null==this.infoPanel){var b=this.getTranscriptTemplate();this.infoPanel=Ext.create("Ext.panel.Panel",{title:"Information",border:!1,cls:"panel-border-left",flex:3,bodyPadding:10,autoScroll:!0,data:a,tpl:b})}return this.infoPanel};
TranscriptInfoWidget.prototype.getGenePanel=function(a){if(null==this.genePanel){var b=this.getGeneTemplate();this.genePanel=Ext.create("Ext.panel.Panel",{title:"Gene",border:!1,cls:"panel-border-left",flex:3,bodyPadding:10,data:a,tpl:b})}return this.genePanel};
TranscriptInfoWidget.prototype.getExonsGrid=function(a){if(null==this.exonsGrid){for(var b=this.getExonTemplate(),c=[],d=0;d<a.length;d++){var e=Ext.create("Ext.panel.Panel",{border:!1,bodyPadding:5,data:a[d],tpl:b});c.push(e)}this.exonsGrid=Ext.create("Ext.panel.Panel",{title:"Exons ("+d+")",border:!1,cls:"panel-border-left",flex:3,bodyPadding:5,autoScroll:!0,items:c})}return this.exonsGrid};
TranscriptInfoWidget.prototype.getXrefGrid=function(a,b){null==this[b+"Grid"]&&(0>=a.length?this[b+"Grid"]=Ext.create("Ext.panel.Panel",{cls:"panel-border-left",border:!1,flex:3,bodyPadding:"40",html:"No results found"}):(this[b+"Grid"]=this.doGrid([{header:"Display Id",dataIndex:"displayId",flex:1},{header:"Description",dataIndex:"description",flex:3}],["description","displayId"],b,""),this[b+"Grid"].store.loadData(a)));return this[b+"Grid"]};
TranscriptInfoWidget.prototype.getSnpsGrid=function(a){null==this.snpsGrid&&(this.snpsGrid=this.doGrid([{header:"Name",dataIndex:"name",flex:2},{header:"Location",xtype:"templatecolumn",tpl:"{chromosome}:{start}-{end}",flex:2},{header:"Strand",dataIndex:"strand",flex:0.7},{header:"Sequence",dataIndex:"sequence",flex:2}],"chromosome,start,end,name,strand,sequence".split(","),"SNPs",""),this.snpsGrid.store.loadData(a));return this.snpsGrid};
TranscriptInfoWidget.prototype.get3Dprotein=function(){var a=this;if(null==this.p3dProtein){this.p3dProtein=Ext.create("Ext.tab.Panel",{title:"3D Protein Viewer",border:!1,cls:"panel-border-left",flex:3,autoScroll:!0});var b=[];$.ajax({url:"http://ws.bioinfo.cipf.es/celldb/rest/v1/hsa/feature/id/"+this.feature.feature.stableId+"/xref?dbname=pdb",async:!1,success:function(c){if(""!=c){b=c.trim().split("\n");for(c=0;c<b.length;c++){var d=b[c].trim(),d=Ext.create("Ext.panel.Panel",{title:d,bodyCls:"background-black",
html:'<canvas class="ChemDoodleWebComponent" id="pdb_canvas_'+d+'" width="600" height="600" style="width: 600px; height: 600px; ">This browser does not support HTML5/Canvas.</canvas>',listeners:{afterrender:function(a){a=a.title;ChemDoodle.default_backgroundColor="#000000";var b=new ChemDoodle.TransformCanvas3D("pdb_canvas_"+a,300,300);b.gl?(b.specs.set3DRepresentation("Ball and Stick"),b.specs.proteins_ribbonCartoonize=!0,b.handle=null,b.timeout=15,b.startAnimation=ChemDoodle._AnimatorCanvas.prototype.startAnimation,
b.stopAnimation=ChemDoodle._AnimatorCanvas.prototype.stopAnimation,b.isRunning=ChemDoodle._AnimatorCanvas.prototype.isRunning,b.dblclick=ChemDoodle.RotatorCanvas.prototype.dblclick,b.nextFrame=function(a){var b=[];mat4.identity(b);var a=a/1E3,c=Math.PI/15;mat4.rotate(b,c*a,[1,0,0]);mat4.rotate(b,c*a,[0,1,0]);mat4.rotate(b,c*a,[0,0,1]);mat4.multiply(this.rotationMatrix,b)},$.get("http://www.rcsb.org/pdb/files/"+a+".pdb",function(a){a=ChemDoodle.readPDB(a);b.loadMolecule(a);b.startAnimation()})):(b.emptyMessage=
"Your browser does not support WebGL",b.displayMessage())}}});a.p3dProtein.add(d)}}else a.p3dProtein.setTitle("No proteins found")}})}return this.p3dProtein};TranscriptInfoWidget.prototype.getData=function(){var a=this;this.panel.disable();this.panel.setLoading("Getting information...");var b=new CellBaseDataAdapter(this.species);b.successed.addEventListener(function(){a.dataReceived(JSON.parse(b.toJSON()))});b.fill("feature","transcript",this.feature.feature.stableId,"fullinfo")};
TranscriptInfoWidget.prototype.dataReceived=function(a){this.data=a[0];this.optionClick({text:"Information",leaf:"true"});this.panel.enable();this.panel.setLoading(!1)};VCFVariantInfoWidget.prototype.draw=InfoWidget.prototype.draw;VCFVariantInfoWidget.prototype.render=InfoWidget.prototype.render;VCFVariantInfoWidget.prototype.getTreePanel=InfoWidget.prototype.getTreePanel;VCFVariantInfoWidget.prototype.checkDataTypes=InfoWidget.prototype.checkDataTypes;VCFVariantInfoWidget.prototype.doGrid=InfoWidget.prototype.doGrid;
VCFVariantInfoWidget.prototype.getVCFVariantTemplate=InfoWidget.prototype.getVCFVariantTemplate;function VCFVariantInfoWidget(a,b,c){null==c&&(c={});c.title="VCF variant Info";InfoWidget.prototype.constructor.call(this,a,b,c)}VCFVariantInfoWidget.prototype.getdataTypes=function(){return dataTypes=[{text:"Genomic",children:[{text:"Information"}]}]};
VCFVariantInfoWidget.prototype.optionClick=function(a){if(a.leaf)switch(null!=this.panel.getComponent(1)&&(this.panel.getComponent(1).hide(),this.panel.remove(1,!1)),a.text){case "Information":this.panel.add(this.getInfoPanel(this.data).show())}};VCFVariantInfoWidget.prototype.getInfoPanel=function(a){if(null==this.infoPanel){var b=this.getVCFVariantTemplate();this.infoPanel=Ext.create("Ext.panel.Panel",{title:"Information",border:!1,cls:"panel-border-left",flex:3,bodyPadding:10,data:a,tpl:b})}return this.infoPanel};
VCFVariantInfoWidget.prototype.getData=function(){this.panel.disable();this.panel.setLoading("Getting information...");this.dataReceived(this.feature)};VCFVariantInfoWidget.prototype.dataReceived=function(a){this.data=a.feature;this.optionClick({text:"Information",leaf:"true"});this.panel.enable();this.panel.setLoading(!1)};
function CellBaseManager(a){this.host="http://ws.bioinfo.cipf.es/cellbase/rest";this.version="v1";this.species=a;CELLBASEHOST=this.host;this.subcategory=this.category=null;this.contentformat="jsonp";this.fileformat="";this.outputcompress=!1;this.dataType="script";this.resource=this.query="";this.async=!0;this.maxQuery=20;this.numberQueries=0;this.results=[];this.resultsCount=[];this.batching=!1;this.completed=new Event;this.successed=new Event;this.batchSuccessed=new Event;this.error=new Event;this.setVersion=
function(a){this.version=a};this.setSpecies=function(a){this.species=a};this.getVersion=function(){return this.version};this.getSpecies=function(){return this.species};this.setAsync=function(a){this.async=a};this.getUrl=function(){return null!=this.query?this.host+"/"+this.version+"/"+this.species+"/"+this.category+"/"+this.subcategory+"/"+this.query+"/"+this.resource:this.host+"/"+this.version+"/"+this.species+"/"+this.category+"/"+this.subcategory+"/"+this.resource};this.get=function(a,c,d,e,f){if(d instanceof
Array)this.batching=!0,this.results=[],this.getMultiple(a,c,d,e);else{var d=new String(d),d=d.replace(/\s/g,""),g=d.split(",");this.maxQuery<g.length?(this.batching=!0,this.getMultiple(a,c,g,e,f)):(this.batching=!1,this.getSingle(a,c,d,e,f))}};this._joinToResults=function(a){this.resultsCount.push(!0);this.results[a.id]=a.data;if(this.numberQueries==this.resultsCount.length){for(var a=[],c=0;c<this.results.length;c++)for(var d=0;d<this.results[c].length;d++)a.push(this.results[c][d]);this.successed.notify(a)}};
this.getSingle=function(a,c,d,e,f,g){this.category=a;this.subcategory=c;this.query=d;this.resource=e;this._callServer(this.getUrl(),f,g)};this.getMultiple=function(a,c,d,e){var f=[];if(d.length>this.maxQuery)for(var g=0;g<d.length;g+=this.maxQuery)f.push(d.slice(g,g+this.maxQuery));this.numberQueries=f.length;var h=this;this.batchSuccessed.addEventListener(function(a,b){h._joinToResults(b)});for(g=0;g<f.length;g++)this.results.push([]),this.getSingle(a,c,f[g].toString(),e,g)};this._callServer=function(a,
c,d){var e=this;$.ajax({url:a,type:"GET",async:this.async,data:{of:this.contentformat,outputcompress:this.outputcompress,callbackParam:"response"},dataType:this.dataType,jsonp:"callback",success:function(){"undefined"!=typeof response?(null!=d&&d(response),e.batching?e.batchSuccessed.notify({data:response,id:c}):e.successed.notify(response)):e.error.notify()},complete:function(){e.completed.notify()},error:function(){e.error.notify()}})}}ExpressionGenomicAttributesWidget.prototype.draw=GenomicAttributesWidget.prototype.draw;
ExpressionGenomicAttributesWidget.prototype.getMainPanel=GenomicAttributesWidget.prototype.getMainPanel;ExpressionGenomicAttributesWidget.prototype.render=GenomicAttributesWidget.prototype.render;ExpressionGenomicAttributesWidget.prototype.drawKaryotype=GenomicAttributesWidget.prototype.drawKaryotype;ExpressionGenomicAttributesWidget.prototype.makeGrid=GenomicAttributesWidget.prototype.makeGrid;ExpressionGenomicAttributesWidget.prototype.getKaryotypePanelId=GenomicAttributesWidget.prototype.getKaryotypePanelId;
ExpressionGenomicAttributesWidget.prototype.onAdditionalInformationClick=GenomicAttributesWidget.prototype.onAdditionalInformationClick;function ExpressionGenomicAttributesWidget(a,b){null==b&&(b={});b.columnsCount=2;b.title="Expression";b.tags=["expression"];b.featureType="gene";b.listWidgetArgs={title:"Filter",action:"filter"};GenomicAttributesWidget.prototype.constructor.call(this,a,b)}
ExpressionGenomicAttributesWidget.prototype.fill=function(a){for(var b=this,c=Normalizer.normalizeArray(values),d=[],e=0;e<c.length;e++)isNaN(parseFloat(values[e]))?d.push("#000000"):d.push(Colors.getColorByScoreValue(c[e]).HexString());var f=new CellBaseDataAdapter(this.species);f.successed.addEventListener(function(){b.karyotypePanel.setLoading("Retrieving data");for(var c=0;c<f.dataset.toJSON().length;c++)b.karyotypeWidget.mark(f.dataset.toJSON()[c],d[c]);b.query={dataset:f.dataset,resource:a};
b.features=f.dataset.toJSON();b.karyotypePanel.setLoading(!1);b.filtersButton.enable();b.addTrackButton.enable()});f.fill("feature","gene",a.toString(),"info")};ExpressionGenomicAttributesWidget.prototype.dataChange=function(a){try{this.karyotypePanel.setLoading("Connecting to Database");this.karyotypeWidget.unmark();var b=[];values=[];for(var c=0;c<a.length;c++)b.push(a[c].data[0]),values.push(a[c].data[1]);0<a.length&&this.fill(b,values)}catch(d){alert(d),this.panel.setLoading(!1)}};
ExpressionNetworkAttributesWidget.prototype.draw=NetworkAttributesWidget.prototype.draw;ExpressionNetworkAttributesWidget.prototype.render=NetworkAttributesWidget.prototype.render;ExpressionNetworkAttributesWidget.prototype.render=NetworkAttributesWidget.prototype.render;ExpressionNetworkAttributesWidget.prototype.makeGrid=NetworkAttributesWidget.prototype.makeGrid;ExpressionNetworkAttributesWidget.prototype.getDetailPanel=NetworkAttributesWidget.prototype.getDetailPanel;
ExpressionNetworkAttributesWidget.prototype.getNetworkPanelId=NetworkAttributesWidget.prototype.getNetworkPanelId;ExpressionNetworkAttributesWidget.prototype.drawNetwork=NetworkAttributesWidget.prototype.drawNetwork;ExpressionNetworkAttributesWidget.prototype.dataChanged=NetworkAttributesWidget.prototype.dataChanged;ExpressionNetworkAttributesWidget.prototype.getFoundVertices=NetworkAttributesWidget.prototype.getFoundVertices;ExpressionNetworkAttributesWidget.prototype.getVertexAttributesByName=NetworkAttributesWidget.prototype.getVertexAttributesByName;
function ExpressionNetworkAttributesWidget(a){null==a&&(a={});this.id="ExpressionNetworkAttributes_"+Math.random();a.columnsCount=2;a.title="Expression";a.tags=["expression"];NetworkAttributesWidget.prototype.constructor.call(this,a);this.applyColors=new Event}
ExpressionNetworkAttributesWidget.prototype.getButtons=function(){var a=this;this.rescaleCheckBox=Ext.create("Ext.form.field.Checkbox",{boxLabel:"Rescale",padding:"0 0 5 5",disabled:!0,listeners:{scope:this,change:function(){a.onDataChanged(a.attributesPanel.grid.store.getRange())}}});this.attributesPanel.barInfo.insert(0,this.rescaleCheckBox);this.attributesPanel.onFileRead.addEventListener(function(){a.rescaleCheckBox.enable()});return[{text:"Apply Colors",handler:function(){a.applyColors.notify();
a.panel.close()}},{text:"Close",handler:function(){a.panel.close()}}]};
ExpressionNetworkAttributesWidget.prototype.onDataChanged=function(a){var b=this.rescaleCheckBox.getValue();this.verticesSelected.notify(this.getFoundVertices());this.networkWidget.deselectNodes();this.networkWidget.selectVerticesByName(this.getFoundVertices());for(var c=[],d=[],e=0;e<a.length;e++){var f=this.graphDataset.getVertexByName(a[e].data["0"]),g=a[e].data["1"];null!=f&&!isNaN(parseFloat(g))&&(b&&(g=0>parseFloat(g)?-1*(Math.log(Math.abs(g))/Math.log(2)):Math.log(Math.abs(g))/Math.log(2)),
c.push(g),d.push(a[e].data["0"]))}b=Normalizer.normalizeArray(c);a=[];for(e=0;e<b.length;e++)isNaN(parseFloat(c[e]))?a.push("#000000"):a.push(Colors.getColorByScoreValue(b[e]).HexString());for(var h in d){c=this.dataset.getVertexByName(d[h]);for(e=0;e<c.length;e++)this.formatter.getVertexById(c[e].getId()).getDefault().setFill(a[h])}};
function GenomicAttributesWidget(a,b){var c=this;this.id="GenomicAttributesWidget_"+Math.random();this.species=a;this.title="None";this.featureType="gene";this.columnsCount=null;null!=b&&(null!=b.title&&(this.title=b.title),null!=b.columnsCount&&(this.columnsCount=b.columnsCount),null!=b.featureType&&(this.featureType=b.featureType));this.listWidget=new ListWidget(b.listWidgetArgs);this.karyotypeWidget=new KaryotypePanel(this.getKaryotypePanelId(),this.species,{top:10,width:1E3,height:300,trackWidth:15});
this.attributesPanel=new AttributesPanel({height:240,columnsCount:this.columnsCount,wum:b.wum,tags:b.tags});this.onMarkerClicked=new Event(this);this.onTrackAddAction=new Event(this);this.attributesPanel.onDataChange.addEventListener(function(a,b){c.dataChange(b)});this.karyotypeWidget.onMarkerClicked.addEventListener(function(a,b){c.onMarkerClicked.notify(b)})}
GenomicAttributesWidget.prototype.draw=function(){var a=this;null==this.panel&&(this.karyotypePanel=Ext.create("Ext.panel.Panel",{height:350,maxHeight:350,border:0,bodyPadding:15,padding:"0 0 0 0",html:'<div id="'+this.getKaryotypePanelId()+'" ><div>'}),this.filtersButton=Ext.create("Ext.button.Button",{text:"Additional Filters",disabled:!0,listeners:{scope:this,click:function(){this.onAdditionalInformationClick()}}}),this.addTrackButton=Ext.create("Ext.button.Button",{text:"Add Track",disabled:!0,
handler:function(){a.onTrackAddAction.notify({features:a.features,trackName:a.attributesPanel.fileName})}}),this.panel=Ext.create("Ext.ux.Window",{title:this.title,resizable:!1,minimizable:!0,constrain:!0,closable:!0,items:[this.attributesPanel.getPanel(),this.karyotypePanel],width:1035,height:653,buttonAlign:"left",buttons:[this.addTrackButton,"->",{text:"Close",handler:function(){a.panel.close()}}],listeners:{scope:this,minimize:function(){this.panel.hide()},destroy:function(){delete this.panel}}}),
this.attributesPanel.barField.add(this.filtersButton),this.panel.setLoading(),this.drawKaryotype());this.panel.show()};
GenomicAttributesWidget.prototype.getMainPanel=function(){var a=this;null==this.panel&&(this.karyotypePanel=Ext.create("Ext.panel.Panel",{height:350,maxHeight:350,border:0,bodyPadding:15,padding:"0 0 0 0",html:'<div id="'+this.getKaryotypePanelId()+'" ><div>'}),this.filtersButton=Ext.create("Ext.button.Button",{text:"Additional Filters",disabled:!0,listeners:{scope:this,click:function(){this.onAdditionalInformationClick()}}}),this.addTrackButton=Ext.create("Ext.button.Button",{text:"Add Track",disabled:!0,
handler:function(){a.onTrackAddAction.notify({features:a.features,trackName:a.attributesPanel.fileName})}}),this.attributesPanel.getPanel(),this.attributesPanel.barField.add(this.filtersButton),this.drawKaryotype());return[this.attributesPanel.getPanel(),this.karyotypePanel]};
GenomicAttributesWidget.prototype.fill=function(a){var b=this,c=new CellBaseDataAdapter(this.species);c.successed.addEventListener(function(){b.karyotypePanel.setLoading("Retrieving data");for(var d=0;d<c.dataset.toJSON().length;d++)b.karyotypeWidget.mark(c.dataset.toJSON()[d]);b.features=c.dataset.toJSON();b.query={dataset:c.dataset,resource:a};b.karyotypePanel.setLoading(!1);b.filtersButton.enable();b.addTrackButton.enable()});c.fill("feature",this.featureType,a.toString(),"info")};
GenomicAttributesWidget.prototype.dataChange=function(a){try{this.karyotypePanel.setLoading("Connecting to Database");this.karyotypeWidget.unmark();for(var b=[],c=0;c<a.length;c++)b.push(a[c].data[0]);0<a.length?this.fill(b):this.karyotypePanel.setLoading(!1)}catch(d){alert(d)}finally{this.karyotypePanel.setLoading(!1)}};
GenomicAttributesWidget.prototype.drawKaryotype=function(){var a=this,b=new KaryotypeCellBaseDataAdapter(this.species);b.successed.addEventListener(function(){a.karyotypeWidget.onRendered.addEventListener(function(){});a.karyotypeWidget.onClick.addEventListener(function(){});a.karyotypeWidget.draw(b.chromosomeNames,b.dataset.json)});b.fill()};GenomicAttributesWidget.prototype.getKaryotypePanelId=function(){return this.id+"_karyotypePanel"};
GenomicAttributesWidget.prototype.onAdditionalInformationClick=function(){var a=this;this.listWidget.draw(this.query.dataset.toJSON(),this.query.resource);this.listWidget.onFilterResult.addEventListener(function(b,c){a.attributesPanel.store.clearFilter();a.attributesPanel.store.filter(function(a){for(var b=0;b<c.length;b++)if(c[b].data.stableId==a.data["0"])return!0})})};NetworkAttributesWidget.prototype.render=AttributesWidget.prototype.render;NetworkAttributesWidget.prototype.getButtons=AttributesWidget.prototype.getButtons;
function NetworkAttributesWidget(a){null==a&&(a={});var b=0.5*a.height,c=0.5*a.width;a.borderCls="";a.tags=["sif|json"];AttributesWidget.prototype.constructor.call(this,{height:b+325+75,width:c+24,title:a.title});this.networkHeigth=b;this.networkWidth=c;this.networkPanelId="NetworkAttributesWidget_"+Math.ceil(1E3*Math.random())}NetworkAttributesWidget.prototype.getNetworkPanelId=function(){return this.networkPanelId};
NetworkAttributesWidget.prototype.getDetailPanel=function(){return Ext.create("Ext.container.Container",{padding:5,flex:1,height:this.networkHeigth,style:"background: #eee;",cls:"x-unselectable",html:'<div id="'+this.getNetworkPanelId()+'" style="border:1px solid #bbb;" ><div>'})};
NetworkAttributesWidget.prototype.drawNetwork=function(a,b,c,d){this.dataset=b.clone();this.formatter=new NetworkDataSetFormatter({width:400,height:200});this.formatter.loadFromJSON(this.dataset,c.toJSON());var c=this.dataset.getVertices(),e;for(e in c)b=this.formatter.getVertexById(e).getDefault().getSize(),this.formatter.getVertexById(e).getDefault().setSize(0.3*b);e=this.dataset.getEdges();for(var f in e)b=this.formatter.getEdgeById(f).getDefault().getStrokeWidth(),this.formatter.getEdgeById(f).getDefault().setStrokeWidth(0.3*
b);f=new LayoutDataset;f.loadFromJSON(this.dataset,d.toJSON());this.networkWidget=new NetworkWidget({targetId:a,label:!1});this.networkWidget.draw(this.dataset,this.formatter,f);this.networkWidget.getFormatter().resize(this.networkWidth,this.networkHeigth)};
NetworkAttributesWidget.prototype.draw=function(a,b,c){var d=this;this.render();this.attributes={};this.verticesSelected=new Event(this);this.graphDataset=a;this.found=Ext.create("Ext.button.Button",{text:"Nodes found",hidden:!0,listeners:{scope:this,click:function(){(new InputListWidget({title:"Features found",headerInfo:"This nodes were found in the Graph"})).draw(this.foundNodes.join("\n"))}}});this.notFound=Ext.create("Ext.button.Button",{text:"nodes not found",hidden:!0,listeners:{scope:this,
click:function(){(new InputListWidget({title:"Features not found",headerInfo:"This nodes were not found in the grpah"})).draw(this.notFoundNodes.join("\n"))}}});this.attributesPanel.barInfo.insert(2,this.notFound);this.attributesPanel.barInfo.insert(2,this.found);this.attributesPanel.onDataChange.addEventListener(function(a,b){d.dataChanged(b)});this.drawNetwork(this.getNetworkPanelId(),a,b,c)};
NetworkAttributesWidget.prototype.getVertexAttributesByName=function(a){var b=this.attributesPanel.getData(),c=[];if(null!=b){for(var d=0;d<b.length;d++)b[d][0]==a&&c.push(b[d]);return c}return a};
NetworkAttributesWidget.prototype.dataChanged=function(a){this.foundNodes=[];this.notFoundNodes=[];for(var b=0;b<a.length;b++)null==this.graphDataset.getVertexByName(a[b].data["0"])?this.notFoundNodes.push(a[b].data["0"]):this.foundNodes.push(a[b].data["0"]);this.found.setText('<span class="dis">'+this.foundNodes.length+" results found </span> ");this.found.show();0<this.notFoundNodes.length&&(this.notFound.setText('<span class="err">'+this.notFoundNodes.length+" features not found</span>"),this.notFound.show());
this.onDataChanged(a)};NetworkAttributesWidget.prototype.onDataChanged=function(){this.verticesSelected.notify(this.getFoundVertices());this.networkWidget.deselectNodes();this.networkWidget.selectVerticesByName(this.getFoundVertices())};NetworkAttributesWidget.prototype.getFoundVertices=function(){return this.foundNodes};
function AttributesPanel(a){var b=this;this.targetId=null;this.id="AttributesPanel_"+Math.round(1E7*Math.random());this.title=null;this.width=1023;this.height=628;this.wum=!0;this.tags=[];this.borderCls="panel-border-bottom";this.columnsCount=null;null!=a&&(null!=a.wum&&(this.wum=a.wum),null!=a.title&&(this.title=a.title),null!=a.targetId&&(this.targetId=a.targetId),null!=a.width&&(this.width=a.width),null!=a.height&&(this.height=a.height),null!=a.columnsCount&&(this.columnsCount=a.columnsCount),
null!=a.borderCls&&(this.borderCls=a.borderCls),null!=a.tags&&(this.tags=a.tags));this.browserData=new BrowserDataWidget;this.onDataChange=new Event(this);this.onFileRead=new Event(this);this.browserData.adapter.onReadData.addEventListener(function(a,d){var e=new TabularFileDataAdapter({comment:"#"});e.parse(d.data);b.makeGrid(e);b.uptadeTotalFilteredRowsInfo(e.lines.length);b.uptadeTotalRowsInfo(e.lines.length);b.fileNameLabel.setText('<span class="emph">'+d.filename+'</span> <span class="info">(server)</span>',
!1)})}AttributesPanel.prototype.draw=function(){var a=this.getPanel();null!=this.targetId&&a.render(this.targetId)};AttributesPanel.prototype.uptadeTotalRowsInfo=function(a){this.infoLabel.setText('<span class="dis">Total rows: </span><span class="emph">'+a+"</span>",!1)};AttributesPanel.prototype.uptadeTotalFilteredRowsInfo=function(a){this.infoLabel2.setText('<span class="dis">Filtered rows: </span><span class="emph">'+a+"</span>",!1)};
AttributesPanel.prototype.sessionInitiated=function(){null!=this.btnBrowse&&this.btnBrowse.enable()};AttributesPanel.prototype.sessionFinished=function(){null!=this.btnBrowse&&this.btnBrowse.disable()};
AttributesPanel.prototype.getPanel=function(){var a=this;null==this.panel&&(this.expresionAnalysisUploadFieldFile=Ext.create("Ext.form.field.File",{msgTarget:"side",width:75,emptyText:"Choose a local file",allowBlank:!1,buttonText:"Browse local",buttonOnly:!0,listeners:{scope:this,change:function(){a.panel.setLoading("Reading file");try{var b=new TabularFileDataAdapter({comment:"#"}),c=document.getElementById(this.expresionAnalysisUploadFieldFile.fileInputEl.id).files[0];a.fileName=c.name;a.fileNameLabel.setText('<span class="emph">'+
c.name+'</span> <span class="info">(local)</span>',!1);b.loadFromFile(c);b.onRead.addEventListener(function(){a.makeGrid(b);a.uptadeTotalFilteredRowsInfo(b.lines.length);a.uptadeTotalRowsInfo(b.lines.length);a.panel.setLoading(!1);a.onFileRead.notify()})}catch(d){alert(d),a.panel.setLoading(!1)}}}}),this.barField=Ext.create("Ext.toolbar.Toolbar"),this.barInfo=Ext.create("Ext.toolbar.Toolbar",{dock:"bottom"}),this.barHelp=Ext.create("Ext.toolbar.Toolbar",{dock:"top"}),this.clearFilter=Ext.create("Ext.button.Button",
{text:"Clear filters",disabled:!0,listeners:{scope:this,click:function(){null!=this.grid.filters&&(this.grid.filters.clearFilters(),this.store.clearFilter())}}}),this.helpLabel=Ext.create("Ext.toolbar.TextItem",{html:'<span class="dis">Click on the header down arrow to filter by column</span>'}),this.fileNameLabel=Ext.create("Ext.toolbar.TextItem",{html:'<span class="emph">Select a <span class="info">local</span> file or a <span class="info">server</span> file from your account.</span>'}),this.infoLabel=
Ext.create("Ext.toolbar.TextItem",{html:"&nbsp;"}),this.infoLabel2=Ext.create("Ext.toolbar.TextItem",{html:"&nbsp;"}),this.barField.add(this.expresionAnalysisUploadFieldFile),this.barInfo.add("->",this.infoLabel,this.infoLabel2),this.barHelp.add(this.fileNameLabel,"->",this.helpLabel),this.store=Ext.create("Ext.data.Store",{fields:["1","2"],data:[]}),this.grid=Ext.create("Ext.grid.Panel",{store:this.store,disabled:!0,border:0,columns:[{header:"Column 1",dataIndex:"1"},{header:"Column 2",dataIndex:"2"}]}),
this.panel=Ext.create("Ext.panel.Panel",{title:this.title,border:!1,layout:"fit",cls:this.borderCls,items:[this.grid],tbar:this.barField,width:this.width,height:this.height,maxHeight:this.height,buttonAlign:"right",listeners:{scope:this,minimize:function(){this.panel.hide()},destroy:function(){delete this.panel}}}),this.panel.addDocked(this.barInfo),this.panel.addDocked(this.barHelp));this.wum&&(this.btnBrowse=Ext.create("Ext.button.Button",{text:"Browse server",disabled:!0,listeners:{scope:this,
click:function(){this.browserData.draw($.cookie("bioinfo_sid"),this.tags)}}}),this.barField.add(this.btnBrowse),null!=$.cookie("bioinfo_sid")?this.sessionInitiated():this.sessionFinished());this.barField.add("-",this.clearFilter);return this.panel};AttributesPanel.prototype.getData=function(){return this.data};
AttributesPanel.prototype.makeGrid=function(a){this.data=a.lines;var b=[],c=[],d=[];null==this.columnsCount&&(this.columnsCount=this.data[0].length);for(var e=0;e<this.columnsCount;e++){var f=a.getHeuristicTypeByColumnIndex(e);b.push({name:e.toString(),type:f});c.push({header:"Column "+e.toString(),dataIndex:e.toString(),flex:1,filterable:!0,filter:{type:f}});d.push({type:f,dataIndex:e.toString()})}this.store=Ext.create("Ext.data.Store",{fields:b,data:this.data,listeners:{scope:this,datachanged:function(a){a.getRange();
this.uptadeTotalFilteredRowsInfo(a.getRange().length);this.onDataChange.notify(a.getRange())}}});a={ftype:"filters",local:!0,filters:d};null!=this.grid&&this.panel.remove(this.grid);this.grid=Ext.create("Ext.grid.Panel",{store:this.store,columns:c,border:0,features:[a]});this.panel.insert(0,this.grid);this.clearFilter.enable()};GenotypeGenomicAttributesWidget.prototype.draw=GenomicAttributesWidget.prototype.draw;GenotypeGenomicAttributesWidget.prototype.render=GenomicAttributesWidget.prototype.render;
GenotypeGenomicAttributesWidget.prototype.drawKaryotype=GenomicAttributesWidget.prototype.drawKaryotype;GenotypeGenomicAttributesWidget.prototype.makeGrid=GenomicAttributesWidget.prototype.makeGrid;GenotypeGenomicAttributesWidget.prototype.getKaryotypePanelId=GenomicAttributesWidget.prototype.getKaryotypePanelId;GenotypeGenomicAttributesWidget.prototype.dataChange=GenomicAttributesWidget.prototype.dataChange;GenotypeGenomicAttributesWidget.prototype.fill=GenomicAttributesWidget.prototype.fill;
GenotypeGenomicAttributesWidget.prototype.onAdditionalInformationClick=GenomicAttributesWidget.prototype.onAdditionalInformationClick;function GenotypeGenomicAttributesWidget(a,b){null==b&&(b={});b.title="Genotype";b.tags=["genotype"];b.featureType="snp";b.listWidgetArgs={title:"Filter",action:"filter",gridFields:"name,variantAlleles,ancestralAllele,mapWeight,position,sequence".split(",")};GenomicAttributesWidget.prototype.constructor.call(this,a,b)}
ExpressionGenomicAttributesWidget.prototype.draw=GenomicAttributesWidget.prototype.draw;ExpressionGenomicAttributesWidget.prototype.render=GenomicAttributesWidget.prototype.render;ExpressionGenomicAttributesWidget.prototype.drawKaryotype=GenomicAttributesWidget.prototype.drawKaryotype;ExpressionGenomicAttributesWidget.prototype.render=GenomicAttributesWidget.prototype.render;ExpressionGenomicAttributesWidget.prototype.makeGrid=GenomicAttributesWidget.prototype.makeGrid;
ExpressionGenomicAttributesWidget.prototype.getKaryotypePanelId=GenomicAttributesWidget.prototype.getKaryotypePanelId;ExpressionGenomicAttributesWidget.prototype.dataChange=GenomicAttributesWidget.prototype.dataChange;function ExpressionGenomicAttributesWidget(a,b,c){GenomicAttributesWidget.prototype.constructor.call(this,a,b,c);this.karyotypeWidget=new KaryotypePanel(this.getKaryotypePanelId(),this.getKaryotypePanelId(),{top:10,width:1E3,height:300,trackWidth:15})}
ExpressionGenomicAttributesWidget.prototype.dataChange=function(a){try{console.log(a);var b=this;this.karyotypePanel.setLoading("Connecting to Database");this.karyotypeWidget.unmark();var b=this,c=[];if(0<a.length){for(var d=0;d<a.length;d++)c.push(a[d].data[0]);var e=new CellBaseDataAdapter;e.successed.addEventListener(function(){b.karyotypePanel.setLoading("Retrieving data");for(var a=0;a<e.dataset.toJSON().length;a++)b.karyotypeWidget.mark(e.dataset.toJSON()[a]);b.karyotypePanel.setLoading(!1)});
e.fill("feature","gene",c.toString(),"info")}}catch(f){alert(f),this.panel.setLoading(!1)}};function AttributesWidget(a){this.id="AttributesWidget_"+Math.random();this.title="";this.width=1025;this.height=628;null!=a&&(null!=a.title&&(this.title=a.title),null!=a.targetId&&(this.targetId=a.targetId),null!=a.width&&(this.width=a.width),null!=a.height&&(this.height=a.height));this.attributesPanel=new AttributesPanel({borderCls:a.borderCls,height:325})}AttributesWidget.prototype.draw=function(){this.render()};
AttributesWidget.prototype.getDetailPanel=function(){return{}};AttributesWidget.prototype.getButtons=function(){var a=this;return[{text:"Close",handler:function(){a.panel.close()}}]};
AttributesWidget.prototype.render=function(){null==this.panel&&(this.panel=Ext.create("Ext.ux.Window",{title:this.title,resizable:!1,constrain:!0,closable:!0,collapsible:!0,layout:{type:"vbox",align:"stretch"},items:[this.attributesPanel.getPanel(),this.getDetailPanel()],width:this.width,height:this.height,buttonAlign:"right",buttons:this.getButtons(),listeners:{scope:this,minimize:function(){this.panel.hide()},destroy:function(){delete this.panel}}}),this.panel.setLoading());this.panel.show()};
function ChartWidget(a){this.id="ChartWidget_"+Math.round(1E7*Math.random());this.title=null;this.width=750;this.height=300;null!=a&&(null!=a.title&&(this.title=a.title),null!=a.width&&(this.width=a.width),null!=a.height&&(this.height=a.height))}ChartWidget.prototype.getStore=function(){return this.store};
ChartWidget.prototype.getChart=function(a){Ext.define("ChromosomeChart",{extend:"Ext.data.Model",fields:a});this.store=Ext.create("Ext.data.Store",{model:"ChromosomeChart",autoLoad:!1});return Ext.create("Ext.chart.Chart",{animate:!0,shadow:!0,store:this.store,width:this.width,height:this.height,axes:[{position:"left",fields:[a[0]],title:a[0],grid:!0,type:"Numeric",minimum:0},{title:a[1],type:"category",position:"bottom",fields:[a[1]],label:{rotate:{degrees:270}}}],series:[{type:"column",axis:"left",
gutter:80,yField:a[0],xField:a[1],style:{fill:"#38B8BF"}}]})};GenomicListWidget.prototype.draw=ListWidget.prototype.draw;GenomicListWidget.prototype.getActionButton=ListWidget.prototype.getActionButton;function GenomicListWidget(a){ListWidget.prototype.constructor.call(this,a);this.listPanel=new GenomicListPanel({title:!1,gridFields:a.gridFields});this.onSelected=this.listPanel.onSelected;this.onFilterResult=this.listPanel.onFilterResult;this.onTrackAddAction=new Event}
GenomicListWidget.prototype._render=function(){var a=this;null==this.panel&&(this.localizeButton=Ext.create("Ext.button.Button",{minWidth:80,text:"OK",disabled:!0,handler:function(){a.listPanel.onSelected.notify(a.listPanel.grid.getSelectionModel().getSelection()[0].data);a.panel.hide()}}),this.filterButton=Ext.create("Ext.button.Button",{minWidth:80,text:"OK",handler:function(){a.listPanel.onFilterResult.notify(a.listPanel.store.getRange());a.panel.hide()}}),this.panel=Ext.create("Ext.ux.Window",
{title:this.title,taskbar:Ext.getCmp(this.args.viewer.id+"uxTaskbar"),resizable:!1,constrain:!0,closable:!0,layout:"fit",minimizable:!0,width:this.width,height:this.height,items:[this.listPanel.grid],buttonAlign:"right",buttons:[{text:"Add Track",handler:function(){a.onTrackAddAction.notify(a.listPanel.features)},margin:"0 375 0 0 "},this.getActionButton(this.action),{text:"Close",handler:function(){a.panel.close()}}],listeners:{scope:this,minimize:function(){this.panel.hide()},destroy:function(){delete this.panel}}}))};
function ListWidget(a){this.targetId=null;this.id="ListWidget_"+Math.round(1E7*Math.random());this.width=1E3;this.height=500;this.action="localize";this.title="";this.args=a;null!=a&&(null!=a.title&&(this.title=a.title),null!=a.targetId&&(this.targetId=a.targetId),null!=a.width&&(this.width=a.width),null!=a.height&&(this.height=a.height),null!=a.action&&(this.action=a.action));this.listPanel=new ListPanel({title:!1,gridFields:a.gridFields});this.onSelected=this.listPanel.onSelected;this.onFilterResult=
this.listPanel.onFilterResult}
ListWidget.prototype._render=function(){var a=this;null==this.panel&&(this.localizeButton=Ext.create("Ext.button.Button",{minWidth:80,text:"OK",disabled:!0,handler:function(){a.listPanel.onSelected.notify(a.listPanel.grid.getSelectionModel().getSelection()[0].data);a.panel.hide()}}),this.filterButton=Ext.create("Ext.button.Button",{minWidth:80,text:"OK",handler:function(){a.listPanel.onFilterResult.notify(a.listPanel.store.getRange());a.panel.hide()}}),this.panel=Ext.create("Ext.ux.Window",{title:this.title,
taskbar:Ext.getCmp(this.args.viewer.id+"uxTaskbar"),resizable:!1,constrain:!0,closable:!0,layout:"fit",minimizable:!0,width:this.width,height:this.height,items:[this.listPanel.grid],buttonAlign:"right",buttons:[this.getActionButton(this.action),{text:"Close",handler:function(){a.panel.close()}}],listeners:{scope:this,minimize:function(){this.panel.hide()},destroy:function(){delete this.panel}}}))};
ListWidget.prototype.draw=function(a,b){var c=this;this.listPanel.draw(a,b);this.listPanel.grid.getSelectionModel().on("selectionchange",function(){c.listPanel.grid.getSelectionModel().hasSelection()?c.localizeButton.enable():c.localizeButton.disable()});this._render();this.panel.show()};ListWidget.prototype.getActionButton=function(a){switch(a){case "localize":return this.localizeButton;case "filter":return this.listPanel.localizeButton.disable().hide(),this.filterButton}};
function ListPanel(a){this.targetId=null;this.id="ListPanel_"+Math.round(1E7*Math.random());this.title="List of Genes";this.width=1E3;this.height=500;this.borderCls="panel-border-bottom";this.gridFields="externalName,stableId,biotype,position,strand,description".split(",");null!=a&&(null!=a.title&&(this.title=a.title),null!=a.targetId&&(this.targetId=a.targetId),null!=a.width&&(this.width=a.width),null!=a.height&&(this.height=a.height),null!=a.gridFields&&(this.gridFields=a.gridFields),null!=a.borderCls&&
(this.borderCls=a.borderCls));this.onSelected=new Event(this);this.onFilterResult=new Event(this)}
ListPanel.prototype._getGeneGrid=function(){for(var a=this,b=this.gridFields,c=[],d=[],e=0;e<b.length;e++)c.push({type:"string",dataIndex:b[e]}),d.push({header:this.gridFields[e],dataIndex:this.gridFields[e],flex:1});this.store=Ext.create("Ext.data.Store",{fields:b,groupField:"biotype",autoload:!1});c={ftype:"filters",local:!0,filters:c};this.infoToolBar=Ext.create("Ext.toolbar.Toolbar");this.infoLabelOk=Ext.create("Ext.toolbar.TextItem",{html:"&nbsp;"});this.infoLabelNotFound=Ext.create("Ext.toolbar.TextItem",
{html:"&nbsp;"});this.clearFilter=Ext.create("Ext.button.Button",{text:"Clear filters",listeners:{scope:this,click:function(){null!=this.grid.filters&&this.grid.filters.clearFilters()}}});this.found=Ext.create("Ext.button.Button",{text:"Features found",hidden:!0,listeners:{scope:this,click:function(){(new InputListWidget({title:"Features found",headerInfo:"This features were found in the database"})).draw(this.queriesFound.join("\n"))}}});this.notFound=Ext.create("Ext.button.Button",{text:"Features not found",
hidden:!0,listeners:{scope:this,click:function(){(new InputListWidget({title:"Features not found",headerInfo:"This features were not found in the database"})).draw(this.queriesNotFound.join("\n"))}}});this.exportButton=Ext.create("Ext.button.Button",{text:"Export to Text",handler:function(){(new InputListWidget({width:1100,title:"VCS content",headerInfo:"Export results"})).draw(a._getStoreContent())}});this.localizeButton=Ext.create("Ext.button.Button",{text:"Localize on karyotype",handler:function(){a._localize()}});
this.infoToolBar.add(["->",this.exportButton,this.localizeButton,"-",this.found,this.notFound,this.clearFilter]);return this.grid=Ext.create("Ext.grid.Panel",{border:0,store:this.store,features:[c],bbar:this.infoToolBar,columns:d,selModel:{mode:"SINGLE"}})};
ListPanel.prototype._localize=function(){var a=this,b=new KaryotypePanelWindow;b.onRendered.addEventListener(function(){for(var c=[],d=0;d<a.original.length;d++)for(var e=0;e<a.original[d].length;e++)c.push(a.original[d][e]);b.mark(c)});b.onMarkerChanged.addEventListener(function(b,d){a.onSelected.notify(d)});b.draw()};
ListPanel.prototype.setTextInfoBar=function(a,b,c){this.found.setText('<span class="dis">'+a+" results found </span> ");this.found.show();0<c&&(this.notFound.setText('<span class="err">'+c+" features not found</span>"),this.notFound.show())};
ListPanel.prototype._getStoreContent=function(){for(var a=new String,b=0;b<this.store.data.items.length;b++){var c=new String;if(0==b){for(var d=0;d<this.gridFields.length;d++)c=c+this.gridFields[d]+"\t";c+="\n"}for(d=0;d<this.gridFields.length;d++)c=c+this.store.data.items[b].data[this.gridFields[d]]+"\t";c+="\n";a+=c}return a};
ListPanel.prototype._render=function(){null==this.panel&&(this.panel=Ext.create("Ext.panel.Panel",{height:240,layout:"fit",cls:this.borderCls,title:this.title,border:!1}));this.panel.add(this._getGeneGrid())};
ListPanel.prototype.draw=function(a,b){this._render();!1==b instanceof Array&&(b=b.split(","));this.original=a;this.queriesNotFound=[];this.queriesFound=[];for(var c=0,d=[],e=0;e<a.length;e++){0==a[e].length?(c++,this.queriesNotFound.push(b[e])):this.queriesFound.push(b[e]);for(var f=0;f<a[e].length;f++)a[e][f].position=a[e][f].chromosome+":"+a[e][f].start+"-"+a[e][f].end,d.push(a[e][f])}this.features=d;this.setTextInfoBar(d.length,this.original.length,c);this.store.loadData(d,!1)};
GenomicListPanel.prototype._getGeneGrid=ListPanel.prototype._getGeneGrid;GenomicListPanel.prototype._localize=ListPanel.prototype._localize;GenomicListPanel.prototype.setTextInfoBar=ListPanel.prototype.setTextInfoBar;GenomicListPanel.prototype._getStoreContent=ListPanel.prototype._getStoreContent;GenomicListPanel.prototype._render=ListPanel.prototype._render;GenomicListPanel.prototype.draw=ListPanel.prototype.draw;function GenomicListPanel(a){ListPanel.prototype.constructor.call(this,a)}
function TextWindowWidget(){this.windows=[]}TextWindowWidget.prototype.draw=function(a){myRef=window.open("data:text/csv,field1%2Cfield2%0Afoo%2Cbar%0Agoo%2Cgai%0A","mywin","left=20,top=20,width=500,height=200");myRef.document.write(a)};function ClienSideDownloaderWindowWidget(){this.windows=[]}ClienSideDownloaderWindowWidget.prototype.draw=function(a,b){myRef=window.open("data:text/csv,"+b,"mywin","left=20,top=20,width=500,height=200");myRef.document.write(a)};
Ext.define("Ext.ux.Window",{extend:"Ext.window.Window",minimizable:!0,constrain:!0,collapsible:!0,initComponent:function(){this.callParent();null!=this.taskbar&&(this.zIndexManager=this.taskbar.winMgr,this.iconCls="icon-grid",this.button=Ext.create("Ext.button.Button",{text:this.title,window:this,iconCls:this.iconCls,handler:function(){this.window.zIndexManager.front==this.window?this.window.minimize():this.window.show()}}),this.taskbar.add(this.button),this.contextMenu=new Ext.menu.Menu({items:[{text:"Close",
window:this,iconCls:"tools-icons x-tool-close",handler:function(){this.window.close()}}]}),this.button.getEl().on("contextmenu",function(a){a.preventDefault();this.contextMenu.showAt(a.getX(),a.getY()-10-25*this.contextMenu.items.length)},this),this.button.on("destroy",function(){this.window.close()}),this.on("destroy",function(){!0!=this.button.destroying&&this.button.destroy()}),this.on("minimize",function(){this.hide()}),this.on("deactivate",function(){this.zIndexManager&&this.zIndexManager.front.ghostPanel&&
this.zIndexManager.unregister(this.zIndexManager.front.ghostPanel);this.button.toggle(!1)}),this.on("activate",function(){this.button.toggle(!0)}))}});function FilterPanel(a){this.id="FilterPanel_"+Math.round(1E7*Math.random());this.height=this.width=this.title=this.targetId=null;null!=a&&(null!=a.title&&(this.title=a.title),null!=a.targetId&&(this.targetId=a.targetId),null!=a.width&&(this.width=a.width),null!=a.height&&(this.height=a.height))}
FilterPanel.prototype.draw=function(a){a="manzanas,pera,meloconton,sandia,melon,naranja,manzanas,pera,meloconton,sandia,melon,naranja,manzanas,pera,meloconton,sandia,melon,naranja".split(",");this.render(a);null!=this.targetId&&this.panel.render(this.targetId)};
FilterPanel.prototype.render=function(a){for(var b=[],c=0;c<a.length;c++)b.push({boxLabel:a[c],checked:!0});null==this.panel&&(this.panel=Ext.create("Ext.panel.Panel",{title:this.title,width:this.width,height:this.height,layout:"vbox",defaultType:"checkboxfield",items:b}))};
function InputListWidget(a){this.id="InputListWidget"+Math.round(1E7*Math.random());this.title="List";this.width=500;this.height=350;this.headerInfo="Write a list separated only by lines";this.args=a;null!=a&&(null!=a.title&&(this.title=a.title),null!=a.width&&(this.width=a.width),null!=a.height&&(this.height=a.height),null!=a.headerInfo&&(this.headerInfo=a.headerInfo));this.onOk=new Event(this)}
InputListWidget.prototype.draw=function(a){var b=this;null==a&&(a=new String);null==this.panel&&(this.infobar=Ext.create("Ext.toolbar.Toolbar",{cls:"bio-border-false"}),this.infoLabel=Ext.create("Ext.toolbar.TextItem",{html:this.headerInfo}),this.infobar.add(this.infoLabel),this.editor=Ext.create("Ext.form.field.TextArea",{id:this.id+"genelist_preview",xtype:"textarea",name:"file",margin:"-1",width:this.width,height:this.height,enableKeyEvents:!0,cls:"dis",style:"normal 6px tahoma, arial, verdana, sans-serif",
value:a,listeners:{scope:this,change:function(){this.validate()}}}),a=Ext.create("Ext.panel.Panel",{border:!1,items:[this.infobar,this.editor]}),this.okButton=Ext.create("Ext.button.Button",{text:"Ok",disabled:!0,listeners:{scope:this,click:function(){this.onOk.notify(Ext.getCmp(this.id+"genelist_preview").getValue().split("\n"));b.panel.close()}}}),this.panel=Ext.create("Ext.ux.Window",{title:this.title,taskbar:Ext.getCmp(this.args.viewer.id+"uxTaskbar"),layout:"fit",resizable:!1,collapsible:!0,
constrain:!0,closable:!0,items:[a],buttons:[this.okButton,{text:"Cancel",handler:function(){b.panel.close()}}],listeners:{scope:this,destroy:function(){delete this.panel}}}));this.panel.show()};InputListWidget.prototype.validate=function(){""!=this.editor.getValue()?this.okButton.enable():this.okButton.disable()};
var Normalizer=new function(){this.normalizeArray=function(a){return this.standardizeArray(this.normal(a))};this.normal=function(a){var b=this._getMean(a),c=this._getStdDeviation(a);this._getMaxAndMin(a);for(var d=[],e=0;e<a.length;e++)0!=c?d.push((a[e]-b)/c):d.push(a[e]);return d};this.standardizeArray=function(a){for(var b=this._getMaxAndMin(a),c=b[0],b=b[1],c=0>=c?Math.abs(c):-1*c,d=[],e=0;e<a.length;e++)0!=b+c?d.push((a[e]+c)/(b+c)):d.push(a[e]+c);return d};this._getMean=function(a){for(var b=
0,c=0;c<a.length;c++)b+=parseFloat(a[c]);return b/a.length};this._getStdDeviation=function(a){for(var b=this._getMean(a),c=0,d=0;d<a.length;d++)c+=Math.pow(parseFloat(a[d])-b,2);return Math.sqrt(c/a.length)};this._getMaxAndMin=function(a){for(var b=Number.MAX_VALUE,c=Number.MIN_VALUE,d=0;d<a.length;d++)a[d]<b&&(b=parseFloat(a[d])),a[d]>c&&(c=parseFloat(a[d]));return[b,c]}};function Event(a){this._sender=a;this._listeners=[]}
Event.prototype={addEventListener:function(a){this._listeners.push(a)},notify:function(a){for(var b=0;b<this._listeners.length;b++)this._listeners[b](this._sender,a)}};
var Colors=new function(){function a(){var b=0,c=0,d=0,e=0,f=0,g=0;this.SetRGB=function(a,k,l){b=a/255;c=k/255;d=l/255;a=Math.max(Math.max(b,c),d);k=Math.min(Math.min(b,c),d);g=a;f=0;0!=a&&(f=1-k/a);e=0;k!=a&&(k=a-k,e=b==a?(c-d)/k:c==a?2+(d-b)/k:4+(b-c)/k,e*=60,0>e&&(e+=360))};this.Red=function(){return Math.round(255*b)};this.Green=function(){return Math.round(255*c)};this.Blue=function(){return Math.round(255*d)};this.SetHSV=function(a,k,l){e=a;f=k;g=l;d=c=b=g;if(!(0==g||0==f)){var k=e/60,a=Math.floor(k),
m=k-a,k=g*(1-f),l=g*(1-f*m),m=g*(1-f*(1-m));switch(a){case 0:b=g;c=m;d=k;break;case 1:b=l;c=g;d=k;break;case 2:b=k;c=g;d=m;break;case 3:b=k;c=l;d=g;break;case 4:b=m;c=k;d=g;break;default:b=g,c=k,d=l}}};this.Hue=function(){return e};this.Saturation=function(){return f};this.Value=function(){return g};this.SetHexString=function(a){if(null==a||"string"!=typeof a)this.SetRGB(0,0,0);else if("#"==a.substr(0,1)&&(a=a.substr(1)),6!=a.length)this.SetRGB(0,0,0);else{var b=parseInt(a.substr(0,2),16),c=parseInt(a.substr(2,
2),16),a=parseInt(a.substr(4,2),16);isNaN(b)||isNaN(c)||isNaN(a)?this.SetRGB(0,0,0):this.SetRGB(b,c,a)}};this.HexString=function(){var a=this.Red().toString(16);1==a.length&&(a="0"+a);var b=this.Green().toString(16);1==b.length&&(b="0"+b);var c=this.Blue().toString(16);1==c.length&&(c="0"+c);return("#"+a+b+c).toUpperCase()};this.Complement=function(){var b=180<=e?e-180:e+180,c=g*(f-1)+1,d=g*f/c,m=new a;m.SetHSV(b,d,c);return m}}this.hashColor=[];this.getColorByScoreArrayValue=function(a){for(var c=
[],d=0;d<a.length;d++){var e=this.getColorByScoreValue(a[d]);c.push(e)}return c};this.getHexStringByScoreArrayValue=function(a){for(var a=this.getColorByScoreArrayValue(a),c=[],d=0;d<a.length;d++)c.push(a[d].HexString());return c};this.getColorByScoreValue=function(a){var c=a.toString().substr(0,4);if(null!=this.hashColor[c])return this.hashColor[c];if(isNaN(a))return Colors.ColorFromRGB(0,0,0);var d,e,f;0.5>a?(e=Colors.ColorFromRGB(0,0,255),f=Colors.ColorFromRGB(255,255,255),d=2*a):(e=Colors.ColorFromRGB(255,
255,255),f=Colors.ColorFromRGB(255,0,0),d=2*a-1);a=d;d=1-d;e=Colors.ColorFromRGB(d*e.Red()+a*f.Red(),d*e.Green()+a*f.Green(),d*e.Blue()+a*f.Blue());return this.hashColor[c]=e};this.ColorFromHSV=function(b,c,d){var e=new a;e.SetHSV(b,c,d);return e};this.ColorFromRGB=function(b,c,d){var e=new a;e.SetRGB(b,c,d);return e};this.ColorFromHex=function(b){var c=new a;c.SetHexString(b);return c}};function StringBuffer(){this.buffer=[]}StringBuffer.prototype.append=function(a){this.buffer.push(a);return this};
StringBuffer.prototype.appendln=function(a){this.buffer.push(a+"\n");return this};StringBuffer.prototype.toString=function(){return this.buffer.join("")};
var Geometry={getAngleBetweenTwoPoints:function(a,b,c,d){return Math.atan2(d-b,c-a)},getAdjacentSideOfRectangleRight:function(a,b){return Math.abs(Math.cos(a)*b)},getOppositeSideOfRectangleRight:function(a,b){return Math.abs(Math.sin(a)*b)},toDegree:function(a){return 180*a/Math.PI}},SHAPE=0,SQUARE=1,RECTANGLE=2,ROUNDEDREC=3,CIRCLE=4,TRIANGLE=5,PANEL=6,TEXT=7,LINE=9,VERTICAL=0,HORIZONTAL=1;function Point(a,b){this.x=a;this.y=b}
Point.prototype.getDistance=function(a){var b=Math.pow(this.x-a.x,2),a=Math.pow(this.y-a.y,2);return Math.sqrt(b+a)};function Shape(a,b){this.top=a;this.left=b;this.color="#000000";this.canvas=null;this.visible=!0;this.type=SHAPE;this.borderColor="#000000";this.borderWidth=0}Shape.prototype.toString=function(){return this.type+": "+this.top+" "+this.left};Shape.prototype.setBorderColor=function(a){this.borderColor=a};Shape.prototype.setBorderWidth=function(a){this.borderWidth=a};
Shape.prototype.setColor=function(a){this.color=a};Shape.prototype.render=function(a){this.canvas=a};Shape.prototype.setVisible=function(a){this.visible=a};function Rectangle(a,b,c,d){Shape.call(this,a,b);this.width=d;this.height=c;this.type=RECTANGLE}Rectangle.prototype=new Shape;Rectangle.prototype.constructor=Rectangle;
Rectangle.prototype.render=function(a){this.visible&&(a.save(),a.lineWidth=2,a.strokeStyle="#000000",a.beginPath(),a.moveTo(this.left,this.top),a.lineTo(this.left+this.width,this.top),a.lineTo(this.left+this.width,this.top+this.height),a.lineTo(this.left,this.top+this.height),a.closePath(),a.stroke(),a.fillStyle=this.color,a.fillRect(this.left,this.top,this.width,this.height),a.restore())};Rectangle.prototype.remove=function(){this.canvas.clearRect(this.left,this.top,this.width,this.height)};
Rectangle.prototype.contains=function(a,b){return b>=this.left&&b<=this.width+this.left?a>=this.top&&a<=this.height+this.top?!0:!1:!1};function RoundedRec(a,b,c,d,e){Rectangle.call(this,b,a,d,c);this.radio=e;this.type=ROUNDEDREC}RoundedRec.prototype=new Rectangle;RoundedRec.prototype.constructor=RoundedRec;
RoundedRec.prototype.render=function(a){this.visible&&(a.save(),a.fillStyle=this.color,a.beginPath(),a.moveTo(this.left,this.top+this.radio),a.lineTo(this.left,this.top+this.height-this.radio),a.quadraticCurveTo(this.left,this.top+this.height,this.left+this.radio,this.top+this.height),a.lineTo(this.left+this.width-this.radio,this.top+this.height),a.quadraticCurveTo(this.left+this.width,this.top+this.height,this.left+this.width,this.top+this.height-this.radio),a.lineTo(this.left+this.width,this.top+
this.radio),a.quadraticCurveTo(this.left+this.width,this.top,this.left+this.width-this.radio,this.top),a.lineTo(this.left+this.radio,this.top),a.quadraticCurveTo(this.left,this.top,this.left,this.top+this.radio),a.fill(),0!=this.borderWidth&&(a.strokeStyle=this.borderColor,a.lineWidth=this.borderWidth,a.stroke()),a.restore())};function Square(a,b,c){Shape.call(this,b,a);this.width=this.height=c;this.type=SQUARE}Square.prototype=new Shape;Square.prototype.constructor=Square;
Square.prototype.remove=function(){this.canvas.clearRect(this.top,this.left,this.width,this.height)};Square.prototype.render=function(a){Shape.prototype.render.call(this,a);this.visible&&(a.save(),a.fillStyle=this.color,a.fillRect(this.top,this.left,this.width,this.height),0!=this.borderWidth&&(a.strokeStyle=this.borderColor,a.lineWidth=this.borderWidth,a.strokeRect(this.top,this.left,this.width,this.height)),a.restore())};
Square.prototype.contains=function(a,b){return b>=this.left&&b<=this.width+this.left?a>=this.top&&a<=this.height+this.top?!0:!1:!1};function Circle(a,b,c){Shape.call(this,b,a);this.radio=c;this.type=CIRCLE}Circle.prototype=new Shape;Circle.prototype.constructor=Circle;
Circle.prototype.render=function(a){Shape.prototype.render.call(this,a);this.visible&&(a.save(),a.beginPath(),a.fillStyle=this.color,a.arc(this.top+this.radio,this.left+this.radio,this.radio,0,2*Math.PI,!0),0!=this.borderWidth&&(a.strokeStyle=this.borderColor,a.lineWidth=this.borderWidth,a.stroke()),a.closePath(),a.fill(),a.restore())};Circle.prototype.contains=function(a,b){return(new Point(a,b)).getDistance(new Point(this.top+this.radio,this.left+this.radio))<=this.radio?!0:!1};
function Triangle(a,b,c,d,e,f){Shape.call(this,a,b);this.x1=a;this.y1=b;this.x2=c;this.y2=d;this.x3=e;this.y3=f;this.type=TRIANGLE}Triangle.prototype=new Shape;Triangle.prototype.constructor=Triangle;Triangle.prototype.render=function(a){this.visible&&(a.save(),a.fillStyle=this.color,a.beginPath(),a.moveTo(this.x1,this.y1),a.lineTo(this.x2,this.y2),a.lineTo(this.x3,this.y3),a.closePath(),a.fill(),0!=this.borderWidth&&(a.strokeStyle=this.borderColor,a.lineWidth=this.borderWidth,a.stroke()),a.restore())};
Triangle.prototype.toString=function(){return this.type};Triangle.prototype.contains=function(){return!1};function Text(a,b,c){Shape.call(this,b,a);this.text=c;this.type=TEXT;this.orientation=HORIZONTAL}function Text(a,b,c,d){Shape.call(this,a,b);this.text=c;this.type=TEXT;this.orientation=d}Text.prototype=new Shape;Text.prototype.constructor=Text;Text.prototype.setFont=function(a){this.font=a};
Text.prototype.render=function(a){a.save();a.fillStyle=this.color;a.font=this.font;a.textBaseline="top";a.measureText(this.text);this.orientation!=HORIZONTAL&&(a.rotate(-Math.PI/2),a.translate(-this.top,this.left));a.fillText(this.text,0,0);a.restore()};function Line(a,b){Shape.call(this,a.x,a.y);this.point=b;this.type=LINE;this.color="#FFCCFF"}Line.prototype=new Shape;Line.prototype.constructor=Line;Line.prototype.remove=function(){this.canvas.clearRect(this.top,this.left,1,1)};
Line.prototype.render=function(a){Shape.prototype.render.call(this,a);a.save();a.fillStyle=this.color;a.beginPath();a.moveTo(this.left,this.top);a.lineTo(this.point.x,this.point.y);a.closePath();a.stroke();a.restore()};
var SVG={svgns:"http://www.w3.org/2000/svg",xlinkns:"http://www.w3.org/1999/xlink",createSVGCanvas:function(a,b){b.push(["xmlns",SVG.svgns],["xmlns:xlink","http://www.w3.org/1999/xlink"]);var c=document.createElementNS("http://www.w3.org/2000/svg","svg");this._setProperties(c,b);a.appendChild(c);return c},createRectangle:function(a,b,c,d,e){var f=document.createElementNS(this.svgns,"rect");f.setAttribute("x",a);f.setAttribute("y",b);f.setAttribute("width",c);f.setAttribute("height",d);SVG._setProperties(f,
e);return f},drawImage64:function(a,b,c,d,e,f,g){a=SVG.createImage64(a,b,c,d,e,g);f.appendChild(a);return a},createImage64:function(a,b,c,d,e,f){var g=document.createElementNS(this.svgns,"image");g.setAttribute("x",a);g.setAttribute("y",b);g.setAttribute("width",c);g.setAttribute("height",d);g.setAttribute("xlink:href",e);SVG._setProperties(g,f);return g},createLine:function(a,b,c,d,e){var f=document.createElementNS(this.svgns,"line");f.setAttribute("x1",a);f.setAttribute("y1",b);f.setAttribute("x2",
c);f.setAttribute("y2",d);SVG._setProperties(f,e);return f},createClip:function(a,b){var c=document.createElementNS(this.svgns,"clipPath");c.setAttribute("id",a);c.appendChild(b);return c},drawClip:function(a,b,c){a=SVG.createClip(a,b);c.appendChild(a);return a},drawRectangle:function(a,b,c,d,e,f){try{var g=SVG.createRectangle(a,b,c,d,f);e.appendChild(g)}catch(h){console.log("-------------------- "),console.log("Error on drawRectangle "+h),console.log(f),console.log("-------------------- ")}return g},
createEllipse:function(a,b,c,d,e){var f=document.createElementNS(this.svgns,"ellipse");f.setAttribute("cx",a);f.setAttribute("cy",b);f.setAttribute("rx",c);f.setAttribute("ry",d);SVG._setProperties(f,e);return f},drawEllipse:function(a,b,c,d,e,f){a=SVG.createEllipse(a,b,c,d,f);e.appendChild(a);return a},drawImage:function(a,b,c,d){var e=document.createElementNS(this.svgns,"image");e.setAttribute("x",a);e.setAttribute("y",b);c.appendChild(e);SVG._setProperties(e,d)},drawLine:function(a,b,c,d,e,f){try{var g=
SVG.createLine(a,b,c,d,f);e.appendChild(g)}catch(h){debugger}return g},drawPath:function(a,b,c){a=SVG.createPath(a,c);b.appendChild(a);return a},createPoligon:function(a,b){var c=document.createElementNS(this.svgns,"polygon");c.setAttribute("points",a);SVG._setProperties(c,b);return c},drawPoligon:function(a,b,c){a=SVG.createPoligon(a,c);b.appendChild(a);return a},createPath:function(a,b){var c=document.createElementNS(this.svgns,"path");c.setAttribute("d",a);SVG._setProperties(c,b);return c},drawCircle:function(a,
b,c,d,e){var f=document.createElementNS(this.svgns,"circle");f.setAttribute("cx",a);f.setAttribute("cy",b);f.setAttribute("r",c);d.appendChild(f);this._setProperties(f,e);return f},_setProperties:function(a,b){if(b instanceof Array)for(var c=0;c<b.length;c++)a.setAttribute(b[c][0],b[c][1]);else for(c in b)a.setAttribute(c,b[c])},createText:function(a,b,c,d){var e=document.createElementNS(this.svgns,"text");e.setAttributeNS(null,"x",a);e.setAttributeNS(null,"y",b);a=document.createTextNode(c);e.appendChild(a);
this._setProperties(e,d);return e},drawText:function(a,b,c,d,e){c=SVG.createText(a,b,c,e);d.appendChild(c);return c},drawGroup:function(a,b){var c=SVG.createGroup(b);a.appendChild(c);return c},createGroup:function(a){var b=document.createElementNS(this.svgns,"g");this._setProperties(b,a);return b}},CanvasToSVG={convert:function(a,b,c,d,e,f){a=this._convert(a,b,c,d,e);for(b=0;b<f.length;b++)a.setAttribute(f[b][0],f[b][1])},_convert:function(a,b,c,d,e){var f=a.toDataURL(),g=document.createElementNS("http://www.w3.org/2000/svg",
"image");g.setAttribute("id",e);g.setAttributeNS("http://www.w3.org/1999/xlink","xlink:href",f);g.setAttribute("x",c?c:0);g.setAttribute("y",d?d:0);g.setAttribute("width",a.width);g.setAttribute("height",a.height);g.imageData=f;b.appendChild(g);return g},importSVG:function(a,b){svg_xml=a;var c=b.getContext("2d"),d=new Image;d.src="data:image/svg+xml;base64,"+btoa(svg_xml);c.drawImage(d,0,0)}},userUI=new function(){this.clientMessages={info:[],warning:[],error:[]};this.getUser=function(){return wc_getFullUser()};
this.getUserInfo=function(){return wc_getUserInfo()};this.getServerMessages=function(){return wc_getMessages()};this.getClientMessages=function(){return this.clientMessages};this.addWarningMessage=function(a){this.clientMessages.warning.push(a)};this.addErrorMessage=function(a){this.clientMessages.error.push(a)};this.addInfoMessage=function(a){this.clientMessages.info.push(a)};this.clearAllClientMessages=function(){this.clientMessages={info:[],warning:[],error:[]}};this.getData=function(){return wc_getOwnedDataList()};
this.getJobData=function(a){var b=wc_getOwnedDataList(),c=[];if(null==b)return c;for(var d=0;d<b.length;d++)b[d].jobId==a&&c.push(b[d]);return c}};function getSO(){var a=window.navigator.appVersion.toLowerCase(),b="Unknown";-1!=a.indexOf("win")?b="Windows":-1!=a.indexOf("x11")?b="Linux":-1!=a.indexOf("mac")&&(b="Macintosh");return b}
var Browser={getappCodeName:function(){return navigator.appCodeName},getappVersion:function(){return navigator.appVersion},cookieEnabled:function(){return navigator.cookieEnabled},getPlatform:function(){return navigator.platform},getuserAgent:function(){return navigator.userAgent}};function getBrowser(){var a="",b="";$.each($.browser,function(c,d){"version"==c&&(a=d);!0==d&&(b=c)});return"Browser: "+b+" V."+a}
function getBrowserName(){var a="";$.each($.browser,function(b,c){!0==c&&(a=b)});return a}var Config=function(a){this.save=function(){$.cookie(a,JSON.stringify(this))};this.finalize=function(){$.cookie(a,null)};this.set=function(a,b){this[a]=b;this.save()};this.get=function(a){return this[a]};if(null!=$.cookie(a)){var b=JSON.parse($.cookie(a)),c;for(c in b)"save"!=c&&"finalize"!=c&&"get"!=c&&"set"!=c&&(this[c]=b[c])}this.save()};this.JSON||(this.JSON={});
(function(){function a(a){return 10>a?"0"+a:a}function b(a){e.lastIndex=0;return e.test(a)?'"'+a.replace(e,function(a){var b=h[a];return"string"===typeof b?b:"\\u"+("0000"+a.charCodeAt(0).toString(16)).slice(-4)})+'"':'"'+a+'"'}function c(a,d){var e,h,n,t,o=f,r,p=d[a];p&&"object"===typeof p&&"function"===typeof p.toJSON&&(p=p.toJSON(a));"function"===typeof k&&(p=k.call(d,a,p));switch(typeof p){case "string":return b(p);case "number":return isFinite(p)?""+p:"null";case "boolean":case "null":return""+
p;case "object":if(!p)return"null";f+=g;r=[];if("[object Array]"===Object.prototype.toString.apply(p)){t=p.length;for(e=0;e<t;e+=1)r[e]=c(e,p)||"null";n=0===r.length?"[]":f?"[\n"+f+r.join(",\n"+f)+"\n"+o+"]":"["+r.join(",")+"]";f=o;return n}if(k&&"object"===typeof k){t=k.length;for(e=0;e<t;e+=1)h=k[e],"string"===typeof h&&(n=c(h,p))&&r.push(b(h)+(f?": ":":")+n)}else for(h in p)Object.hasOwnProperty.call(p,h)&&(n=c(h,p))&&r.push(b(h)+(f?": ":":")+n);n=0===r.length?"{}":f?"{\n"+f+r.join(",\n"+f)+"\n"+
o+"}":"{"+r.join(",")+"}";f=o;return n}}"function"!==typeof Date.prototype.toJSON&&(Date.prototype.toJSON=function(){return isFinite(this.valueOf())?this.getUTCFullYear()+"-"+a(this.getUTCMonth()+1)+"-"+a(this.getUTCDate())+"T"+a(this.getUTCHours())+":"+a(this.getUTCMinutes())+":"+a(this.getUTCSeconds())+"Z":null},String.prototype.toJSON=Number.prototype.toJSON=Boolean.prototype.toJSON=function(){return this.valueOf()});var d=/[\u0000\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g,
e=/[\\\"\x00-\x1f\x7f-\x9f\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g,f,g,h={"\u0008":"\\b","\t":"\\t","\n":"\\n","\u000c":"\\f","\r":"\\r",'"':'\\"',"\\":"\\\\"},k;"function"!==typeof JSON.stringify&&(JSON.stringify=function(a,b,d){var e;g=f="";if("number"===typeof d)for(e=0;e<d;e+=1)g+=" ";else"string"===typeof d&&(g=d);if((k=b)&&"function"!==typeof b&&("object"!==typeof b||"number"!==typeof b.length))throw Error("JSON.stringify");return c("",
{"":a})});"function"!==typeof JSON.parse&&(JSON.parse=function(a,b){function c(a,d){var e,f,g=a[d];if(g&&"object"===typeof g)for(e in g)Object.hasOwnProperty.call(g,e)&&(f=c(g,e),void 0!==f?g[e]=f:delete g[e]);return b.call(a,d,g)}var e;d.lastIndex=0;d.test(a)&&(a=a.replace(d,function(a){return"\\u"+("0000"+a.charCodeAt(0).toString(16)).slice(-4)}));if(/^[\],:{}\s]*$/.test(a.replace(/\\(?:["\\\/bfnrt]|u[0-9a-fA-F]{4})/g,"@").replace(/"[^"\\\n\r]*"|true|false|null|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?/g,
"]").replace(/(?:^|:|,)(?:\s*\[)+/g,"")))return e=eval("("+a+")"),"function"===typeof b?c({"":e},""):e;throw new SyntaxError("JSON.parse");})})();var PUBMED_RSS,BIOINFO_RSS,FEED_OBJECT,NUMBER_OF_FEEDS=0;
function initFeedUrls(){PUBMED_RSS={babelomics:"http://eutils.ncbi.nlm.nih.gov/entrez/eutils/erss.cgi?rss_guid=18A2e0_HeVtQ9k4iNuwfZFSuh5Ck38BCLWW3Wrlll4hWvJ8AtH",gepas:"http://eutils.ncbi.nlm.nih.gov/entrez/eutils/erss.cgi?rss_guid=1JKSd2KF3MGnV8mU6zDJ5PPH9-xMKOjyzBOmIeDyef9oPjR19C",fatigo:"http://eutils.ncbi.nlm.nih.gov/entrez/eutils/erss.cgi?rss_guid=14GVrEVieJsBLt8q3l7R_YRQF8Tljz7pDcLCPmsBXT7C3vcMrI",fatiscan:"http://eutils.ncbi.nlm.nih.gov/entrez/eutils/erss.cgi?rss_guid=18ervbTh5AP3vfhgpfpT8nuS-nlu-HGIjZU1IFPR3fJ15OKAOb",
gesbap:"http://eutils.ncbi.nlm.nih.gov/entrez/eutils/erss.cgi?rss_guid=1Rkszs2HVZ2QHM3VV-sfTuWBxZ3syAewBayCSYb3ariok2b1DW",genecodis:"http://eutils.ncbi.nlm.nih.gov/entrez/eutils/erss.cgi?rss_guid=1h7Su3P88Y-s0IJD2PR7EPdYjWx0n1H8LGb-Zm150P3-TFVERh",blast2go:"http://eutils.ncbi.nlm.nih.gov/entrez/eutils/erss.cgi?rss_guid=1HC7gWvsJppOwqCZp0h91Mvqp-QMP15A6Y7Qg2jKNZy3Ap4gfa",snow:"http://eutils.ncbi.nlm.nih.gov/entrez/eutils/erss.cgi?rss_guid=1FU_ZGTY7E6tYYsWpRpUfCUmW163CN4E08cHCccdpHbJvTmgv7"};BIOINFO_RSS=
{babelomics:"http://bioinfo.cipf.es/taxonomy/term/53/feed/xml",gepas:"http://bioinfo.cipf.es/taxonomy/term/52/feed/xml",fatiscan:"http://bioinfo.cipf.es/taxonomy/term/65/feed/xml",snow:"http://bioinfo.cipf.es/taxonomy/term/50/feed/xml"}}
function loadFeedByTags(a,b){var c=new StringBuffer;c.append("<div id ='referencesContainer' class='feed-content'>");c.append("\t<table style='width:100%; height:100%'>");c.append("\t\t<tr valign='middle'>");c.append("\t\t\t<td align='center'>loading references...<img src='resources/images/icons/Waiting.gif' alt='' /></td>");c.append("\t\t</tr>");c.append("\t</table>");c.append("</div> ");$("#"+b+"_references").append(c.toString());c=fromTags2Urls(a);FEED_OBJECT=[];loadUrlFeeds(c,0,"referencesContainer")}
function fromTags2Urls(a){var b,c=[];if(0<a.length)for(var d=0;d<a.length;d++)b=a[d],PUBMED_RSS||initFeedUrls(),PUBMED_RSS[b]&&(c=c.concat(PUBMED_RSS[b]));return c}function loadUrlFeeds(a,b,c){$.jGFeed(a[b],function(d){null!=d&&(FEED_OBJECT=FEED_OBJECT.concat(d));b++;b<a.length?loadUrlFeeds(a,b,c):renderFeeds(c)})}
function renderFeeds(a){var b=new StringBuffer,c=[],d=[];if(null!=FEED_OBJECT&&0<FEED_OBJECT.length){for(var e=0;e<FEED_OBJECT.length;e++)for(var f=FEED_OBJECT[e],g=0;g<f.entries.length;g++){var h=f.entries[g];d[h.title]||(d[h.title]=!0,c=c.concat(f.entries[g]))}b.appendln("<div>&nbsp;</div>");b.appendln("<div>&nbsp;</div>");b.appendln("<div>&nbsp;</div>");b.append("<span class='references-title'>References</span>");b.append("<ul>");for(g=0;g<c.length;g++){h=c[g];b.append("<li>");b.append("<span>"+
h.author+". </span>");b.append("<span class='feed-content'><a href='"+h.link+"'  target='_blank'> "+h.title+"</a></span>");b.append("<span>"+h.categories+"</span>");d=h.content.split("<a");for(e=0;e<d.length;e++)f=d[e].lastIndexOf("</a>"),d[e]=d[e].substring(0,f);b.append("<div class='feed-link'><a class='text-show feed-link'>...see PubMed links</a>");b.append("\t<span class='text-hide feed-content'>");for(e=0;e<d.length;e++)null!=d[e]&&""!=d[e]&&(b.append("<a target='_blank'"),b.append(d[e]),b.append("</a>"));
b.append("\t</spam>");b.append("</div>");b.append("</li>");b.appendln("<div>&nbsp;</div>")}b.append("</ul>")}else b.append("<div class='feed-content'>no feeds found</div");$("#"+a).html(b.toString());initReadMore()}
Math.sha1Hash=function(a){for(var b=[1518500249,1859775393,2400959708,3395469782],a=a+String.fromCharCode(128),c=Math.ceil((a.length/4+2)/16),d=Array(c),e=0;e<c;e++){d[e]=Array(16);for(var f=0;16>f;f++)d[e][f]=a.charCodeAt(64*e+4*f)<<24|a.charCodeAt(64*e+4*f+1)<<16|a.charCodeAt(64*e+4*f+2)<<8|a.charCodeAt(64*e+4*f+3)}d[c-1][14]=8*(a.length-1)/Math.pow(2,32);d[c-1][14]=Math.floor(d[c-1][14]);d[c-1][15]=8*(a.length-1)&4294967295;for(var a=1732584193,f=4023233417,g=2562383102,h=271733878,k=3285377520,
l=Array(80),m,q,s,n,t,e=0;e<c;e++){for(var o=0;16>o;o++)l[o]=d[e][o];for(o=16;80>o;o++)l[o]=Math.ROTL(l[o-3]^l[o-8]^l[o-14]^l[o-16],1);m=a;q=f;s=g;n=h;t=k;for(o=0;80>o;o++){var r=Math.floor(o/20),r=Math.ROTL(m,5)+Math.f(r,q,s,n)+t+b[r]+l[o]&4294967295;t=n;n=s;s=Math.ROTL(q,30);q=m;m=r}a=a+m&4294967295;f=f+q&4294967295;g=g+s&4294967295;h=h+n&4294967295;k=k+t&4294967295}return a.toHexStr()+f.toHexStr()+g.toHexStr()+h.toHexStr()+k.toHexStr()};
Math.f=function(a,b,c,d){switch(a){case 0:return b&c^~b&d;case 1:return b^c^d;case 2:return b&c^b&d^c&d;case 3:return b^c^d}};Math.ROTL=function(a,b){return a<<b|a>>>32-b};Number.prototype.toHexStr=function(){for(var a="",b,c=7;0<=c;c--)b=this>>>4*c&15,a+=b.toString(16);return a};
function SVGComponent(a,b,c){this.labelNodeGroup=this.mainNodeGroup=this.SVGComponentNodeGroup=null;this.targetID=b.id;this.bottom=30;this.top=0;this.left=100;this.right=900;this.width=1100;this.svgHeight=this.height=50;this.backgroundColor="#FFFFFF";this.titleColor="#000000";this.title=this.overflow=!1;this.titleName=null;this.titleFontSize=10;null!=c&&(null!=c.bottom&&(this.bottom=c.bottom),null!=c.top&&(this.top=c.top),null!=c.left&&(this.left=c.left),null!=c.right&&(this.right=c.right),null!=
c.width&&(this.width=c.width),null!=c.height&&(this.svgHeight=this.height=c.height),null!=c.svgHeight&&(this.svgHeight=c.svgHeight),null!=c.backgroundColor&&(this.backgroundColor=c.backgroundColor),null!=c.titleFontSize&&(this.titleFontSize=c.titleFontSize),null!=c.titleColor&&(this.titleColor=c.titleColor),null!=c.title&&(this.title=!0,this.titleName=c.title),null!=c.overflow&&(this.overflow=c.overflow));this.id=SVGComponenterID;this.idSVGComponent=this.id+"_Features";this.namesID=this.id+"_Names";
this.idMain=this.id+"_Main";this.click=new Event(this)}SVGComponent.prototype.createSVGDom=function(a,b,c,d,e){a=document.getElementById(a);this.overflow&&a.setAttribute("overflow-y","auto");this._svg=SVG.createSVGCanvas(a,[["id",b],["height",this.svgHeight],["width",this.right]]);SVG.drawRectangle(this.left,0,this.right-this.left,this.svgHeight,this._svg,[["fill",e],[b,b+"_background"]]);return this._svg};SVGComponent.prototype.mouseClick=function(){};SVGComponent.prototype.mouseMove=function(){};
SVGComponent.prototype.mouseDown=function(){};SVGComponent.prototype.mouseUp=function(){};
SVGComponent.prototype.init=function(){this._svg=this.createSVGDom(this.targetID,this.id,this.width,this.height,this.backgroundColor);this.mainNodeGroup=SVG.drawGroup(this._svg,[["id",this.idMain]]);this.SVGComponentNodeGroup=SVG.drawGroup(this.mainNodeGroup,[["id",this.idSVGComponent]]);this.labelNodeGroup=SVG.drawGroup(this.mainNodeGroup,[["id",this.idLabels]]);var a=this;this._svg.addEventListener("click",function(b){a.mouseClick(b)},!1);this._svg.addEventListener("mousemove",function(b){a.mouseMove(b,
a)},!1);this._svg.addEventListener("mousedown",function(b){a.mouseDown(b,a)},!1);this._svg.addEventListener("mouseup",function(b){a.mouseUp(b,a)},!1)};
function GraphController(a,b,c,d,e){this._model=a;this.id=e;this.targetId=b;this.interactomeId="";this._layouts=[];this._layoutIndex=0;this._showNodeLabels=!0;this.height=d;this.width=c;this.nodeScale=this.graphScale=1;this.edgeIdClicked=this.nodeIdClicked=null;this.actionClick=0;this.canvasClicked=!1;this.layoutCoordenates=[];this.init();this.svg=this.drawStaticHTML();this._view=new GraphView(this,this.svg,c,d,e);this._showNodeLabels=!0;var f=this;this._view.nodeMoving.addEventListener(function(a,
b){f.nodeMoving(b)});this._view.nodeClick.addEventListener(function(a,b){f.nodeClicked(b)});this._view.edgeClick.addEventListener(function(a,b){f.edgeClicked(b)});this._view.canvasClick.addEventListener(function(){f.clickOnCanvas()});this._view.canvasMovingEvent.addEventListener(function(a,b){f.canvasMoving(b)});this.nodeClick=new Event;this.edgeClick=new Event;this.canvasClick=new Event}
GraphController.prototype={getSelectedNodeId:function(){return this._view.selectedNode},getSelectedEdgeId:function(){return this._view.selectedEdge},deserializer:function(a){this._coordenates=a.Graph.coordenates;this._shape=a.Graph.shape;this._color=a.Graph.color;this._size=a.Graph.size;this._opacity=a.Graph.opacity;this._id_title=a.Graph.id_title;this._nodeStrokeWidth=a.Graph.nodeStrokeWidth;this._colorOfEdges=a.Graph.colorOfEdges;this._deletedEdges=this._deserializerBooleans(a.Graph.deletedEdges);
this._deletedNodes=this._deserializerBooleans(a.Graph.deletedNodes);this._visible=this._deserializerBooleans(a.Graph.visible);this._visibleEdges=this._deserializerBooleans(a.Graph.visibleEdges)},_deserializerBooleans:function(a){var b=[];for(key in a)"true"==a[key]&&(b[key]=!0),"false"==a[key]&&(b[key]=!1);return b},serializer:function(){var a=new StringBuffer;a.append("{");a.append('"Graph" : { "nodes" : [');for(var b=0;b<this._model._nodes.length;b++){var c=this._model._nodes[b],d=this._model._nodes[b].id.replace(this.interactomeId,
"");a.append("{");a.append('"id":"'+d+'",');a.append('"edgesIndexes":[');for(d=0;d<c.edgesIndexes.length;d++)a.append('"'+c.edgesIndexes[d]+'"'),d!=c.edgesIndexes.length-1&&a.append(",");a.append("]}");b!=this._model._nodes.length-1&&a.append(",")}a.append('],"edges":[');for(b=0;b<this._model._edges.length;b++)c=this._model._edges[b],d=this._model._edges[b].id.replace(this.interactomeId,""),a.append("{"),a.append('"id":"'+d+'",'),a.append('"source":"'+c.source.replace(this.interactomeId,"")+'",'),
a.append('"target":"'+c.target.replace(this.interactomeId,"")+'",'),a.append('"type":"'+c.type+'"}'),b!=this._model._edges.length-1&&a.append(",");a.append("],");a.append(this._serializeCoordenatesToJSON("coordenates",this._coordenates,!0));a.append(this._serializeHashMaptoJSON("shape",this._shape,!0));a.append(this._serializeHashMaptoJSON("color",this._color,!0));a.append(this._serializeHashMaptoJSON("size",this._size,!0));a.append(this._serializeHashMaptoJSON("opacity",this._opacity,!0));a.append(this._serializeHashMaptoJSON("visible",
this._visible,!0));a.append(this._serializeHashMaptoJSON("id_title",this._id_title,!0));a.append(this._serializeHashMaptoJSON("nodeStrokeWidth",this._nodeStrokeWidth,!0));a.append(this._serializeHashMaptoJSON("colorOfEdges",this._colorOfEdges,!0));a.append(this._serializeHashMaptoJSON("deletedEdges",this._deletedEdges,!0));a.append(this._serializeHashMaptoJSON("deletedNodes",this._deletedNodes,!0));a.append(this._serializeHashMaptoJSON("visibleEdges",this._visibleEdges,!0));a.append(this._serializeHashMaptoJSON("nodeStrokeWidth",
this._nodeStrokeWidth,!1));a.append("}");a.append("}");return a.toString()},_serializeCoordenatesToJSON:function(a,b,c){var d=new StringBuffer;d.append('"'+a+'" : {');var a=[],e;for(e in b)a.push('"'+e+'" : ['+b[e][0]+","+b[e][1]+"]");for(b=0;b<a.length-1;b++)d.append(a[b]+",");d.append(a[a.length-1]);c?d.append("},"):d.append("}");return d},_serializeHashMaptoJSON:function(a,b,c){var d=new StringBuffer;d.append('"'+a+'" : {');var a=[],e;for(e in b)a.push('"'+e+'" : "'+b[e]+'"');for(b=0;b<a.length-
1;b++)d.append(a[b]+",");d.append(a[a.length-1]);c?d.append("},"):d.append("}");return d},init:function(){this.setLayouts(this._model.layouts[0]);this._coordenates=Array(this._model.getNodes().length);this._shape=Array(this._model.getNodes().length);this._size=Array(this._model.getNodes().length);this._color=Array(this._model.getNodes().length);this._opacity=Array(this._model.getNodes().length);this._visible=Array(this._model.getNodes().length);this._nodeStrokeWidth=Array(this._model.getNodes().length);
this._id_title=Array(this._model.getNodes().length);this._deletedNodes=Array(this._model.getNodes().length);this._deletedEdges=Array(this._model.getEdges().length);this._colorOfEdges=Array(this._model.getEdges().length);this.setDefaultVisibility();this.setDefaultSize();this.setDefaultShape();this.setDefaultColorNode();this.setDefaultOpacity();this.setDefaultNodeStrokeWidth();this.setDefaultIdTitle();this.setDefaultDeletedNodes();this.setDefaultDeletedEdges();this.setDefaultColorEdges();this._visibleEdges=
Array(this._model.getEdges().length);this.setDefaultEdgeVisibility();for(var a=0;a<this._model._nodes.length;a++)this.setCoordenates(this._model._nodes[a].id,this._model._nodes[a].cx[0]*(this.width-100)+50,this._model._nodes[a].cy[0]*(this.height-100)+50)},drawStaticHTML:function(){document.getElementById(this.targetId).innerHTML="";this.svg=SVG.createSVGCanvas(document.getElementById(this.targetId),[["id",this.id],["viewBox","0 0 "+this.width+" "+this.height],["style","top:0px; left:0px; width:"+
this.width+"px; height:"+this.height+"px; cursor:all-scroll;background-repeat:no-repeat"]]);SVG.drawRectangle(0,0,this.width,this.height,this.svg,[["fill","white"],["id","background"],["opacity","0"]]);SVG.drawGroup(this.svg,[["id","labels"]]);SVG.drawGroup(this.svg,[["id","edges"]]);SVG.drawGroup(this.svg,[["id","canvas"]]);return this.svg},hideNodeLabels:function(){this._showNodeLabels=!1;this._view.nodeLabelShow=!1;this._view.clearLabels()},changeLayout:function(a){this._layoutIndex=a;for(var b=
0;b<this._model.getNodes().length;b++){var c=parseFloat(this.layoutCoordenates[a][b][0])*(this.width-100)+50,d=parseFloat(this.layoutCoordenates[a][b][1])*(this.height-100)+50;this.setCoordenates(this._model.getNodes()[b].getId(),Math.ceil(c),Math.ceil(d))}this.draw()},setLayouts:function(a){this._layouts=a;this.layoutCoordenates=Array(this._layouts.length);for(a=0;a<this._layouts.length;a++)this.layoutCoordenates[a]=this._model.layoutCoordenates},setBackgroundColor:function(a){this._view.getBackground().setAttribute("fill",
a)},getBackgroundColor:function(){return this._view.getBackground().getAttribute("fill")},nodeClicked:function(){this.nodeClick.notify()},edgeClicked:function(){this.edgeClick.notify()},clickOnCanvas:function(){this.canvasClick.notify()},draw:function(){this._view.clearAll();this.drawNodes();this.drawEdges();this._showNodeLabels&&this._view.showNodeLabels(this)},showNodeLabels:function(){this._showNodeLabels=!0;this._view.showNodeLabels(this)},setDefaultOpacity:function(){for(var a=0;a<this._model.getNodes().length;a++)this._opacity[this._model.getNodes()[a].id]=
this._model.getNodes()[a].opacity},setDefaultSize:function(){for(var a=0;a<this._model.getNodes().length;a++)this._size[this._model.getNodes()[a].id]=this._model.getNodes()[a].size},setDefaultVisibility:function(){for(var a=0;a<this._model.getNodes().length;a++)this._visible[this._model.getNodes()[a].id]=!0},setDefaultShape:function(){for(var a=0;a<this._model.getNodes().length;a++)this._shape[this._model.getNodes()[a].id]=this._model.getNodes()[a].shape},setDefaultColorNode:function(){for(var a=
0;a<this._model.getNodes().length;a++)this._color[this._model.getNodes()[a].id]=this._model.getNodes()[a].color},setDefaultNodeStrokeWidth:function(){for(var a=0;a<this._model.getNodes().length;a++)this._nodeStrokeWidth[this._model.getNodes()[a].id]=this._model.getNodes()[a].nodeStrokeWidth},setDefaultIdTitle:function(){for(var a=0;a<this._model.getNodes().length;a++)this._id_title[this._model.getNodes()[a].id]=this._model.getNodes()[a].title},setDefaultEdgeVisibility:function(){for(var a=0;a<this._model.getEdges().length;a++)this._visibleEdges[this._model.getEdges()[a].id]=
!0},setDefaultDeletedNodes:function(){for(var a=0;a<this._model.getNodes().length;a++)this._deletedNodes[this._model.getNodes()[a].id]=!1},setDefaultDeletedEdges:function(){for(var a=0;a<this._model.getEdges().length;a++)this._deletedEdges[this._model.getEdges()[a].id]=!1},setDefaultColorEdges:function(){for(var a=0;a<this._model.getEdges().length;a++)this._colorOfEdges[this._model.getEdges()[a].id]="black"},nodeMoving:function(a){var b=this.getNode(a),c=this._view.getCoordenates(a);this._view.getNodeView(a)._coordenates=
c;this._view.getNodeView(a).cx=c[0];this._view.getNodeView(a).cy=c[1];this._view.getNodeView(a).clearLabel();this.updateCoordenates(a,c);this._showNodeLabels&&this._view.getNodeView(a).renderLabel();"undefined"==b||null==b||(this._view.clearEdges(),this.drawEdges())},canvasMoving:function(a){var b=a[1];this.translateX(a[0]);this.translateY(b)},updateCoordenates:function(a,b){this._model.getNodeIndex(a);this._coordenates[a]=[parseFloat(b[0]),parseFloat(b[1])]},zoomIn:function(){for(var a in interactomeViewerViz.controller._coordenates)this._coordenates[a]=
[2*this._coordenates[a][0],2*this._coordenates[a][1]];this.draw()},zoomOut:function(){for(var a in interactomeViewerViz.controller._coordenates)this._coordenates[a]=[this._coordenates[a][0]/2,this._coordenates[a][1]/2];this.draw()},setSVG:function(a){this._view.setSVG(a)},setCoordenates:function(a,b,c){this._coordenates[a]=[b,c]},scale:function(a){this.graphScale=a;for(var b=0;b<this._coordenates.length;b++)this._coordenates[b][0]*=a,this._coordenates[b][1]*=a;for(b=0;b<this._model.getNodes().length;b++)this._size[b]*=
a;this._view.radio*=a;this.draw()},translateX:function(a){for(var b=this._model.getNodes(),c=0;c<b.length;c++)this._coordenates[b[c].id][0]=parseFloat(this._coordenates[b[c].id][0])+parseFloat(a);this.draw()},translateY:function(a){for(var b=this._model.getNodes(),c=0;c<b.length;c++)this._coordenates[b[c].id][1]=parseFloat(this._coordenates[b[c].id][1])+parseFloat(a);this.draw()},drawNodes:function(){this._view.drawNodes(this._model.getNodes(),this._coordenates,this)},renderEdge:function(a){var b=
this.getEdge(a);if(null!=b){var c=this.getNodeCoordenates(b.source),d=this.getNodeCoordenates(b.target);null!=c&&null!=d&&(a=this._colorOfEdges[a],this._view.renderEdge(b,this.getNode(b.source),c,this.getNode(b.target),d,a,this))}},drawEdges:function(){for(var a=0;a<this._model.getEdges().length;a++)this.renderEdge(this._model.getEdges()[a].id)},getEdge:function(a){return this._model.getEdge(a)},getNode:function(a){return this._model.getNode(a)},getNodeIndex:function(a){return this._model.getNodeIndex(a)},
getNodeSize:function(a){return this._size[a]},getNodeShape:function(a){return this._shape[a]},getNodeColor:function(a){return this._color[a]},getOpacity:function(a){return this._opacity[a]},getNodeCoordenates:function(a){return this._coordenates[a]},getNodeStrokeWidth:function(a){return this._nodeStrokeWidth[a]},getTitle:function(a){return this._id_title[a]},random:function(){for(var a=0;a<this._model.getNodes().length;a++)this._coordenates[a]=[Math.floor(Math.random()*this.height),Math.floor(Math.random()*
this.width)];this.draw()},getModel:function(){return this._model},addNode:function(a,b,c,d,e,f,g,h,k,l){var m=[],q=[];m.push(c);q.push(d);var s=[];s.push(c);s.push(d);c=new PlotNode(a,b,m,q,[],{color:e,size:h,opacity:g,shape:k,nodeStrokeWidth:l});d=this._model.getNodes();this._model.getNodesId()[a]=d.length;d.push(c);this._coordenates[a]=s;this._color[a]=e;this._visible[a]=f;this._opacity[a]=g;this._size[a]=h;this._shape[a]=k;this._nodeStrokeWidth[a]=l;this._deletedNodes[a]=!1;this._id_title[a]=b;
this.draw();return c},addEdge:function(a,b,c){var b=this.getNode(b),c=this.getNode(c),d=this.getModel().getEdges(),e=this.getModel().getEdgesId(),f=new PlotEdge(a,b.id,c.id,{visibility:!0}),g=this.getModel().getEdges().length;e[a]=g;d.push(f);this.getModel().setEdges(d);this.getModel().setEdgesId(e);this._visibleEdges[a]=!0;this._deletedEdges[a]=!1;this._colorOfEdges[a]="black";b.edgesIndexes.push(a);c.edgesIndexes.push(a);this.draw()}};
function randomLayout(){this.sifFieldsString=[];this.nodes=[];this.edges=[];this.nodesId={};this.edgesId={};this.loadSIF=function(a){for(var a=a.split("\n"),b=0;b<a.length;b++)if(0<a[b].length){var c=a[b].replace(/^\s*|\s*$/g,"").replace(/\s/g,"**%**").split("**%**");0<c.length&&this.sifFieldsString.push(c)}this.init()};this.addEdge=function(a,b){this.nodes[a].edgesIndexes.push(b)};this._calculateCoordenates=function(a,b){var c=[],d=[];c.push(Math.random());d.push(Math.random());return new PlotNode(b,
b,c,d,[])};this.init=function(){for(var a=0;a<this.sifFieldsString.length;a++){var b=this.sifFieldsString[a][0];this.nodes.push(this._calculateCoordenates(a,b));this.nodesId[b]=a}for(a=0;a<this.sifFieldsString.length;a++)for(b=2;b<this.sifFieldsString[a].length;b++){var c=this.sifFieldsString[a][0],d=this.sifFieldsString[a][b],e="edge_"+c+"_"+d;this.addEdge(a,e);this.edges.push(new PlotEdge(e,c,d));this.edgesId[e]=this.edges.length-1}};this.toObject=function(){return new PlotGraph(this.nodes,this.nodesId,
this.edges,this.edgesId,["random"])}}
function twoLayout(){randomLayout.prototype.constructor.call(this);this.classesType=[];this.classes={};this.classesIndex={};this._calculateCoordenates=function(a,b){if(2==this.classesType.length){var c=[],d=[];c.push(Math.random());this.classes[b]==this.classesType[0]?d.push(0.2):d.push(0.8)}return new PlotNode(b,b,c,d,[])};this.loadSIF=function(a){for(var a=a.split("\n"),b=0;b<a.length;b++)if(0<a[b].length){var c=a[b].replace(/^\s*|\s*$/g,"").replace(/\s/g,"**%**").split("**%**");if(0<c.length){var d=
c[c.length-1];this.addClass(d);this.classes[c[0]]=d;this.classesIndex[d].push(c[0]);this.sifFieldsString.push(c.slice(0,c.length-2))}}this.init()};this.addClass=function(a){for(var b=0;b<this.classesType.length;b++)if(this.classesType[b]==a)return;this.classesType.push(a);this.classesIndex[a]=[]}}twoLayout.prototype=new randomLayout;twoLayout.prototype.constructor=randomLayout;twoLayout.prototype.parent=randomLayout.prototype;
function RankedTwoLayout(){twoLayout.prototype.constructor.call(this);this.nodeLevel={};this.maxLevelPerClass={};this.nodeLevelSorter=[];this.nodesProcessedPerClasse={};this.addClass=function(a){for(var b=0;b<this.classesType.length;b++)if(this.classesType[b]==a)return;this.classesType.push(a);this.classesIndex[a]=[];this.maxLevelPerClass[a]=0;this.nodesProcessedPerClasse[a]=0};this._calculateCoordenates=function(a,b,c){if(2==this.classesType.length){var d=[],e=[];c||(a=this.classes[b],d.push(this.nodesProcessedPerClasse[a]*
(1/this.classesIndex[a].length)),this.nodesProcessedPerClasse[a]++,this.classes[b]==this.classesType[0]?e.push(0.1):e.push(0.9))}return new PlotNode(b,b,d,e,[])};this.loadSIF=function(a){for(var a=a.split("\n"),b=0;b<a.length;b++)if(0<a[b].length){var c=a[b].replace(/^\s*|\s*$/g,"").replace(/\s/g,"**%**").split("**%**");if(0<c.length){var d=c[c.length-1];this.addClass(d);this.classes[c[0]]=d;this.classesIndex[d].push(c[0]);this.sifFieldsString.push(c.slice(0,c.length-2))}}this.init()};this.init=function(){for(var a=
0;a<this.sifFieldsString.length;a++){var b=this.sifFieldsString[a][0],c=this._calculateCoordenates(a,b,!0);this.nodes.push(c);this.nodesId[b]=a;this.nodeLevel[b]=0}for(a=0;a<this.sifFieldsString.length;a++)for(b=2;b<this.sifFieldsString[a].length;b++){var c=this.sifFieldsString[a][0],d=this.sifFieldsString[a][b],e="edge_"+c+"_"+d;this.addEdge(a,e);this.edges.push(new PlotEdge(e,c,d));this.edgesId[e]=this.edges.length-1;if(this.classes[c]!=this.classes[d]){this.nodeLevel[c]++;this.nodeLevel[d]++;var e=
this.classes[c],f=this.classes[d];this.maxLevelPerClass[e]<this.nodeLevel[c]&&(this.maxLevelPerClass[e]=this.nodeLevel[c]);this.maxLevelPerClass[f]<this.nodeLevel[d]&&(this.maxLevelPerClass[f]=this.nodeLevel[d])}}for(a=0;a<this.sifFieldsString.length;a++)b=this.sifFieldsString[a][0],this.nodeLevelSorter.push([this.nodeLevel[b],b]);this.nodeLevelSorter.sort();this.nodes=[];for(a=0;a<this.nodeLevelSorter.length;a++)b=this.nodeLevelSorter[a][1],c=this._calculateCoordenates(a,b,!1),this.nodes.push(c),
this.nodesId[b]=a}}RankedTwoLayout.prototype=new twoLayout;RankedTwoLayout.prototype.constructor=twoLayout;RankedTwoLayout.prototype.parent=twoLayout.prototype;
function HivePlot(a){RankedTwoLayout.prototype.constructor.call(this);this.edgeType="line";this.classColor=null;console.log(a);null!=a&&(null!=a.edgeType&&(this.edgeType=a.edgeType),null!=a.classColor&&(this.classColor=a.classColor));this.addClass=function(a){for(var c=0;c<this.classesType.length;c++)if(this.classesType[c]==a)return;this.classesType.push(a);this.classesIndex[a]=[];this.maxLevelPerClass[a]=0;this.nodesProcessedPerClasse[a]=0};this._calculateCoordenates=function(a,c,d){var a=[],e=[],
f=this.classes[c];d||(this.nodesProcessedPerClasse[f]++,this.classes[c]==this.classesType[0]&&(a.push(0.5),d=0.6/this.classesIndex[f].length*(this.classesIndex[f].length-this.nodesProcessedPerClasse[f]),e.push(d)),this.classes[c]==this.classesType[1]&&(a.push(0.5+0.5/this.classesIndex[f].length*this.nodesProcessedPerClasse[f]),d=0.6+0.4/this.classesIndex[f].length*this.nodesProcessedPerClasse[f],e.push(d)),this.classes[c]==this.classesType[2]&&(a.push(0.5-0.5/this.classesIndex[f].length*this.nodesProcessedPerClasse[f]),
d=0.6+0.4/this.classesIndex[f].length*this.nodesProcessedPerClasse[f],e.push(d)));return new PlotNode(c,c,a,e,[],{color:this.classColor[f]})};this.getEdgeLocation=function(a,c){if(a==this.classesType[0]){if(c==this.classesType[1])return"AreaB";if(c==this.classesType[2])return"AreaA"}if(a==this.classesType[1]){if(c==this.classesType[0])return"AreaB";if(c==this.classesType[2])return"AreaC"}if(a==this.classesType[2]){if(c==this.classesType[0])return"AreaA";if(c==this.classesType[1])return"AreaC"}};this.init=
function(){for(var a=0;a<this.sifFieldsString.length;a++){var c=this.sifFieldsString[a][0],d=this._calculateCoordenates(a,c,!0);this.nodes.push(d);this.nodesId[c]=a;this.nodeLevel[c]=0}for(a=0;a<this.sifFieldsString.length;a++)for(c=2;c<this.sifFieldsString[a].length;c++){var d=this.sifFieldsString[a][0],e=this.sifFieldsString[a][c],f="edge_"+d+"_"+e;this.addEdge(a,f);var g=this.classes[d],h=this.classes[e];this.edges.push(new PlotEdge(f,d,e,{type:this.edgeType,area:this.getEdgeLocation(g,h),classesNumber:3,
opacity:0.5}));this.edgesId[f]=this.edges.length-1;this.classes[d]!=this.classes[e]?(this.nodeLevel[d]++,this.nodeLevel[e]++,this.maxLevelPerClass[g]<this.nodeLevel[d]&&(this.maxLevelPerClass[g]=this.nodeLevel[d]),this.maxLevelPerClass[h]<this.nodeLevel[e]&&(this.maxLevelPerClass[h]=this.nodeLevel[e])):this.edges.pop()}for(a=0;a<this.sifFieldsString.length;a++)c=this.sifFieldsString[a][0],this.nodeLevelSorter.push([this.nodeLevel[c],c]);this.nodeLevelSorter.reverse().sort();this.nodes=[];for(a=0;a<
this.nodeLevelSorter.length;a++)c=this.nodeLevelSorter[a][1],d=this._calculateCoordenates(a,c,!1),this.nodes.push(d),this.nodesId[c]=a}}HivePlot.prototype=new RankedTwoLayout;HivePlot.prototype.constructor=RankedTwoLayout;HivePlot.prototype.parent=RankedTwoLayout.prototype;
function PlotGraph(a,b,c,d,e){this._nodes=a;this._edges=c;this.nodesId=b;this.edgesId=d;this.layouts=e;this.getNodes=function(){return this._nodes};this.getNodesId=function(){return this.nodesId};this.setNodes=function(a){this._nodes=a};this.getNode=function(a){return this._nodes[this.nodesId[a]]};this.getNodeIndex=function(a){return this.nodesId[a]};this.getEdges=function(){return this._edges};this.getEdgesId=function(){return this.edgesId};this.getEdge=function(a){return this._edges[this.edgesId[a]]};
this.setEdges=function(a){this._edges=a};this.setEdgesId=function(a){this.edgesId=a};this.getEdgesFromNode=function(a){for(var b=[],c=0;c<this._nodes[this.nodesId[a]].edgesIndexes.length;c++)b.push(this.getEdge(this._nodes[this.nodesId[a]].edgesIndexes[c]));return b}}
function PlotEdge(a,b,c,d){this.id=a;this.source=b;this.target=c;this.type="line";this.classesNumber=this.area=null;this.color="black";this.opacity=1;null!=d&&(null!=d.type&&(this.type=d.type),null!=d.area&&(this.area=d.area),null!=d.area&&(this.classesNumber=d.classesNumber),null!=d.color&&(this.color=d.color),null!=d.opacity&&(this.opacity=d.opacity),null!=d.visibility&&(this.visibility=d.visibility));this.getSource=function(){return this.source};this.getTarget=function(){return this.target};this.getId=
function(){return this.id}}function PlotNode(a,b,c,d,e,f){this.id=a;this.title=b;this.cx=c;this.cy=d;this.edgesIndexes=e;this.color="black";this.size=3;this.opacity=1;this.shape="ci";null!=f&&(null!=f.color&&(this.color=f.color),null!=f.size&&(this.size=f.size),null!=f.opacity&&(this.opacity=f.opacity),null!=f.shape&&(this.shape=f.shape),null!=f.nodeStrokeWidth&&(this.nodeStrokeWidth=f.nodeStrokeWidth))}
function randomSIF(a,b){for(var c="",d="",e="",f=0;f<a;f++){var c=c+"node_"+f+" type_"+f+" ",d=d+"node_"+f+" type_"+f+" ",e=e+"node_"+f+" type_"+f+" ",g=Math.ceil(Math.random()*(a/100));if(0==f%10)for(var h=0;h<10*g;h++)var k="node_"+Math.ceil(Math.random()*(a-1))+" ",c=c+k,d=d+k,e=e+k;else for(h=0;h<g;h++)k="node_"+Math.ceil(Math.random()*(a-1))+" ",c+=k,d+=k,e+=k;0==f%2?(d+="class class1",e+="class class1"):(d=d+"class class"+Math.ceil(Math.random()*b),e=e+"class class"+Math.ceil(3*Math.random()));
d+="\n";e+="\n";c+="\n"}return[c,d,e]}
function GraphViewNode(a,b,c,d,e,f,g,h){this.node=b;this._graphView=a;this.cx=Math.ceil(c[0]);this.cy=Math.ceil(c[1]);this.r=d;this.color="black";null!=e&&(this.color=e);this.size=d;this.shape="ci";null!=f&&(this.shape=f);this.opacity=g;this.svgLabel=this.svgNode=null;this.noseStrokeWidth="1";null!=h&&(this.noseStrokeWidth=h);this.over=new Event(this);this.mouseout=new Event(this);this.mousedown=new Event(this);this.mouseup=new Event(this);this.click=new Event(this);this.dblclick=new Event(this);
this.moving=new Event(this);this.targetElement=this.GrabPoint=this.TrueCoords=null}
GraphViewNode.prototype={getRadio:function(){return this._graphView._controller.getNodeSize(this.node.getId())},render:function(a){this.svg=a;if("sq"==this.shape){var a=2*this.r,b=this.cx-this.r,c=this.cy-this.r,d=[["id",this.node.id],["class","NODE"],["fill",this.color],["z-index","10"],["opacity",this.opacity],["x",b],["y",c],["width",a],["height",a],["stroke","black"],["stroke-width",this.noseStrokeWidth]];this.svgNode=SVG.drawRectangle(b,c,a,a,this.getCanvas(),d)}"ci"==this.shape&&(d=[["id",this.node.id],
["class","NODE"],["fill",this.color],["z-index","10"],["opacity",this.opacity],["stroke","black"],["stroke-width",this.noseStrokeWidth]],this.svgNode=SVG.drawCircle(this.cx,this.cy,this.r,this.getCanvas(),d));this.attachEvents(document.getElementById(this.node.id))},renderLabel:function(){var a=this.cx-this.r,b=0;"ci"==this.shape&&(b=parseFloat(this.cy)+parseFloat(this.r)+10);"sq"==this.shape&&(b=parseFloat(this.cy)+parseFloat(this.r)+17);return this.svgLabel=SVG.drawText(a,b,this.node.title,this.getLabelCanvas(),
[["opacity",this.opacity],["id","label_"+this.node.id],["font-size","10"],["class","label"]])},clearLabel:function(){null!=this.svgLabel&&this._graphView.clearLabel("label_"+this.node.id)},init:function(){this.TrueCoords=this.svg.createSVGPoint();this.GrabPoint=this.svg.createSVGPoint()},getCanvas:function(){for(j=0;j<this.svg.childNodes.length;j++)if("canvas"==this.svg.childNodes[j].id)return this.svg.childNodes[j]},getLabelCanvas:function(){for(j=0;j<this.svg.childNodes.length;j++)if("labels"==
this.svg.childNodes[j].id)return this.svg.childNodes[j]},attachEvents:function(a){var b=this;a.onclick=function(a){b._graphView.selectedNodeEvent(a.target.id)};a.ondblclick=function(a){b._graphView.selectedNode=a.target.id;b._graphView._controller.nodeDblClicked(a.target.id)}}};
function GraphView(a,b,c,d){this._controller=a;this.svg=b;this.svgs=[];this.svgs.push(b);this.canvas=[];this.getCanvas();this.width=c;this.height=d;this.graphViewNodes={};var e=this;this.svgNodeLabel={};this.nodeIDMoving=null;this.nodeMoving=new Event;this.selectedEdge=this.selectedNode=null;this.canvasMoving=!1;this.canvasClicked=!0;this.translate=new Event;this.canvasMovingEvent=new Event;this.nodeClick=new Event;this.edgeClick=new Event;this.canvasClick=new Event;this.svg.addEventListener("mousemove",
function(a){e.mouseMove(a,e)},!1);this.svg.addEventListener("mousedown",function(a){e.mouseDown(a,e)},!1);this.svg.addEventListener("mouseup",function(a){e.mouseUp(a,e)},!1);this.attachEvents(document.getElementById(this.svg.id))}
GraphView.prototype={selectedNodeEvent:function(a){this.selectedNode=a;this.nodeClick.notify(a);this.canvasClicked=!1;this._controller.draw()},selectedEdgeEvent:function(a){this.selectedEdge=a;this.edgeClick.notify(a);this.canvasClicked=!1},canvasClickedEvent:function(){!0==this.canvasClicked&&(this._controller.draw(),this._controller.nodeIdClicked=null,this._controller.edgeIdClicked=null,this._controller.actionClick=0,this.canvasClick.notify())},attachEvents:function(a){var b=this;a.onclick=function(a){b.canvasClickedEvent(a.target.id)}},
getSelectedNode:function(){return this.selectedNode},getSelectedEdge:function(){return this.selectedEdge},showNodeLabels:function(a){this.renderNodeLabels(a)},clearNodeLabels:function(){this.clearLabels()},renderNodeLabels:function(){for(nodeid in this.graphViewNodes)for(var a=0;a<this.svgs.length;a++){var b=this.graphViewNodes[nodeid].renderLabel();this.svgNodeLabel[this.graphViewNodes[nodeid].node.id]=b}},mouseDown:function(a){this.canvasGrabPoint=this.svg.createSVGPoint();this.TrueCoords=this.GetTrueCoords(a,
this.svg);this.canvasGrabPoint.x=this.TrueCoords.x;this.canvasGrabPoint.y=this.TrueCoords.y;this.canvasMoving=!0;"NODE"==a.target.getAttribute("class")?(this.TrueCoords=this.GetTrueCoords(a,this.svg),this.GrabPoint=this.svg.createSVGPoint(),this.DragTarget=this.targetElement=a.target,this.DragTarget.parentNode.appendChild(this.DragTarget),a=this.DragTarget.getCTM(),this.GrabPoint.x=this.TrueCoords.x-Number(a.e),this.GrabPoint.y=this.TrueCoords.y-Number(a.f),this.canvasMoving=!1):"NODE"!=a.target.getAttribute("class")&&
"EDGE"!=a.target.getAttribute("class")&&(this.canvasClicked=!0)},mouseUp:function(){this.canvasMoving=!1;this.DragTarget&&(this.DragTarget.setAttributeNS(null,"pointer-events","all"),this.DragTarget=null)},mouseMove:function(a){this.TrueCoords=this.GetTrueCoords(a,this.svg);if(this.canvasMoving){var a=this.GetTrueCoords(a,this.svg),b=parseFloat(a.x)-parseFloat(this.canvasGrabPoint.x),c=parseFloat(a.y)-parseFloat(this.canvasGrabPoint.y);this.canvasGrabPoint.x=a.x;this.canvasGrabPoint.y=a.y;this.canvasMovingEvent.notify([b,
c])}else this.DragTarget&&(this.DragTarget.getAttribute("cx"),this.DragTarget.getAttribute("cy"),this.DragTarget.setAttribute("cx",this.TrueCoords.x),this.DragTarget.setAttribute("cy",this.TrueCoords.y),this.DragTarget.setAttribute("x",this.TrueCoords.x),this.DragTarget.setAttribute("y",this.TrueCoords.y),this.nodeIDMoving=this.DragTarget.id,this.nodeMoving.notify(this.DragTarget.id))},mouseclick:function(){},getBackground:function(){for(j=0;j<this.svg.childNodes.length;j++)if("background"==this.svg.childNodes[j].id)return this.svg.childNodes[j]},
getCanvas:function(){this.canvas=[];for(var a=0;a<this.svgs.length;a++)for(j=0;j<this.svgs[a].childNodes.length;j++)"canvas"==this.svgs[a].childNodes[j].id&&this.canvas.push(this.svgs[a].childNodes[j])},getCanvasEdge:function(){for(j=0;j<this.svg.childNodes.length;j++)if("edges"==this.svg.childNodes[j].id)return this.svg.childNodes[j]},getCanvasLabels:function(){for(j=0;j<this.svg.childNodes.length;j++)if("labels"==this.svg.childNodes[j].id)return this.svg.childNodes[j]},clearLabels:function(){for(var a=
this.getCanvasLabels();0<a.childNodes.length;)a.removeChild(a.childNodes[0])},clearEdges:function(){for(var a=this.getCanvasEdge();0<a.childNodes.length;)a.removeChild(a.childNodes[0])},drawNodes:function(a,b,c){this.graphViewNodes={};for(var d=0;d<a.length;d++){var e=a[d].id,f=c.getNodeSize(e),g=c.getNodeColor(e),h=c.getNodeShape(e),k=c.getOpacity(e),l=c.getTitle(e);a[d].title=l;l=c.getNodeStrokeWidth(e);!1==c._deletedNodes[e]&&(f=!0==c._visible[e]?new GraphViewNode(this,a[d],b[e],f,g,h,k,l):new GraphViewNode(this,
a[d],b[e],f,g,h,0,l),this.graphViewNodes[e]=f)}this.renderAllNodes()},clearAll:function(){for(var a=0;a<this.canvas.length;a++)for(;0<this.canvas[a].childNodes.length;)this.canvas[a].removeChild(this.canvas[a].childNodes[0]);this.clearEdges();this.clearLabels()},clearCanvasElement:function(a){for(var b=0;b<this.canvas.length;b++)for(j=0;j<this.canvas[b].childNodes.length;j++)this.canvas[b].childNodes[j].id==a&&this.canvas[b].removeChild(this.canvas[b].childNodes[j])},getElementByIdOnCanvas:function(a){for(j=
0;j<this.canvas[0].childNodes.length;j++)if(this.canvas[0].childNodes[j].id==a)return this.canvas[0].childNodes[j];return null},getNodeView:function(a){return this.graphViewNodes[a]},getCoordenates:function(a){var b=this.getElementByIdOnCanvas(a),a=b.getAttribute("cx"),b=b.getAttribute("cy");return[a,b]},clearEdge:function(a){for(var b=this.getCanvasEdge(),c=0;c<b.childNodes.length;c++)b.childNodes[c].id==a&&b.removeChild(b.childNodes[c])},clearLabel:function(a){for(var b=this.getCanvasLabels(),c=
0;c<b.childNodes.length;c++)b.childNodes[c].id==a&&b.removeChild(b.childNodes[c])},setSVG:function(a){this.svgs.push(a);this.getCanvas()},renderAllNodeOnNoMainCanvas:function(){for(var a=0;a<this.graphViewNodes.length;a++)for(var b=1;b<this.svgs.length;b++)this.graphViewNodes[a].render(this.svgs[b])},renderAllNodes:function(){for(id in this.graphViewNodes)this.graphViewNodes[id].render(this.svg)},renderEdge:function(a,b,c,d,e,f,g){b=new GraphViewNode(this,b,c,this.radio);d=new GraphViewNode(this,
d,e,this.radio);a=new EdgeViewNode(this,a,b,d,f);if(!1==g._deletedEdges[a.edge.id]&&!0==g._visibleEdges[a.edge.id])for(g=0;g<this.svgs.length;g++)a.render(this.svgs[g])},GetTrueCoords:function(a,b){var c=this.svg.createSVGPoint();c.x=this.getMouseCoords(a,b).x;c.y=this.getMouseCoords(a,b).y;return c},getMouseCoords:function(a,b){var c,d;muna=b;document.getBoxObjectFor?(d=document.getBoxObjectFor(b),c=a.pageX-d.x,d=a.pageY-d.y):b.getBoundingClientRect?(d=b.getBoundingClientRect(),c=a.clientX-Math.floor(d.left),
d=a.clientY-Math.floor(d.top)):(c=a.pageX-(b.offsetLeft||0),d=a.pageY-(b.offsetTop||0));return{x:c,y:d}}};function EdgeViewNode(a,b,c,d,e){this.edge=b;this.nodeViewSource=c;this.nodeViewTarget=d;this._graphView=a;this.strokeColor=e;this.click=new Event(this)}
EdgeViewNode.prototype={render:function(a){this.svg=a;var a=Math.ceil(this.nodeViewSource.cx),b=Math.ceil(this.nodeViewSource.cy),c=Math.ceil(this.nodeViewTarget.cx),d=Math.ceil(this.nodeViewTarget.cy);if(this.nodeViewSource.node.id==this.nodeViewTarget.node.id){var e=this.nodeViewSource.node.size,f=a-e/2,g=a+e/2,f="M"+f+","+(b-e/2)+" T"+((g-f)/2+f)+","+(b-2*e)+" "+g+","+(b-e/2),e=[["x1",a],["x2",c],["y1",b],["y2",d],["fill","none"],["stroke-width","2"],["id",this.edge.getId()],["stroke",this.strokeColor],
["opacity",0.5],["class","EDGE"]];SVG.drawPath(f,this.getCanvas(),e);this.attachEvents(document.getElementById(this.edge.id))}else"line"==this.edge.type&&(e=[["x1",a],["x2",c],["y1",b],["y2",d],["stroke-width","2"],["id",this.edge.getId()],["fill",this.strokeColor],["stroke",this.strokeColor],["opacity",0.5],["class","EDGE"]],drawLine(e,this.getCanvas()),this.attachEvents(document.getElementById(this.edge.id))),"bezier"==this.edge.type&&3==this.edge.classesNumber&&(e=[["id",this.edge.getId()],["stroke",
"black"],["fill","none"],["opacity",this.edge.opacity],["class","EDGE"]],f=0,Math.min(a,c),g=0,Math.min(b,d),"AreaA"==this.edge.area&&(f=Math.min(a,c),g=Math.min(b,d)),"AreaB"==this.edge.area&&(f=Math.max(a,c),g=Math.min(b,d)),"AreaC"==this.edge.area&&(f=(c-a)/2+a,g=Math.max(b,d)),SVG.drawPath("M"+a+","+b+" Q"+f+","+g+" "+c+","+d,this.getCanvas(),e),this.attachEvents(document.getElementById(this.edge.id)))},getCanvas:function(){for(j=0;j<this.svg.childNodes.length;j++)if("edges"==this.svg.childNodes[j].id)return this.svg.childNodes[j]},
attachEvents:function(a){var b=this;a.onclick=function(a){b._graphView.selectedEdgeEvent(a.target.id)}}};function ellipse(a){a.begin=0;for(var b=2*Math.PI/a.steps,c=[],d=0;d<a.steps;d++)c[d]=b*d+a.begin;b=[];for(d=0;d<a.steps;d++){var e=a.xRadius*Math.cos(c[d]),f=a.yRadius*Math.sin(c[d]),e={x:Math.round(parseInt(e)+parseInt(a.center.x)),y:Math.round(parseInt(f)+parseInt(a.center.y)),idx:d};b[d]=e}return b}
function calculateDistanceBetweenTwoPoints(a,b,c,d){a=Math.pow(c-a,2);b=Math.pow(d-b,2);return Math.sqrt(a+b)}function calculateAngleBetweenTwoPoints(a,b,c,d){return 180*Math.atan2(d-b,c-a)/Math.PI}function drawLine(a,b){var c=document.createElementNS("http://www.w3.org/2000/svg","line");setProperties(c,a);b.appendChild(c);return c}function drawRect(a,b){var c=document.createElementNS("http://www.w3.org/2000/svg","rect");setProperties(c,a);b.appendChild(c);return c}
function drawCircle(a,b){var c=document.createElementNS("http://www.w3.org/2000/svg","circle");setProperties(c,a);b.appendChild(c);return c}function setProperties(a,b){for(var c=0;c<b.length;c++)a.setAttribute(b[c][0],b[c][1])}
var DOM={createNewElement:function(a,b,c){for(var a=document.createElement(a),d=0;d<c.length;d++)a.setAttribute(c[d][0],c[d][1]);b.appendChild(a);return a},createTextNode:function(a,b){var c=document.createTextNode(a);b.appendChild(c);return c},removeChilds:function(a){for(a=document.getElementById(a);0<a.childNodes.length;)a.removeChild(a.childNodes[0])},select:function(a){return document.getElementById(a)}};
function Track(a,b,c){this.args=c;this.labelNodeGroup=this.mainNodeGroup=this.trackNodeGroup=null;this.internalId=Math.round(1E7*Math.random());null!=b&&(this.targetID=b.id);this.top=0;this.left=100;this.right=900;this.width=1100;this.height=50;this.originalTop=this.top;this.maxHeight=this.originalHeight=this.height;null!=c?(this.start=c.start,this.end=c.end):this.start=0;this.pixelRatio=5;this.backgroundColor="#FFFFFF";this.titleColor="#000000";this.overflow=!1;this.titleName=this.title=null;this.titleFontSize=
10;this.titleWidth=50;this.titleHeight=12;this.floating=!1;this.repeatLabel=null;this.isAvalaible=!0;this.isNotAvalaibleMessage="This level of zoom isn't appropiate for this track";this.labelFontSize=null;null!=c&&(null!=c.left&&(this.left=c.left),null!=c.top&&(this.originalTop=this.top=c.top),null!=c.left&&(this.left=c.left),null!=c.right&&(this.right=c.right),null!=c.width&&(this.width=c.width),null!=c.floating&&(this.floating=c.floating),null!=c.height&&(this.maxHeight=this.originalHeight=this.height=
c.height),null!=c.backgroundColor&&(this.backgroundColor=c.backgroundColor),null!=c.titleWidth&&(this.titleWidth=c.titleWidth),null!=c.titleFontSize&&(this.titleFontSize=c.titleFontSize),null!=c.titleHeight&&(this.titleHeight=c.titleHeight),null!=c.titleColor&&(this.titleColor=c.titleColor),null!=c.title&&(this.title=!0,this.titleName=c.title),null!=c.overflow&&(this.overflow=c.overflow),null!=c.pixelRatio&&(this.pixelRatio=c.pixelRatio),null!=c.labelFontSize&&(this.labelFontSize=c.labelFontSize),
null!=c.repeatLabel&&(this.repeatLabel=c.repeatLabel),null!=c.isAvalaible&&(this.isAvalaible=c.isAvalaible),null!=c.isNotAvalaibleMessage&&(this.isNotAvalaibleMessage=c.isNotAvalaibleMessage));this.id=a;this.idTrack=this.id+"_Features";this.idNames=this.id+"_Names";this.idMain=this.id+"_Main";this.idBackground=this.id+"_background";this.idTitleGroup=this.id+"_title_group";this.click=new Event(this)}Track.prototype._getViewBoxCoordenates=function(){return"0 10 "+this.width+" "+this.height};
Track.prototype.createSVGDom=function(a){null==this._svg&&(this._svg=SVG.createSVGCanvas(DOM.select(this.targetID),[["viewBox",this._getViewBoxCoordenates()],["preserveAspectRatio","none"],["id",a],["height",this.height],["width",this.width]]));this.mainNodeGroup=SVG.drawGroup(this._svg,[["id",this.idMain]]);this.backgroundNodeGroup=SVG.drawGroup(this.mainNodeGroup,[["id",this.idBackground]]);this.trackNodeGroup=SVG.drawGroup(this.mainNodeGroup,[["id",this.idTrack]]);this.labelNodeGroup=SVG.drawGroup(this.mainNodeGroup,
[["id",this.idNames]]);this.titleNodeGroup=SVG.drawGroup(this.mainNodeGroup,[["id",this.idTitleGroup]]);this.drawBackground();return this._svg};Track.prototype.drawBackground=function(){};Track.prototype.getBackgroundNode=function(){return this.backgroundNode};Track.prototype.init=function(){this._svg=this.createSVGDom(this.id,this.width,this.height,this.backgroundColor)};Track.prototype.clear=function(){if(null!=this.mainNodeGroup)for(;0<this.mainNodeGroup.childNodes.length;)this.mainNodeGroup.removeChild(this.mainNodeGroup.childNodes[0])};
Track.prototype._getSVGCoordenates=function(a){var b=this._svg.createSVGPoint();b.x=a.clientX;b.y=a.clientY;a=this._svg.getScreenCTM(document.documentElement);return b=b.matrixTransform(a.inverse())};FeatureTrack.prototype.createSVGDom=Track.prototype.createSVGDom;FeatureTrack.prototype.init=Track.prototype.init;FeatureTrack.prototype.mouseMove=Track.prototype.mouseMove;FeatureTrack.prototype.mouseUp=Track.prototype.mouseUp;FeatureTrack.prototype.mouseClick=Track.prototype.mouseClick;
FeatureTrack.prototype.mouseDown=Track.prototype.mouseDown;FeatureTrack.prototype._getViewBoxCoordenates=Track.prototype._getViewBoxCoordenates;FeatureTrack.prototype._goToCoordinate=Track.prototype._goToCoordinate;FeatureTrack.prototype._startDragging=Track.prototype._startDragging;FeatureTrack.prototype._dragging=Track.prototype._dragging;FeatureTrack.prototype._getSVGCoordenates=Track.prototype._getSVGCoordenates;FeatureTrack.prototype._stopDragging=Track.prototype._stopDragging;
FeatureTrack.prototype.clear=Track.prototype.clear;FeatureTrack.prototype.drawBackground=Track.prototype.drawBackground;
function FeatureTrack(a,b,c,d){Track.prototype.constructor.call(this,a,b,d);this.species=c;this.viewBoxModule=this.features=null;this.avoidOverlapping=!1;this.pixelSpaceBetweenBlocks=0;this.allowDuplicates=!0;this.featuresID={};this.showLabelsOnMiddleMarker=this.label=!1;this.forceColor=null;this.labelHeight=12;this.separatorBetweenQueue=4;null!=d&&(null!=d.showLabelsOnMiddleMarker&&(this.showLabelsOnMiddleMarker=d.showLabelsOnMiddleMarker),null!=d.queueHeight&&(this.queueHeight=d.queueHeight),null!=
d.labelHeight&&(this.labelHeight=d.labelHeight),null!=d.featureHeight&&(this.featureHeight=d.featureHeight),null!=d.forceColor&&(this.forceColor=d.forceColor),null!=d.avoidOverlapping&&(this.avoidOverlapping=d.avoidOverlapping),null!=d.pixelSpaceBetweenBlocks&&(this.pixelSpaceBetweenBlocks=d.pixelSpaceBetweenBlocks),null!=d.viewBoxModule&&(this.viewBoxModule=d.viewBoxModule),null!=d.allowDuplicates&&(this.allowDuplicates=d.allowDuplicates),null!=d.label&&(this.label=d.label));this.queues=[];this.queues[0]=
[];this.queueHeight=this.labelHeight+this.featureHeight;this.positions={};this.onClick=new Event(this);this.onMouseOver=new Event(this);this.onMouseOut=new Event(this);this.onMaximumHeightChanged=new Event(this)}FeatureTrack.prototype._overlapBlocks=function(a,b){var c=this.pixelSpaceBetweenBlocks/this.pixelRatio;return a.start<b.end+c&&a.end+c>b.start?!0:!1};FeatureTrack.prototype._setTextAttributes=function(a){return[["fill","black"],["id",this.id+"_"+a.id],["cursor","pointer"],["font-size",this.labelSize]]};
FeatureTrack.prototype._searchSpace=function(a){for(var b=0;b<this.queues.length;b++){for(var c=[],d=0;d<this.queues[b].length;d++){var e=this.queues[b][d];c.push(this._overlapBlocks(a,e));c.push(this._overlapBlocks(e,a))}if(-1==c.valueOf(c).indexOf(!0))return b}this.queues.push([]);return this.queues.length-1};FeatureTrack.prototype.drawLabelByPosition=function(){};FeatureTrack.prototype.appendFeatures=function(a){this.drawFeatures(a.toJSON())};
FeatureTrack.prototype.isFeatureDuplicated=function(a){return this.featuresID[a.start+"_"+a.end]};FeatureTrack.prototype.moveY=function(a){this.mainNodeGroup.setAttribute("transform","translate(0, "+a+")")};
FeatureTrack.prototype.drawFeatures=function(a){this.queues=[];this.queues.push([]);for(var b=0;b<a.length;b++){if(!this.allowDuplicates)if(this.isFeatureDuplicated(a[b]))continue;else this.featuresID[a[b].start+"_"+a[b].end]=!0;var c=0,c=this.avoidOverlapping?this._searchSpace(a[b]):0;this.queues[c].push(a[b]);this.drawFeaturesInQueue(a[b],c)}this._updateTop()};FeatureTrack.prototype.drawLabelAtPosition=function(){};
FeatureTrack.prototype.drawFeaturesInQueue=function(a,b){var c=this._setAttributes(a),d=(a.end-a.start+1)*this.pixelRatio;0>a.end-a.start&&(d=(a.start-a.end)*this.pixelRatio);var e=(a.start-1)*this.pixelRatio,f=this.top+b*this.featureHeight;this.label&&(f=this.top+b*(this.featureHeight+this.labelHeight+this.separatorBetweenQueue));this._drawFeature(e%this.viewBoxModule,f,Math.ceil(d),c,a)};
FeatureTrack.prototype._updateTop=function(){var a=this.height;this.avoidOverlapping&&(a=this.label?(this.featureHeight+this.labelHeight+this.separatorBetweenQueue)*this.queues.length:this.featureHeight*this.queues.length);this.maxHeight<a&&(this.maxHeight=a,this.onMaximumHeightChanged.notify());null!=this.backgroundNode&&this.backgroundNode.setAttribute("height",this.maxHeight);this.height=this.maxHeight};
FeatureTrack.prototype._getFeatureWidth=function(a){return 0==a.end-a.start?(a.end+1-a.start)*this.pixelRatio:(a.end-a.start)*this.pixelRatio};FeatureTrack.prototype._convertGenomePositionToPixelPosition=function(a){return(a-1)*this.pixelRatio%this.viewBoxModule};
FeatureTrack.prototype._setAttributes=function(a){var b=[["id",this.id+"_"+a.name],["style","cursor:pointer"]];b.push(["fill-opacity",a.getDefault().getOpacity()]);b.push(["stroke",a.getDefault().getStroke()]);b.push(["stroke-width",a.getDefault().getStrokeWidth()]);b.push(["stroke-opacity",a.getDefault().getStrokeOpacity()]);null==this.forceColor?b.push(["fill",a.getDefault().getFill()]):b.push(["fill",this.forceColor]);return b};
FeatureTrack.prototype._drawFeature=function(a,b,c,d,e){1>=c&&(c=2);this.positions[Math.ceil(a)]=!0;SVG.drawRectangle(Math.ceil(a),b,c,this.featureHeight,this.trackNodeGroup,d);this.label&&this._renderLabel(Math.ceil(a),Math.ceil(b)+(this.featureHeight+this.labelHeight),e.label,this._setTextAttributes(e),e)};
FeatureTrack.prototype._renderLabel=function(a,b,c,d,e){var f=this,a=SVG.drawText(a,b,c,this.labelNodeGroup,d);a.addEventListener("click",function(){f.onClick.notify(e);try{var a=[];for(key in e.feature)a.push(key);e instanceof SNPFeatureFormatter&&(new SnpInfoWidget(null,f.species)).draw(e);e instanceof VCFFeatureFormatter&&(new VCFVariantInfoWidget(null,f.species)).draw(e)}catch(b){console.log(b)}},!0);a.addEventListener("mouseover",function(a){f.tooltippanel=new TooltipPanel;f.tooltippanel.getPanel(e).showAt(a.clientX,
a.clientY)},!0);a.addEventListener("mouseout",function(){f.tooltippanel.destroy()},!0)};FeatureTrack.prototype.getIdToPrint=function(a){return a.id};FeatureTrack.prototype._render=function(){this.init();this.isAvalaible&&null!=this.features&&this.drawFeatures(this.features)};
FeatureTrack.prototype.moveTitle=function(a){if(this.title){var b=parseFloat(this.titleNodeGroup.getAttribute("moveX"));desplazamiento=b?parseFloat(parseFloat(a)+parseFloat(b)):a;this.titleNodeGroup.setAttribute("transform","translate("+-desplazamiento+", 0)");this.titleNodeGroup.setAttribute("moveX",desplazamiento)}};
FeatureTrack.prototype.drawTitle=function(a){a=this._convertGenomePositionToPixelPosition(a);null!=this.titleRectangle&&this.titleRectangle.parentNode.removeChild(this.titleRectangle);null!=this.titleText&&this.titleText.parentNode.removeChild(this.titleText);if(this.isAvalaible){var b=[["fill","#FFFFFF"],["stroke","#000000"],["opacity",0.7],["rx",4],["ry",4],["id"]];this.titleRectangle=SVG.drawRectangle(a,this.top,this.titleWidth,this.height,this.titleNodeGroup,b);this.titleText=SVG.drawText(a+2,
this.top+this.titleHeight-3,this.titleName,this.titleNodeGroup,[["font-size",this.titleFontSize]])}else b=[["fill","#FFFFCC"],["stroke","#000000"],["opacity",0.7],["rx",0],["ry",0]],SVG.drawRectangle(a,this.top,this.width,this.height,this.titleNodeGroup,b),SVG.drawText(a+2,this.top+this.height-4,this.titleName+": "+this.isNotAvalaibleMessage,this.titleNodeGroup,[["font-size",this.titleFontSize]])};FeatureTrack.prototype._addFeatures=function(a){this.features=a.toJSON();this.featuresIndex={}};
FeatureTrack.prototype.draw=function(a,b,c){this.top=c;null!=b&&(this._svg=b);null!=a.toJSON()&&this._addFeatures(a);this._render()};FeatureTrack.prototype.mouseclick=function(){};function SNPFeatureTrack(a,b,c,d){FeatureTrack.prototype.constructor.call(this,a,b,c,d);this.forceColor=this.opacity=null;null!=d&&(null!=d.opacity&&(this.opacity=d.opacity),null!=d.forceColor&&(this.forceColor=d.forceColor));this.positions={}}SNPFeatureTrack.prototype._renderLabel=FeatureTrack.prototype._renderLabel;
SNPFeatureTrack.prototype.getIdToPrint=FeatureTrack.prototype.getIdToPrint;SNPFeatureTrack.prototype.changeView=FeatureTrack.prototype.changeView;SNPFeatureTrack.prototype.render=FeatureTrack.prototype.render;SNPFeatureTrack.prototype.init=FeatureTrack.prototype.init;SNPFeatureTrack.prototype.createSVGDom=FeatureTrack.prototype.createSVGDom;SNPFeatureTrack.prototype._getTopText=FeatureTrack.prototype._getTopText;SNPFeatureTrack.prototype._getTopFeatures=FeatureTrack.prototype._getTopFeatures;
SNPFeatureTrack.prototype._searchSpace=FeatureTrack.prototype._searchSpace;SNPFeatureTrack.prototype.drawTitle=FeatureTrack.prototype.drawTitle;SNPFeatureTrack.prototype.mouseMove=FeatureTrack.prototype.mouseMove;SNPFeatureTrack.prototype.mouseclick=FeatureTrack.prototype.mouseclick;SNPFeatureTrack.prototype.getById=FeatureTrack.prototype.getById;SNPFeatureTrack.prototype.draw=FeatureTrack.prototype.draw;SNPFeatureTrack.prototype.drawFeatures=FeatureTrack.prototype.drawFeatures;
SNPFeatureTrack.prototype._overlapBlocks=FeatureTrack.prototype._overlapBlocks;SNPFeatureTrack.prototype._render=FeatureTrack.prototype._render;SNPFeatureTrack.prototype._convertGenomePositionToPixelPosition=FeatureTrack.prototype._convertGenomePositionToPixelPosition;SNPFeatureTrack.prototype._getViewBoxCoordenates=FeatureTrack.prototype._getViewBoxCoordenates;SNPFeatureTrack.prototype._getFeatureWidth=FeatureTrack.prototype._getFeatureWidth;SNPFeatureTrack.prototype._updateTop=FeatureTrack.prototype._updateTop;
SNPFeatureTrack.prototype.clear=FeatureTrack.prototype.clear;SNPFeatureTrack.prototype.drawBackground=FeatureTrack.prototype.drawBackground;SNPFeatureTrack.prototype.moveTitle=FeatureTrack.prototype.moveTitle;SNPFeatureTrack.prototype.appendFeatures=FeatureTrack.prototype.appendFeatures;SNPFeatureTrack.prototype.drawFeaturesInQueue=FeatureTrack.prototype.drawFeaturesInQueue;SNPFeatureTrack.prototype._setAttributes=FeatureTrack.prototype._setAttributes;
SNPFeatureTrack.prototype._setTextAttributes=FeatureTrack.prototype._setTextAttributes;SNPFeatureTrack.prototype.addFeatures=function(a){this.drawFeatures(a.toJSON())};SNPFeatureTrack.prototype._addFeatures=function(a){this.features=a.toJSON();this.featuresIndex={}};
SNPFeatureTrack.prototype._drawFeature=function(a,b,c,d,e){1>=c&&(c=2);this.positions[Math.ceil(a)]=!0;SVG.drawRectangle(Math.ceil(a),b,c,this.featureHeight,this.trackNodeGroup,d);if(this.label&&(this._renderLabel(Math.ceil(a),Math.ceil(b)+(this.featureHeight+this.labelHeight),e.label,this._setTextAttributes(e),e),null!=e.base))for(var d=e.base.length,c=c/d,f=0;f<d;f++)SVG.drawText(f*c+a+2,Math.ceil(b)+8,e.base[f],this.labelNodeGroup,[["font-size","8"],["fill","black"]])};
VCFFeatureTrack.prototype.getIdToPrint=FeatureTrack.prototype.getIdToPrint;VCFFeatureTrack.prototype.changeView=FeatureTrack.prototype.changeView;VCFFeatureTrack.prototype.render=FeatureTrack.prototype.render;VCFFeatureTrack.prototype.init=FeatureTrack.prototype.init;VCFFeatureTrack.prototype.createSVGDom=FeatureTrack.prototype.createSVGDom;VCFFeatureTrack.prototype._getTopText=FeatureTrack.prototype._getTopText;VCFFeatureTrack.prototype._getTopFeatures=FeatureTrack.prototype._getTopFeatures;
VCFFeatureTrack.prototype._searchSpace=FeatureTrack.prototype._searchSpace;VCFFeatureTrack.prototype.drawTitle=FeatureTrack.prototype.drawTitle;VCFFeatureTrack.prototype.mouseMove=FeatureTrack.prototype.mouseMove;VCFFeatureTrack.prototype.mouseclick=FeatureTrack.prototype.mouseclick;VCFFeatureTrack.prototype.getById=FeatureTrack.prototype.getById;VCFFeatureTrack.prototype.draw=FeatureTrack.prototype.draw;VCFFeatureTrack.prototype.getFeatureColor=FeatureTrack.prototype.getFeatureColor;
VCFFeatureTrack.prototype.drawFeatures=FeatureTrack.prototype.drawFeatures;VCFFeatureTrack.prototype._overlapBlocks=FeatureTrack.prototype._overlapBlocks;VCFFeatureTrack.prototype._render=FeatureTrack.prototype._render;VCFFeatureTrack.prototype._convertGenomePositionToPixelPosition=FeatureTrack.prototype._convertGenomePositionToPixelPosition;VCFFeatureTrack.prototype._getViewBoxCoordenates=FeatureTrack.prototype._getViewBoxCoordenates;VCFFeatureTrack.prototype._getFeatureWidth=FeatureTrack.prototype._getFeatureWidth;
VCFFeatureTrack.prototype.clear=FeatureTrack.prototype.clear;VCFFeatureTrack.prototype.drawBackground=FeatureTrack.prototype.drawBackground;VCFFeatureTrack.prototype.moveTitle=FeatureTrack.prototype.moveTitle;VCFFeatureTrack.prototype._setAttributes=FeatureTrack.prototype._setAttributes;VCFFeatureTrack.prototype._setTextAttributes=FeatureTrack.prototype._setTextAttributes;VCFFeatureTrack.prototype._updateTop=FeatureTrack.prototype._updateTop;VCFFeatureTrack.prototype.drawFeaturesInQueue=FeatureTrack.prototype.drawFeaturesInQueue;
VCFFeatureTrack.prototype._renderLabel=FeatureTrack.prototype._renderLabel;function VCFFeatureTrack(a,b,c){FeatureTrack.prototype.constructor.call(this,a,b,c);this.positions={};this.counter=0;console.log(this.featureHeight)}VCFFeatureTrack.prototype.appendFeatures=function(a){this.drawFeatures(a.toJSON())};VCFFeatureTrack.prototype._addFeatures=function(a){this.features=a.toJSON();this.featuresIndex={}};
VCFFeatureTrack.prototype._drawFeature=function(a,b,c,d,e){1>=c&&(c=2);this.positions[Math.ceil(a)]=!0;SVG.drawRectangle(Math.ceil(a),b,c,this.featureHeight,this.trackNodeGroup,d);if(null!=e.base)for(var d=e.base.length,c=c/d,f=0;f<d;f++)SVG.drawText(f*c+a+2,Math.ceil(b)+8,e.base[f],this.labelNodeGroup,[["font-size","8"],["fill","#ffffff"]]);this.label&&this._renderLabel(Math.ceil(a),Math.ceil(b)+(this.featureHeight+this.labelHeight),e.label,this._setTextAttributes(e),e)};
function GeneFeatureTrack(a,b,c){FeatureTrack.prototype.constructor.call(this,a,b,c);this.forceColor=this.opacity=null;null!=c&&(null!=c.opacity&&(this.opacity=c.opacity),null!=c.forceColor&&(this.forceColor=c.forceColor))}GeneFeatureTrack.prototype.isFeatureDuplicated=FeatureTrack.prototype.isFeatureDuplicated;GeneFeatureTrack.prototype.getIdToPrint=FeatureTrack.prototype.getIdToPrint;GeneFeatureTrack.prototype.changeView=FeatureTrack.prototype.changeView;GeneFeatureTrack.prototype.render=FeatureTrack.prototype.render;
GeneFeatureTrack.prototype.init=FeatureTrack.prototype.init;GeneFeatureTrack.prototype.createSVGDom=FeatureTrack.prototype.createSVGDom;GeneFeatureTrack.prototype._getTopText=FeatureTrack.prototype._getTopText;GeneFeatureTrack.prototype._getTopFeatures=FeatureTrack.prototype._getTopFeatures;GeneFeatureTrack.prototype._searchSpace=FeatureTrack.prototype._searchSpace;GeneFeatureTrack.prototype.drawTitle=FeatureTrack.prototype.drawTitle;GeneFeatureTrack.prototype.mouseMove=FeatureTrack.prototype.mouseMove;
GeneFeatureTrack.prototype.mouseclick=FeatureTrack.prototype.mouseclick;GeneFeatureTrack.prototype.getById=FeatureTrack.prototype.getById;GeneFeatureTrack.prototype.draw=FeatureTrack.prototype.draw;GeneFeatureTrack.prototype.getFeatureColor=FeatureTrack.prototype.getFeatureColor;GeneFeatureTrack.prototype.drawFeatures=FeatureTrack.prototype.drawFeatures;GeneFeatureTrack.prototype._overlapBlocks=FeatureTrack.prototype._overlapBlocks;GeneFeatureTrack.prototype.mouseMove=FeatureTrack.prototype.mouseMove;
GeneFeatureTrack.prototype.mouseUp=FeatureTrack.prototype.mouseUp;GeneFeatureTrack.prototype.mouseClick=FeatureTrack.prototype.mouseClick;GeneFeatureTrack.prototype.mouseDown=FeatureTrack.prototype.mouseDown;GeneFeatureTrack.prototype._render=FeatureTrack.prototype._render;GeneFeatureTrack.prototype._addFeatures=FeatureTrack.prototype._addFeatures;GeneFeatureTrack.prototype._setAttributes=FeatureTrack.prototype._setAttributes;GeneFeatureTrack.prototype._convertGenomePositionToPixelPosition=FeatureTrack.prototype._convertGenomePositionToPixelPosition;
GeneFeatureTrack.prototype._getViewBoxCoordenates=FeatureTrack.prototype._getViewBoxCoordenates;GeneFeatureTrack.prototype._getFeatureWidth=FeatureTrack.prototype._getFeatureWidth;GeneFeatureTrack.prototype._updateTop=FeatureTrack.prototype._updateTop;GeneFeatureTrack.prototype.clear=FeatureTrack.prototype.clear;GeneFeatureTrack.prototype.drawBackground=FeatureTrack.prototype.drawBackground;GeneFeatureTrack.prototype.moveTitle=FeatureTrack.prototype.moveTitle;
GeneFeatureTrack.prototype.addFeatures=function(a){this.drawFeatures(a.toJSON())};GeneFeatureTrack.prototype._addFeatures=function(a){this.features=a.toJSON();this.featuresIndex={}};
GeneFeatureTrack.prototype._setAttributes=function(a){var b=[["id",this.id],["font-size",a.getDefault().args.fontSize]];null==this.opacity?b.push(["opacity",a.getDefault().getOpacity()]):b.push(["opacity",this.opacity]);null==this.forceColor?b.push(["fill",a.getDefault().getFill()]):b.push(["fill",this.forceColor]);b.push(["stroke","black"]);b.push(["stroke-width","1"]);return b};
GeneFeatureTrack.prototype._setTextAttributes=function(a){this.getFeatureColor(a);return[["fill","black"],["id",this.id+"_"+a.start],["font-size",a.getDefault().args.fontSize]]};GeneFeatureTrack.prototype._drawFeature=function(a,b,c,d){SVG.drawRectangle(Math.ceil(a),Math.ceil(b),c,this.featureHeight,this.trackNodeGroup,d).addEventListener("mouseover",function(){},!0)};
function TrackCanvas(a,b,c){this.tracksGroup=null;this.targetID=b.id;this.args=c;this.top=0;this.left=100;this.right=900;this.width=1100;this.height=50;this.startViewBox=c.start;this.endViewBox=c.end;this.trackList=[];this.trackRendered=[];this.trackRenderedName=[];this.regionAdapterList=[];this.pixelRatio=5;this.zoom=1;this.viewBoxModule=700;this.isDragging=this.allowDragging=!1;this.dragPoint=null;this.backgroundColor="#FFFFFF";this.titleColor="#000000";this.title=this.overflow=!1;this.titleName=
null;this.titleFontSize=10;this.enableMovingY=!1;this.isBeenRenderized=this.allowLabelMoving=!0;null!=c&&(null!=c.top&&(this.top=c.top),null!=c.left&&(this.left=c.left),null!=c.right&&(this.right=c.right),null!=c.width&&(this.width=c.width),null!=c.height&&(this.height=c.height),null!=c.backgroundColor&&(this.backgroundColor=c.backgroundColor),null!=c.titleFontSize&&(this.titleFontSize=c.titleFontSize),null!=c.allowDragging&&(this.allowDragging=c.allowDragging),null!=c.titleColor&&(this.titleColor=
c.titleColor),null!=c.title&&(this.title=!0,this.titleName=c.title),null!=c.overflow&&(this.overflow=c.overflow),null!=c.pixelRatio&&(this.pixelRatio=c.pixelRatio),null!=c.viewBoxModule&&(this.viewBoxModule=c.viewBoxModule),null!=c.zoom&&(this.zoom=c.zoom));this.textLines=[];this.id=a;this.idMain=this.id+"_Main";this.moveY=0;this.onMove=new Event(this);this.afterDrag=new Event(this);this.onRender=new Event(this)}
TrackCanvas.prototype.createSVGDom=function(a,b){var c=DOM.select(a);this._svg=SVG.createSVGCanvas(c,[["viewBox","0 10 "+this.width+" "+this.height],["preserveAspectRatio","none"],["id",b],["height",this.height],["width",this.width],["background-color","green"]]);this.tracksGroup=SVG.drawGroup(this._svg,[["id",this.idMain],["transform","scale("+this.zoom+")"]]);SVG.drawRectangle(0,0,this.viewBoxModule,this.height,this.tracksGroup,[["fill","white"]]);return this._svg};
TrackCanvas.prototype.mouseClick=function(){alert("click")};TrackCanvas.prototype.mouseMove=function(a){this.allowDragging&&(this._dragging(a),this.moveLabelsFeatureSelected())};TrackCanvas.prototype.moveLabelsFeatureSelected=function(){if(this.allowLabelMoving)for(var a=0;a<this.trackList.length;a++)this.trackList[a].showLabelsOnMiddleMarker&&this.trackList[a].drawLabelAtPosition(this.getMiddlePoint(),this.regionAdapterList[a].getFeaturesByPosition(this.getMiddlePoint()))};
TrackCanvas.prototype.mouseDown=function(a){this.allowDragging&&this._startDragging(a)};TrackCanvas.prototype.mouseUp=function(a){this.allowDragging&&this._afterDrag(a)};
TrackCanvas.prototype.init=function(){this._svg=this.createSVGDom(this.targetID,this.id,this.width,this.height,this.backgroundColor);var a=this;this._svg.addEventListener("mousemove",function(b){a.mouseMove(b,a)},!1);this._svg.addEventListener("mousedown",function(b){a.mouseDown(b,a)},!1);this._svg.addEventListener("mouseup",function(b){a.mouseUp(b,a)},!1)};
TrackCanvas.prototype._getTrackFromInternalRegionId=function(a){for(var b=0;b<this.regionAdapterList.length;b++)if(null!=this.regionAdapterList[b]&&this.regionAdapterList[b].internalId==a)return this.trackList[b];return null};
TrackCanvas.prototype._formatData=function(a){a instanceof DasRegionDataAdapter&&console.log("regionAdapter instanceof DasRegionDataAdapter");if(a instanceof GeneRegionCellBaseDataAdapter){var b=new GeneBlockManager;a.dataset.json=b.toDatasetFormatter(a.dataset.json)}if(a instanceof VCFLocalRegionDataAdapter){for(var b=[],c=0;c<a.dataset.json[0].length;c++)b.push(new VCFFeatureFormatter(a.dataset.json[0][c]));a.dataset.json=b}if(a instanceof GFFLocalRegionDataAdapter){b=[];for(c=0;c<a.dataset.json[0].length;c++)b.push(new GFFFeatureFormatter(a.dataset.json[0][c]));
a.dataset.json=b}if(a instanceof BEDLocalRegionDataAdapter){b=[];for(c=0;c<a.dataset.json[0].length;c++)b.push(new BEDFeatureFormatter(a.dataset.json[0][c]));a.dataset.json=b}if(a instanceof RuleRegionDataAdapter){b=[];for(c=0;c<a.dataset.json[0].length;c++)b.push(new MarkerRuleFeatureFormatter(a.dataset.json[0][c]));a.dataset.json=b}if(a instanceof RegionCellBaseDataAdapter){b=[];if(-1!=a.resource.toLowerCase().indexOf("histogram=true"))return a;if("gene"==a.resource){b=[];for(c=0;c<a.dataset.json[0].length;c++)b.push(new GeneFeatureFormatter(a.dataset.json[0][c]))}if("tfbs"==
a.resource){b=[];for(c=0;c<a.dataset.json[0].length;c++)b.push(new TfbsFeatureFormatter(a.dataset.json[0][c]))}if("mirnatarget"==a.resource){b=[];for(c=0;c<a.dataset.json[0].length;c++)b.push(new MiRNAFeatureFormatter(a.dataset.json[0][c]))}if("regulatory?type=open chromatin"==a.resource){b=[];for(c=0;c<a.dataset.json[0].length;c++)b.push(new GenericFeatureFormatter(a.dataset.json[0][c]))}if("regulatory?type=HISTONE"==a.resource){b=[];for(c=0;c<a.dataset.json[0].length;c++)b.push(new GenericFeatureFormatter(a.dataset.json[0][c]))}if("regulatory?type=Polymerase"==
a.resource){b=[];for(c=0;c<a.dataset.json[0].length;c++)b.push(new GenericFeatureFormatter(a.dataset.json[0][c]))}if("snp"==a.resource){b=[];for(c=0;c<a.dataset.json[0].length;c++)b.push(new SNPFeatureFormatter(a.dataset.json[0][c]))}if("cytoband"==a.resource){b=[];for(c=0;c<a.dataset.json[0].length;c++)b.push(new CytobandFeatureFormatter(a.dataset.json[0][c]))}if("transcript"==a.resource){b=[];for(c=0;c<a.dataset.json[0].length;c++)b.push(new TranscriptFeatureFormatter(a.dataset.json[0][c]))}if("exon"==
a.resource){b=[];for(c=0;c<a.dataset.json[0].length;c++)b.push(new ExonFeatureFormatter(a.dataset.json[0][c]))}if("conservedregion"==a.resource){b=[];for(c=0;c<a.dataset.json[0].length;c++)b.push(new GenericFeatureFormatter(a.dataset.json[0][c]))}if("sequence"==a.resource){b=[];for(c=0;c<a.dataset.json[0].sequence.length;c++){var d=a.dataset.json[0].start+c+1;b.push(new SequenceFormatter({start:d,end:d,base:a.dataset.json[0].sequence[c]}))}}a.dataset.json=b}return a};
TrackCanvas.prototype._trackRendered=function(){for(var a=0;a<this.trackRendered.length;a++)if(!1==this.trackRendered[a]){this.trackRendered[a]=!0;break}};TrackCanvas.prototype._areAllTracksRendered=function(){for(var a=0;a<this.trackRendered.length;a++)if(!1==this.trackRendered[a])return!1;return!0};
TrackCanvas.prototype._drawTrack=function(a,b,c,d,e){var f=this;d.viewBoxModule=this.viewBoxModule;d.isAvalaible?(e.successed.addEventListener(function(){f._formatData(e);f.trackRenderedName.push(e);f._trackRendered();f._areAllTracksRendered()&&f.drawRules(a,b,c)}),e.preloadSuccess.addEventListener(function(a){a=f._getTrackFromInternalRegionId(a.internalId);e=f._formatData(e);a.appendFeatures(e.dataset)}),this.onMove.addEventListener(function(b,c){c.middle=Math.ceil(c.middle)+1;e.setIntervalView(a,
Math.ceil(c.middle));e instanceof RuleRegionDataAdapter&&f.selectPaintOnRules(c.middle)}),e.fill(a,b,c,e.resource)):(f.trackRenderedName.push(e),f._trackRendered(),f._areAllTracksRendered()&&f.drawRules(a,b,c))};TrackCanvas.prototype.selectPaintOnRules=function(a){for(var b=0;b<this.getRulerTrack().length;b++)1>this.pixelRatio?this.getRulerTrack()[b].select(a):this.getRulerTrack()[b].select(a,{width:this.pixelRatio})};
TrackCanvas.prototype.getRulerTrack=function(){for(var a=[],b=0;b<this.trackList.length;b++)this.trackList[b]instanceof RuleFeatureTrack&&a.push(this.trackList[b]);return a};TrackCanvas.prototype.getMiddlePoint=function(){return Math.ceil(this.middle)+1};
TrackCanvas.prototype.drawRules=function(){for(var a=0;a<this.trackList.length;a++){var b=this._getTopTrack(this.trackList[a]);this.trackList[a].draw(this.regionAdapterList[a].dataset,this.tracksGroup,b);this._drawTitle(a)}this._goToCoordinateX(this.start);this.onRender.notify()};
TrackCanvas.prototype._drawTitle=function(a){if(null!=this.trackList[a].title){var b=this.start+this.width/this.pixelRatio/2;null==b?this.trackList[a].drawTitle(10):this.trackList[a].drawTitle(b-this.width/2/this.pixelRatio+1)}};
TrackCanvas.prototype.draw=function(a,b,c){this.start=b;this.end=c;this.chromosome=a;this.startViewBox=b*this.pixelRatio%this.viewBoxModule;this.endViewBox=c*this.pixelRatio%this.viewBoxModule;for(var d=0;d<this.regionAdapterList.length;d++){var e=this.trackList[d],f=this.regionAdapterList[d];f.successed=new Event(f);f.preloadSuccess=new Event(f);this._drawTrack(a,b,c,e,f)}};TrackCanvas.prototype.clear=function(){DOM.removeChilds(this.targetID)};
TrackCanvas.prototype.addTrack=function(a,b){this.trackList.push(a);this.trackRendered.push(!1);this.regionAdapterList.push(b)};TrackCanvas.prototype._getTopTrack=function(a){for(var b=this.top,c=0;c<this.trackList.length;c++){if(this.trackList[c].internalId==a.internalId)return b+this.trackList[c].top;b=b+this.trackList[c].height+this.trackList[c].originalTop}return b};
TrackCanvas.prototype._goToCoordinateX=function(a){this.start=a;this._svg.setAttribute("viewBox",this.start*this.pixelRatio%this.viewBoxModule+" 10 "+this.width+" "+this.height);this.isBeenRenderized?(this.middle=this.start+(this.end-this.start)/2,this.isBeenRenderized=!1):this.middle=this.start+this.width/this.pixelRatio/2;this.onMove.notify({chromosome:this.chromosome,start:this.start,end:this.end,middle:this.middle})};
TrackCanvas.prototype._moveCoordinateX=function(a){for(var b=0;b<this.trackList.length;b++)null!=this.trackList[b].title&&this.trackList[b].moveTitle(-a);this._goToCoordinateX(Math.ceil(this.start+a/this.pixelRatio))};TrackCanvas.prototype._moveCoordinateY=function(a){a=-1*a+this.moveY;if(a<this.top){this.tracksGroup.setAttribute("transform","translate(0, "+a+")");this.realMove=a;for(var b=0;b<this.trackList.length;b++)this.trackList[b].floating&&this.trackList[b].moveY(-a)}else this.realMove=0};
TrackCanvas.prototype._startDragging=function(a){this.isDragging=!0;a=this._getSVGCoordenates(a);this.dragPoint={x:a.x,y:a.y}};TrackCanvas.prototype._afterDrag=function(){this.isDragging=!1;this.dragPoint=null;this.moveY=this.realMove;this.afterDrag.notify(this.middle)};TrackCanvas.prototype.setZoom=function(a){this.zoom=a;this.tracksGroup.setAttribute("transform","scale("+a+")");this._goToCoordinateX(this.startViewBox)};
TrackCanvas.prototype._dragging=function(a){if(this.isDragging){var a=this._getSVGCoordenates(a),b=this.dragPoint.y-a.y;this._moveCoordinateX(this.dragPoint.x-a.x);this.enableMovingY&&this._moveCoordinateY(Math.ceil(b))}};TrackCanvas.prototype._getSVGCoordenates=function(a){var b=this._svg.createSVGPoint();b.x=a.clientX;b.y=a.clientY;a=this._svg.getScreenCTM(document.documentElement);return b=b.matrixTransform(a.inverse())};
function SequenceFeatureTrack(a,b,c,d){FeatureTrack.prototype.constructor.call(this,a,b,c,d);this.avoidOverlapping=!1}SequenceFeatureTrack.prototype.getIdToPrint=FeatureTrack.prototype.getIdToPrint;SequenceFeatureTrack.prototype.changeView=FeatureTrack.prototype.changeView;SequenceFeatureTrack.prototype.render=FeatureTrack.prototype.render;SequenceFeatureTrack.prototype.init=FeatureTrack.prototype.init;SequenceFeatureTrack.prototype.createSVGDom=FeatureTrack.prototype.createSVGDom;
SequenceFeatureTrack.prototype._getTopText=FeatureTrack.prototype._getTopText;SequenceFeatureTrack.prototype._getTopFeatures=FeatureTrack.prototype._getTopFeatures;SequenceFeatureTrack.prototype._searchSpace=FeatureTrack.prototype._searchSpace;SequenceFeatureTrack.prototype.drawTitle=FeatureTrack.prototype.drawTitle;SequenceFeatureTrack.prototype.mouseMove=FeatureTrack.prototype.mouseMove;SequenceFeatureTrack.prototype.mouseclick=FeatureTrack.prototype.mouseclick;
SequenceFeatureTrack.prototype.getById=FeatureTrack.prototype.getById;SequenceFeatureTrack.prototype.draw=FeatureTrack.prototype.draw;SequenceFeatureTrack.prototype.drawFeatures=FeatureTrack.prototype.drawFeatures;SequenceFeatureTrack.prototype._overlapBlocks=FeatureTrack.prototype._overlapBlocks;SequenceFeatureTrack.prototype.mouseMove=FeatureTrack.prototype.mouseMove;SequenceFeatureTrack.prototype.mouseUp=FeatureTrack.prototype.mouseUp;SequenceFeatureTrack.prototype.mouseClick=FeatureTrack.prototype.mouseClick;
SequenceFeatureTrack.prototype.mouseDown=FeatureTrack.prototype.mouseDown;SequenceFeatureTrack.prototype._render=FeatureTrack.prototype._render;SequenceFeatureTrack.prototype._convertGenomePositionToPixelPosition=FeatureTrack.prototype._convertGenomePositionToPixelPosition;SequenceFeatureTrack.prototype._getFeatureWidth=FeatureTrack.prototype._getFeatureWidth;SequenceFeatureTrack.prototype._updateTop=FeatureTrack.prototype._updateTop;SequenceFeatureTrack.prototype.clear=FeatureTrack.prototype.clear;
SequenceFeatureTrack.prototype.drawBackground=FeatureTrack.prototype.drawBackground;SequenceFeatureTrack.prototype.moveTitle=FeatureTrack.prototype.moveTitle;SequenceFeatureTrack.prototype.drawFeaturesInQueue=FeatureTrack.prototype.drawFeaturesInQueue;SequenceFeatureTrack.prototype.appendFeatures=function(a){this.features=a.toJSON();this.drawFeatures(this.features)};SequenceFeatureTrack.prototype._addFeatures=function(a){this.features=a.toJSON();this.featuresIndex={}};
SequenceFeatureTrack.prototype._setAttributes=function(a){a=[["fill",a.getDefault().getFill()],["id",this.id+"_"+a.start],["font-size","10"]];a.push(["opacity","1"]);return a};SequenceFeatureTrack.prototype._drawFeature=function(a,b,c,d,e){d.push(["opacity",0.8]);d.push(["stroke","black"]);SVG.drawRectangle(a,Math.ceil(b),this.pixelRatio,this.featureHeight,this.trackNodeGroup,d);SVG.drawText(a+2,Math.ceil(b)+8,e.label,this.labelNodeGroup,[["font-size","8"]])};
SequenceFeatureTrack.prototype.getTextId=function(a){return"id_seq_"+a};SequenceFeatureTrack.prototype._textId=function(a,b,c,d,e){SVG.drawText(Math.ceil(a)+2,Math.ceil(b)+8,e.base,this.trackNodeGroup,[["font-size","8"],["id",this.getTextId(a)]])};SequenceFeatureTrack.prototype._removeTextBase=function(a){this.trackNodeGroup.removeChild(DOM.select(this.getTextId(a)))};
SequenceFeatureTrack.prototype._drawTextBase=function(a,b,c,d,e){SVG.drawText(Math.ceil(a)+2,Math.ceil(b)+8,e.base,this.trackNodeGroup,[["font-size","8"],["id","id_seq_"+a]])};
function RuleFeatureTrack(a,b,c,d){FeatureTrack.prototype.constructor.call(this,a,b,c,d);this.horizontalRuleDrawn=!1;this.expandRuleHeight=this.ruleHeight=this.height;this.horizontalRuleTop=this.height-2;null!=d&&(null!=d.expandRuleHeight&&(this.ruleHeight=d.expandRuleHeight),null!=d.space&&(this.space=d.space));this.allowDuplicates=!0;this.quarter=(this.end-this.start)/4;this.selectedMiddleLine=null}RuleFeatureTrack.prototype.getIdToPrint=FeatureTrack.prototype.getIdToPrint;
RuleFeatureTrack.prototype.render=FeatureTrack.prototype.render;RuleFeatureTrack.prototype._getTopText=FeatureTrack.prototype._getTopText;RuleFeatureTrack.prototype._getTopFeatures=FeatureTrack.prototype._getTopFeatures;RuleFeatureTrack.prototype._searchSpace=FeatureTrack.prototype._searchSpace;RuleFeatureTrack.prototype.drawTitle=FeatureTrack.prototype.drawTitle;RuleFeatureTrack.prototype.mouseMove=FeatureTrack.prototype.mouseMove;RuleFeatureTrack.prototype.mouseclick=FeatureTrack.prototype.mouseclick;
RuleFeatureTrack.prototype.getById=FeatureTrack.prototype.getById;RuleFeatureTrack.prototype.draw=FeatureTrack.prototype.draw;RuleFeatureTrack.prototype.drawFeatures=FeatureTrack.prototype.drawFeatures;RuleFeatureTrack.prototype._overlapBlocks=FeatureTrack.prototype._overlapBlocks;RuleFeatureTrack.prototype.mouseMove=FeatureTrack.prototype.mouseMove;RuleFeatureTrack.prototype.mouseUp=FeatureTrack.prototype.mouseUp;RuleFeatureTrack.prototype.mouseClick=FeatureTrack.prototype.mouseClick;
RuleFeatureTrack.prototype.mouseDown=FeatureTrack.prototype.mouseDown;RuleFeatureTrack.prototype._convertGenomePositionToPixelPosition=FeatureTrack.prototype._convertGenomePositionToPixelPosition;RuleFeatureTrack.prototype._render=FeatureTrack.prototype._render;RuleFeatureTrack.prototype._getFeatureWidth=FeatureTrack.prototype._getFeatureWidth;RuleFeatureTrack.prototype._updateTop=FeatureTrack.prototype._updateTop;RuleFeatureTrack.prototype.drawBackground=FeatureTrack.prototype.drawBackground;
RuleFeatureTrack.prototype.isFeatureDuplicated=FeatureTrack.prototype.isFeatureDuplicated;RuleFeatureTrack.prototype.clear=FeatureTrack.prototype.clear;RuleFeatureTrack.prototype.init=FeatureTrack.prototype.init;RuleFeatureTrack.prototype.createSVGDom=FeatureTrack.prototype.createSVGDom;RuleFeatureTrack.prototype.moveY=FeatureTrack.prototype.moveY;RuleFeatureTrack.prototype._setAttributes=FeatureTrack.prototype._setAttributes;RuleFeatureTrack.prototype.moveTitle=FeatureTrack.prototype.moveTitle;
RuleFeatureTrack.prototype.drawFeaturesInQueue=FeatureTrack.prototype.drawFeaturesInQueue;RuleFeatureTrack.prototype.appendFeatures=function(a){this.drawFeatures(a.toJSON())};RuleFeatureTrack.prototype._addFeatures=function(a){this.features=a.toJSON();this.horizontalRuleDrawn=!1};RuleFeatureTrack.prototype.getFeatureColor=function(){return"#000000"};
RuleFeatureTrack.prototype.select=function(a,b){var c=1;null!=b&&null!=b.width&&(c=b.width);null!=this.selectedMiddleLine&&this.selectedMiddleLine.parentNode.removeChild(this.selectedMiddleLine);null!=this.textMiddleLine&&this.textMiddleLine.parentNode.removeChild(this.textMiddleLine);if(null!=this.trackNodeGroup){var d=this._convertGenomePositionToPixelPosition(a);this.selectedMiddleLine=SVG.drawRectangle(d,this.top+this.horizontalRuleTop,c,this.ruleHeight+1E4,this.trackNodeGroup,[["fill","green"],
["stroke-width","1"],["opacity",0.5]]);this.textMiddleLine=SVG.drawText(Math.ceil(d)-15,this.top+this.horizontalRuleTop,this._prettyNumber(a),this.trackNodeGroup,[["font-size","9"],["fill","green"]])}};
RuleFeatureTrack.prototype._drawFeature=function(a,b,c,d,e){null!=this.trackNodeGroup&&(e.isLabeled?(SVG.drawText(Math.ceil(a)+2,b+10,this._prettyNumber(e.start),this.labelNodeGroup,[["font-size","10"]]),SVG.drawLine(Math.ceil(a),b,Math.ceil(a),this.ruleHeight+1E4,this.trackNodeGroup,[["stroke","#000000"],["opacity",e.getDefault().getOpacity()]])):SVG.drawLine(Math.ceil(a),b+this.horizontalRuleTop,Math.ceil(a),this.ruleHeight+1E4,this.trackNodeGroup,[["stroke","#000000"],["opacity",e.getDefault().getOpacity()]]),
this.horizontalRuleDrawn||(a=this.viewBoxModule,26E7*this.pixelRatio<this.viewBoxModule&&(a=26E7*this.pixelRatio),SVG.drawRectangle(0,b,a,this.height,this.trackNodeGroup,[["fill","gray"],["stroke","#000000"],["opacity",0.5]]),this.horizontalRuleDrawn=!0))};RuleFeatureTrack.prototype._prettyNumber=function(a){a=Math.ceil(a)+"";x=a.split(".");x1=x[0];x2=1<x.length?"."+x[1]:"";for(a=/(\d+)(\d{3})/;a.test(x1);)x1=x1.replace(a,"$1,$2");return x1+x2};
function MultiFeatureTrack(a,b,c,d){FeatureTrack.prototype.constructor.call(this,a,b,c,d);this.queueHeight=14;this.pixelSpaceBetweenBlocks=80;this.avoidOverlapping=this.showTranscripts=!0;this.onMouseOverShitExonTranscriptLabel=this.showExonLabel=this.showDetailGeneLabel=!1;this.extraSpaceProducedByLabelAbove=6;this.geneBlockManager=null;this.labelHeight=12;this.separatorBetweenQueue=4;this.labelSize=18;null!=d&&(null!=d.showExonLabel&&(this.showExonLabel=d.showExonLabel),null!=d.onMouseOverShitExonTranscriptLabel&&
(this.onMouseOverShitExonTranscriptLabel=d.onMouseOverShitExonTranscriptLabel),null!=d.queueHeight&&(this.queueHeight=d.queueHeight),null!=d.labelSize&&(this.labelSize=d.labelSize),null!=d.labelHeight&&(this.labelHeight=d.labelHeight),null!=d.pixelSpaceBetweenBlocks&&(this.pixelSpaceBetweenBlocks=d.pixelSpaceBetweenBlocks),null!=d.showTranscripts&&(this.showTranscripts=d.showTranscripts),null!=d.labelsNearEye&&(this.labelsNearEye=d.labelsNearEye),null!=d.showDetailGeneLabel&&(this.showDetailGeneLabel=
d.showDetailGeneLabel));this.queues=[];this.queues.push([])}MultiFeatureTrack.prototype.getIdToPrint=FeatureTrack.prototype.getIdToPrint;MultiFeatureTrack.prototype.changeView=FeatureTrack.prototype.changeView;MultiFeatureTrack.prototype.init=FeatureTrack.prototype.init;MultiFeatureTrack.prototype.createSVGDom=FeatureTrack.prototype.createSVGDom;MultiFeatureTrack.prototype._getTopText=FeatureTrack.prototype._getTopText;MultiFeatureTrack.prototype._getTopFeatures=FeatureTrack.prototype._getTopFeatures;
MultiFeatureTrack.prototype.select=FeatureTrack.prototype.select;MultiFeatureTrack.prototype.drawTitle=FeatureTrack.prototype.drawTitle;MultiFeatureTrack.prototype.mouseMove=FeatureTrack.prototype.mouseMove;MultiFeatureTrack.prototype.mouseclick=FeatureTrack.prototype.mouseclick;MultiFeatureTrack.prototype.getById=FeatureTrack.prototype.getById;MultiFeatureTrack.prototype.draw=FeatureTrack.prototype.draw;MultiFeatureTrack.prototype.getFeatureColor=FeatureTrack.prototype.getFeatureColor;
MultiFeatureTrack.prototype._overlapBlocks=FeatureTrack.prototype._overlapBlocks;MultiFeatureTrack.prototype.mouseMove=FeatureTrack.prototype.mouseMove;MultiFeatureTrack.prototype.mouseUp=FeatureTrack.prototype.mouseUp;MultiFeatureTrack.prototype.mouseClick=FeatureTrack.prototype.mouseClick;MultiFeatureTrack.prototype.mouseDown=FeatureTrack.prototype.mouseDown;MultiFeatureTrack.prototype._addFeatures=FeatureTrack.prototype._addFeatures;
MultiFeatureTrack.prototype._convertGenomePositionToPixelPosition=FeatureTrack.prototype._convertGenomePositionToPixelPosition;MultiFeatureTrack.prototype._getViewBoxCoordenates=FeatureTrack.prototype._getViewBoxCoordenates;MultiFeatureTrack.prototype._getFeatureWidth=FeatureTrack.prototype._getFeatureWidth;MultiFeatureTrack.prototype.drawBackground=FeatureTrack.prototype.drawBackground;MultiFeatureTrack.prototype.moveTitle=FeatureTrack.prototype.moveTitle;
MultiFeatureTrack.prototype._renderLabel=function(a,b,c,d){return SVG.drawText(a,b,c,this.labelNodeGroup,d)};
MultiFeatureTrack.prototype._setTextAttributes=function(a){var b=[["fill","black"],["id",this.id+"_"+a.id],["cursor","pointer"],["font-size",this.labelSize]];a instanceof TranscriptFeatureFormatter&&this.showExonLabel&&b.push(["opacity",0]);a instanceof ExonFeatureFormatter&&this.onMouseOverShitExonTranscriptLabel&&b.push(["opacity",0]);a instanceof ExonFeatureFormatter&&!this.showExonLabell&&b.push(["opacity",0]);return b};
MultiFeatureTrack.prototype.drawLabelAtPosition=function(a,b){for(var c=[],d=[],e=0;e<b.length;e++)null!=b[e+1]&&b[e+1]instanceof ExonFeatureFormatter?d.push(b[e].getId()):c.push(b[e].getId());for(e=0;e<this.labelNodeGroup.childElementCount;e++){this.labelNodeGroup.childNodes[e].setAttribute("opacity",0);for(var f=0;f<c.length;f++)-1!=c[f].indexOf(this.labelNodeGroup.childNodes[e].getAttribute("id").replace(this.id+"_",""))&&(this.labelNodeGroup.childNodes[e].setAttribute("x",this._convertGenomePositionToPixelPosition(a)),
this.labelNodeGroup.childNodes[e].setAttribute("opacity",1));for(f=0;f<d.length;f++)-1!=d[f].indexOf(this.labelNodeGroup.childNodes[e].getAttribute("id").replace(this.id+"_",""))&&this.labelNodeGroup.childNodes[e].setAttribute("opacity",0)}};
MultiFeatureTrack.prototype._updateTop=function(){var a=this.height;this.avoidOverlapping&&(a=this.label?(this.featureHeight+this.labelHeight+this.separatorBetweenQueue)*this.queues.length:this.featureHeight*this.queues.length);this.maxHeight<a&&(this.maxHeight=a,this.onMaximumHeightChanged.notify());null!=this.backgroundNode&&this.backgroundNode.setAttribute("height",this.maxHeight);this.height=this.maxHeight};MultiFeatureTrack.prototype.appendFeatures=function(a){this.drawFeatures(a.toJSON())};
MultiFeatureTrack.prototype.clear=function(){if(null!=this.mainNodeGroup)for(;0<this.mainNodeGroup.childNodes.length;)this.mainNodeGroup.removeChild(this.mainNodeGroup.childNodes[0]);this.featuresID={};this.maxHeight=this.originalHeight};
MultiFeatureTrack.prototype._addFeatures=function(a){null==this.geneBlockManager&&(this.geneBlockManager=new GeneBlockManager);this.features=0!=a.toJSON().lenth&&!a.toJSON()[0]instanceof GeneFeatureFormatter?this.geneBlockManager.toDatasetFormatter(a.toJSON()):a.toJSON();this.featuresIndex={}};
MultiFeatureTrack.prototype._setAttributes=function(a,b){var c=[["id",this.id+"_"+a.name],["style","cursor:pointer"]];c.push(["fill-opacity",a.getDefault().getOpacity()]);c.push(["stroke",a.getDefault().getStroke()]);c.push(["stroke-width",a.getDefault().getStrokeWidth()]);c.push(["stroke-opacity",a.getDefault().getStrokeOpacity()]);null!=b?b||c.push(["fill","white"]):null==this.forceColor?c.push(["fill",a.getDefault().getFill()]):c.push(["fill",this.forceColor]);return c};
MultiFeatureTrack.prototype._searchSpace=function(a,b){for(var c=b;c<this.queues.length;c++){for(var d=[],e=0;e<this.queues[c].length;e++){var f=this.queues[c][e];d.push(this._overlapBlocks(a,f));d.push(this._overlapBlocks(f,a))}if(-1==d.valueOf(d).indexOf(!0))return c}this.queues.push([]);return this.queues.length-1};MultiFeatureTrack.prototype.isFeatureDuplicated=function(a){return null!=this.featuresID[a.id]};
MultiFeatureTrack.prototype._render=function(){this.init();this.isAvalaible&&null!=this.features&&this.drawFeatures(this.features);this.queues=[];this.queues.push([])};
MultiFeatureTrack.prototype.drawFeatures=function(a){0<a.length&&!1==a[0]instanceof GeneFeatureFormatter&&(a=(new GeneBlockManager).toDatasetFormatter(a));for(var b=0;b<a.length;b++){var c=a[b];if(!this.allowDuplicates)if(this.isFeatureDuplicated(a[b]))continue;else this.featuresID[a[b].id]=!0;if(c instanceof GeneFeatureFormatter){var d=this._searchSpace(c,0);this.queues[d].push(c);this.drawFeaturesInQueue(c,d);if(null!=c.transcript&&this.showTranscripts)for(var e=0;e<c.transcript.length;e++){var f=
c.transcript[e],g=this._searchSpace(f,Math.ceil(d)+1);this.queues[g].push(f);this.drawFeaturesInQueue(f,g);for(var h=0;h<f.exon.length;h++)this.drawFeaturesInQueue(f.exon[h],g,f)}}}this._updateTop()};
MultiFeatureTrack.prototype.drawFeaturesInQueue=function(a,b,c){var d=(a.end-a.start+1)*this.pixelRatio,e=(a.start-1)*this.pixelRatio,f=this.top+b*this.featureHeight;this.label&&(f=this.top+b*(this.featureHeight+this.labelHeight+this.separatorBetweenQueue));if(null==c)this._drawFeature(e%this.viewBoxModule,f,Math.ceil(d),this._setAttributes(a),a);else{var b=e%this.viewBoxModule,e=this._setAttributes(a),g=this._setAttributes(a,!1);if(c.feature.codingRegionStart<=a.start&&c.feature.codingRegionEnd>=
a.end)this._drawFeature(b,f,Math.ceil(d),e,a);else if(a.start>=c.feature.codingRegionEnd||a.end<=c.feature.codingRegionStart)this._drawFeature(b,f,Math.ceil(d),g,a);else{var d=this._convertGenomePositionToPixelPosition(c.feature.codingRegionStart),h=this._convertGenomePositionToPixelPosition(c.feature.codingRegionEnd),k=this._convertGenomePositionToPixelPosition(a.start),l=this._convertGenomePositionToPixelPosition(a.end+1);a.start<=c.feature.codingRegionStart&&a.end<=c.feature.codingRegionEnd?(this._drawFeature(k,
f,d-b,g,a),this._drawFeature(d,f,l-d,e,a)):a.start>=c.feature.codingRegionStart&&a.end>=c.feature.codingRegionEnd?(this._drawFeature(h,f,l-h,g,a),this._drawFeature(k,f,h-k,e,a)):a.start<=c.feature.codingRegionStart&&a.end>=c.feature.codingRegionEnd&&(this._drawFeature(k,f,d-k,g,a),this._drawFeature(h,f,l-h,g,a),this._drawFeature(d,f,h-d,e,a))}}};
MultiFeatureTrack.prototype._drawFeature=function(a,b,c,d,e){var f=this;e instanceof TranscriptFeatureFormatter?SVG.drawLine(a,b+this.featureHeight/2,a+Math.ceil(c),b+this.featureHeight/2,this.trackNodeGroup,this._setAttributes(e)):(c=SVG.drawRectangle(Math.ceil(a),Math.ceil(b),c,this.featureHeight,this.trackNodeGroup,d),c.addEventListener("mouseover",function(a){f._featureOver(e,this,a)},!0),c.addEventListener("mouseout",function(a){f._featureOut(e,this,a)},!0),c.addEventListener("click",function(a){f.clickOn(e,
this,a)},!0));this.label&&(c=this.getLabel(e),null!=c&&(a=this._renderLabel(Math.ceil(a),Math.ceil(b)+(this.featureHeight+this.labelHeight),c,this._setTextAttributes(e)),a.addEventListener("mouseover",function(a){f._featureOver(e,this,a)},!0),a.addEventListener("mouseout",function(a){f._featureOut(e,this,a)},!0),a.addEventListener("click",function(a){f.clickOn(e,this,a)},!0)))};
MultiFeatureTrack.prototype.getLabel=function(a){var b=a.label;return a instanceof GeneFeatureFormatter&&this.showDetailGeneLabel?a.getDetailLabel():a instanceof ExonFeatureFormatter?this.showExonLabel?a.label:"":a instanceof TranscriptFeatureFormatter?a.label:b};MultiFeatureTrack.prototype.clickOn=function(a){a instanceof TranscriptFeatureFormatter&&(new TranscriptInfoWidget(null,this.species)).draw(a);a instanceof GeneFeatureFormatter&&(new GeneInfoWidget(null,this.species)).draw(a);this.onClick.notify(a)};
MultiFeatureTrack.prototype._featureOut=function(a,b){b.setAttribute("stroke-width","0.5");b.setAttribute("opacity",this.lastOpacity);this.tooltippanel.destroy()};MultiFeatureTrack.prototype._featureOver=function(a,b,c){this.lastOpacity=b.getAttribute("opacity");b.setAttribute("stroke-width","1");b.setAttribute("opacity","0.6");this.tooltippanel=new TooltipPanel;this.tooltippanel.getPanel(a).showAt(c.clientX,c.clientY)};
function CytobandFeatureTrack(a,b,c){FeatureTrack.prototype.constructor.call(this,a,b,c);this.forceColor=this.opacity=null;null!=c&&(null!=c.opacity&&(this.opacity=c.opacity),null!=c.forceColor&&(this.forceColor=c.forceColor));this.positions={}}CytobandFeatureTrack.prototype._renderLabel=FeatureTrack.prototype._renderLabel;CytobandFeatureTrack.prototype.isFeatureDuplicated=FeatureTrack.prototype.isFeatureDuplicated;CytobandFeatureTrack.prototype.getIdToPrint=FeatureTrack.prototype.getIdToPrint;
CytobandFeatureTrack.prototype.changeView=FeatureTrack.prototype.changeView;CytobandFeatureTrack.prototype.render=FeatureTrack.prototype.render;CytobandFeatureTrack.prototype.init=FeatureTrack.prototype.init;CytobandFeatureTrack.prototype.createSVGDom=FeatureTrack.prototype.createSVGDom;CytobandFeatureTrack.prototype._getTopText=FeatureTrack.prototype._getTopText;CytobandFeatureTrack.prototype._getTopFeatures=FeatureTrack.prototype._getTopFeatures;CytobandFeatureTrack.prototype._searchSpace=FeatureTrack.prototype._searchSpace;
CytobandFeatureTrack.prototype.drawTitle=FeatureTrack.prototype.drawTitle;CytobandFeatureTrack.prototype.mouseMove=FeatureTrack.prototype.mouseMove;CytobandFeatureTrack.prototype.mouseclick=FeatureTrack.prototype.mouseclick;CytobandFeatureTrack.prototype.getById=FeatureTrack.prototype.getById;CytobandFeatureTrack.prototype.draw=FeatureTrack.prototype.draw;CytobandFeatureTrack.prototype.drawFeatures=FeatureTrack.prototype.drawFeatures;CytobandFeatureTrack.prototype._overlapBlocks=FeatureTrack.prototype._overlapBlocks;
CytobandFeatureTrack.prototype._render=FeatureTrack.prototype._render;CytobandFeatureTrack.prototype._convertGenomePositionToPixelPosition=FeatureTrack.prototype._convertGenomePositionToPixelPosition;CytobandFeatureTrack.prototype._getViewBoxCoordenates=FeatureTrack.prototype._getViewBoxCoordenates;CytobandFeatureTrack.prototype._getFeatureWidth=FeatureTrack.prototype._getFeatureWidth;CytobandFeatureTrack.prototype._updateTop=FeatureTrack.prototype._updateTop;
CytobandFeatureTrack.prototype.clear=FeatureTrack.prototype.clear;CytobandFeatureTrack.prototype.drawBackground=FeatureTrack.prototype.drawBackground;CytobandFeatureTrack.prototype.moveTitle=FeatureTrack.prototype.moveTitle;CytobandFeatureTrack.prototype.moveY=FeatureTrack.prototype.moveY;CytobandFeatureTrack.prototype.drawFeaturesInQueue=FeatureTrack.prototype.drawFeaturesInQueue;CytobandFeatureTrack.prototype._setTextAttributes=FeatureTrack.prototype._setTextAttributes;
CytobandFeatureTrack.prototype._setAttributes=FeatureTrack.prototype._setAttributes;CytobandFeatureTrack.prototype._drawFeature=FeatureTrack.prototype._drawFeature;CytobandFeatureTrack.prototype.appendFeatures=FeatureTrack.prototype.appendFeatures;CytobandFeatureTrack.prototype._addFeatures=function(a){this.features=a.toJSON();this.featuresIndex={}};
function RegionFeatureTrack(a,b,c){FeatureTrack.prototype.constructor.call(this,a,b,c);this.forceColor=this.opacity=null;null!=c&&(null!=c.opacity&&(this.opacity=c.opacity),null!=c.forceColor&&(this.forceColor=c.forceColor));this.positions={}}RegionFeatureTrack.prototype.getIdToPrint=FeatureTrack.prototype.getIdToPrint;RegionFeatureTrack.prototype.changeView=FeatureTrack.prototype.changeView;RegionFeatureTrack.prototype.render=FeatureTrack.prototype.render;RegionFeatureTrack.prototype.init=FeatureTrack.prototype.init;
RegionFeatureTrack.prototype.createSVGDom=FeatureTrack.prototype.createSVGDom;RegionFeatureTrack.prototype._getTopText=FeatureTrack.prototype._getTopText;RegionFeatureTrack.prototype._getTopFeatures=FeatureTrack.prototype._getTopFeatures;RegionFeatureTrack.prototype._searchSpace=FeatureTrack.prototype._searchSpace;RegionFeatureTrack.prototype.drawTitle=FeatureTrack.prototype.drawTitle;RegionFeatureTrack.prototype.mouseMove=FeatureTrack.prototype.mouseMove;RegionFeatureTrack.prototype.mouseclick=FeatureTrack.prototype.mouseclick;
RegionFeatureTrack.prototype.getById=FeatureTrack.prototype.getById;RegionFeatureTrack.prototype.draw=FeatureTrack.prototype.draw;RegionFeatureTrack.prototype.getFeatureColor=FeatureTrack.prototype.getFeatureColor;RegionFeatureTrack.prototype.drawFeatures=FeatureTrack.prototype.drawFeatures;RegionFeatureTrack.prototype._overlapBlocks=FeatureTrack.prototype._overlapBlocks;RegionFeatureTrack.prototype._render=FeatureTrack.prototype._render;
RegionFeatureTrack.prototype._convertGenomePositionToPixelPosition=FeatureTrack.prototype._convertGenomePositionToPixelPosition;RegionFeatureTrack.prototype._getViewBoxCoordenates=FeatureTrack.prototype._getViewBoxCoordenates;RegionFeatureTrack.prototype._getFeatureWidth=FeatureTrack.prototype._getFeatureWidth;RegionFeatureTrack.prototype.clear=FeatureTrack.prototype.clear;RegionFeatureTrack.prototype.drawBackground=FeatureTrack.prototype.drawBackground;RegionFeatureTrack.prototype.moveTitle=FeatureTrack.prototype.moveTitle;
RegionFeatureTrack.prototype.moveY=FeatureTrack.prototype.moveY;RegionFeatureTrack.prototype.appendFeatures=function(a){this.drawFeatures(a.toJSON())};RegionFeatureTrack.prototype._addFeatures=function(a){this.features=a.toJSON();this.featuresIndex={}};
RegionFeatureTrack.prototype._updateTop=function(){var a=this.height;this.avoidOverlapping&&(a=this.featureHeight+12*this.queues.length);this.maxHeight<a&&(this.maxHeight=a);this.height=this.maxHeight;null!=this.backgroundNode&&this.backgroundNode.setAttribute("height",this.maxHeight)};
RegionFeatureTrack.prototype._setAttributes=function(a){a=[["id",this.id+"_"+a.start+"_"+a.id],["font-size",a.getDefault().args.fontSize]];a.push(["fill","red"]);a.push(["opacity","0.6"]);a.push(["stroke","black"]);a.push(["stroke-width","1"]);return a};RegionFeatureTrack.prototype._setTextAttributes=function(a){this.getFeatureColor(a);return[["fill","black"],["id",this.id+"_"+a.start],["cursor","pointer"],["font-size",a.getDefault().args.fontSize]]};
RegionFeatureTrack.prototype._drawFeature=function(a,b,c,d,e){this.positions[Math.ceil(a)]=!0;SVG.drawRectangle(Math.ceil(a),b,Math.abs(c),Math.abs(this.featureHeight),this.trackNodeGroup,d);if(this.label){var f=this;SVG.drawText(Math.ceil(a),Math.ceil(b)+2*this.featureHeight-2,e.label,this.trackNodeGroup,this._setTextAttributes(e)).addEventListener("click",function(){f.onClick.notify(e)},!0)}};HistogramFeatureTrack.prototype.getIdToPrint=FeatureTrack.prototype.getIdToPrint;
HistogramFeatureTrack.prototype.changeView=FeatureTrack.prototype.changeView;HistogramFeatureTrack.prototype.render=FeatureTrack.prototype.render;HistogramFeatureTrack.prototype.init=FeatureTrack.prototype.init;HistogramFeatureTrack.prototype.createSVGDom=FeatureTrack.prototype.createSVGDom;HistogramFeatureTrack.prototype._getTopText=FeatureTrack.prototype._getTopText;HistogramFeatureTrack.prototype._getTopFeatures=FeatureTrack.prototype._getTopFeatures;
HistogramFeatureTrack.prototype._searchSpace=FeatureTrack.prototype._searchSpace;HistogramFeatureTrack.prototype.drawTitle=FeatureTrack.prototype.drawTitle;HistogramFeatureTrack.prototype.mouseMove=FeatureTrack.prototype.mouseMove;HistogramFeatureTrack.prototype.mouseclick=FeatureTrack.prototype.mouseclick;HistogramFeatureTrack.prototype.getById=FeatureTrack.prototype.getById;HistogramFeatureTrack.prototype.draw=FeatureTrack.prototype.draw;HistogramFeatureTrack.prototype.getFeatureColor=FeatureTrack.prototype.getFeatureColor;
HistogramFeatureTrack.prototype.drawFeatures=FeatureTrack.prototype.drawFeatures;HistogramFeatureTrack.prototype._overlapBlocks=FeatureTrack.prototype._overlapBlocks;HistogramFeatureTrack.prototype._render=FeatureTrack.prototype._render;HistogramFeatureTrack.prototype._convertGenomePositionToPixelPosition=FeatureTrack.prototype._convertGenomePositionToPixelPosition;HistogramFeatureTrack.prototype._getViewBoxCoordenates=FeatureTrack.prototype._getViewBoxCoordenates;
HistogramFeatureTrack.prototype._getFeatureWidth=FeatureTrack.prototype._getFeatureWidth;HistogramFeatureTrack.prototype.clear=FeatureTrack.prototype.clear;HistogramFeatureTrack.prototype.drawBackground=FeatureTrack.prototype.drawBackground;HistogramFeatureTrack.prototype.moveTitle=FeatureTrack.prototype.moveTitle;HistogramFeatureTrack.prototype.isFeatureDuplicated=FeatureTrack.prototype.isFeatureDuplicated;HistogramFeatureTrack.prototype.drawFeaturesInQueue=FeatureTrack.prototype.drawFeaturesInQueue;
function HistogramFeatureTrack(a,b,c,d){FeatureTrack.prototype.constructor.call(this,a,b,c,d);this.forceColor=this.opacity=null;this.intervalSize=2E6;null!=d&&(null!=d.opacity&&(this.opacity=d.opacity),null!=d.forceColor&&(this.forceColor=d.forceColor),null!=d.intervalSize&&(this.intervalSize=d.intervalSize));this.positions={};this.allowDuplicates=!0}
HistogramFeatureTrack.prototype.getFeaturesInterval=function(a){var b=[],c=this.intervalSize;if(0<a.length){for(var d=a[a.length-1].end,e=a[0].start;e<d;)b.push({start:e,end:e+c,value:0}),e+=c;for(e=d=c=0;e<a.length;e++)for(var f=c;f<b.length;f++)b[f].start<a[e].end&&b[f].end>a[e].start&&(b[f].value+=1,b[f].value>d&&(d=b[f].value),c=f)}for(e=0;e<b.length;e++)b[e].value/=d;return b};HistogramFeatureTrack.prototype.appendFeatures=function(a){this.drawFeatures(a.toJSON())};
HistogramFeatureTrack.prototype.sort=function(a,b){return a.start-b.start};HistogramFeatureTrack.prototype._addFeatures=function(a){this.featuresIndex={};this.features=a.toJSON()};HistogramFeatureTrack.prototype._updateTop=function(){if(this.avoidOverlapping)for(var a=0;a<this.queues.length;a++)this.height+=this.featureHeight};
HistogramFeatureTrack.prototype._setAttributes=function(a){a=[["id",this.id+"_"+a.start+"_"+a.id]];null!=this.forceColor?a.push(["fill",this.forceColor]):a.push(["fill","red"]);return a};HistogramFeatureTrack.prototype._setTextAttributes=function(a){return[["fill","black"],["id",this.id+"_"+a.start],["cursor","pointer"]]};
HistogramFeatureTrack.prototype._drawFeature=function(a,b,c,d,e){var f=this;0>c&&(c=2);this.positions[Math.ceil(a)]=!0;SVG.drawRectangle(Math.ceil(a),b+(this.featureHeight-e.value*Math.abs(this.featureHeight)),c,e.value*Math.abs(this.featureHeight),this.trackNodeGroup,d);this.label&&SVG.drawText(Math.ceil(a)+12,Math.ceil(b)+this.featureHeight,e.label,this.labelNodeGroup,this._setTextAttributes(e)).addEventListener("click",function(){f.onClick.notify(e)},!0)};
VCFFeatureTrack.prototype.getIdToPrint=FeatureTrack.prototype.getIdToPrint;VCFFeatureTrack.prototype.changeView=FeatureTrack.prototype.changeView;VCFFeatureTrack.prototype.render=FeatureTrack.prototype.render;VCFFeatureTrack.prototype.init=FeatureTrack.prototype.init;VCFFeatureTrack.prototype.createSVGDom=FeatureTrack.prototype.createSVGDom;VCFFeatureTrack.prototype._getTopText=FeatureTrack.prototype._getTopText;VCFFeatureTrack.prototype._getTopFeatures=FeatureTrack.prototype._getTopFeatures;
VCFFeatureTrack.prototype._searchSpace=FeatureTrack.prototype._searchSpace;VCFFeatureTrack.prototype.drawTitle=FeatureTrack.prototype.drawTitle;VCFFeatureTrack.prototype.mouseMove=FeatureTrack.prototype.mouseMove;VCFFeatureTrack.prototype.mouseclick=FeatureTrack.prototype.mouseclick;VCFFeatureTrack.prototype.getById=FeatureTrack.prototype.getById;VCFFeatureTrack.prototype.draw=FeatureTrack.prototype.draw;VCFFeatureTrack.prototype.getFeatureColor=FeatureTrack.prototype.getFeatureColor;
VCFFeatureTrack.prototype.drawFeatures=FeatureTrack.prototype.drawFeatures;VCFFeatureTrack.prototype._overlapBlocks=FeatureTrack.prototype._overlapBlocks;VCFFeatureTrack.prototype._render=FeatureTrack.prototype._render;VCFFeatureTrack.prototype._convertGenomePositionToPixelPosition=FeatureTrack.prototype._convertGenomePositionToPixelPosition;VCFFeatureTrack.prototype._getViewBoxCoordenates=FeatureTrack.prototype._getViewBoxCoordenates;VCFFeatureTrack.prototype._getFeatureWidth=FeatureTrack.prototype._getFeatureWidth;
VCFFeatureTrack.prototype.clear=FeatureTrack.prototype.clear;VCFFeatureTrack.prototype.drawBackground=FeatureTrack.prototype.drawBackground;VCFFeatureTrack.prototype.moveTitle=FeatureTrack.prototype.moveTitle;VCFFeatureTrack.prototype._setAttributes=FeatureTrack.prototype._setAttributes;VCFFeatureTrack.prototype._setTextAttributes=FeatureTrack.prototype._setTextAttributes;VCFFeatureTrack.prototype._updateTop=FeatureTrack.prototype._updateTop;VCFFeatureTrack.prototype.drawFeaturesInQueue=FeatureTrack.prototype.drawFeaturesInQueue;
VCFFeatureTrack.prototype._renderLabel=FeatureTrack.prototype._renderLabel;function VCFFeatureTrack(a,b,c){FeatureTrack.prototype.constructor.call(this,a,b,c);this.positions={};this.counter=0;console.log(this.featureHeight)}VCFFeatureTrack.prototype.appendFeatures=function(a){this.drawFeatures(a.toJSON())};VCFFeatureTrack.prototype._addFeatures=function(a){this.features=a.toJSON();this.featuresIndex={}};
VCFFeatureTrack.prototype._drawFeature=function(a,b,c,d,e){1>=c&&(c=2);this.positions[Math.ceil(a)]=!0;SVG.drawRectangle(Math.ceil(a),b,c,this.featureHeight,this.trackNodeGroup,d);if(null!=e.base)for(var d=e.base.length,c=c/d,f=0;f<d;f++)SVG.drawText(f*c+a+2,Math.ceil(b)+8,e.base[f],this.labelNodeGroup,[["font-size","8"],["fill","#ffffff"]]);this.label&&this._renderLabel(Math.ceil(a),Math.ceil(b)+(this.featureHeight+this.labelHeight),e.label,this._setTextAttributes(e),e)};
ChromosomeFeatureTrack.prototype.createSVGDom=FeatureTrack.prototype.createSVGDom;ChromosomeFeatureTrack.prototype.init=FeatureTrack.prototype.init;ChromosomeFeatureTrack.prototype.draw=FeatureTrack.prototype.draw;ChromosomeFeatureTrack.prototype._render=FeatureTrack.prototype._render;ChromosomeFeatureTrack.prototype.getById=FeatureTrack.prototype.getById;ChromosomeFeatureTrack.prototype._getViewBoxCoordenates=FeatureTrack.prototype._getViewBoxCoordenates;
ChromosomeFeatureTrack.prototype._getSVGCoordenates=FeatureTrack.prototype._getSVGCoordenates;ChromosomeFeatureTrack.prototype.drawBackground=FeatureTrack.prototype.drawBackground;
function ChromosomeFeatureTrack(a,b,c,d){FeatureTrack.prototype.constructor.call(this,a,b,c,d);this.selectcolor="#33FF33";this.markcolor="#FF3333";this.radio=3;this.markers={};this.start=1;this.vertical=this.labelChromosome=!1;this.rounded=7;this.label=!1;this.maxFeatureEnd=1;null!=d&&(null!=d.label&&(this.label=d.label),null!=d.labelChromosome&&(this.labelChromosome=d.labelChromosome),null!=d.vertical&&(this.vertical=d.vertical),null!=d.rounded&&(this.rounded=d.rounded),null!=d.bottom&&(this.bottom=
d.bottom));this.onMarkerClicked=new Event(this);this.selector={};this.selector.selectorIsMoving=!1;this.selector.selectorSVG=null;this.selector.selectorBorder=null;this.selector.start=null;this.selector.end=null;this.selector.mouseOffsetX=null}ChromosomeFeatureTrack.prototype.getCentromeros=function(){for(var a=[],b=0;b<this.features.length;b++)"acen"==this.features[b].stain&&a.push(this.features[b]);return a};
ChromosomeFeatureTrack.prototype.getEnd=function(a){for(var b=0,c=0;c<a.length;c++)a[c].end>b&&(b=a[c].end);return b};ChromosomeFeatureTrack.prototype.getColorByStain=function(a){if("gneg"==a.stain)return"white";if("stalk"==a.stain)return"#666666";if("gvar"==a.stain)return"#CCCCCC";if(-1!=a.stain.indexOf("gpos")){var b=a.stain.replace("gpos","");if(25==b)return"silver";if(50==b)return"gray";if(75==b)return"darkgray";if(100==b)return"black"}return"acen"==a.stain?"blue":"purple"};
ChromosomeFeatureTrack.prototype.getPixelScale=function(){return this.vertical?(this.bottom-this.top)/(this.end-this.start):(this.right-this.left)/(this.end-this.start)};ChromosomeFeatureTrack.prototype.setBackgroundColor=function(a){this.backgroundSVGNode.setAttribute("fill",a);"white"==a?this.backgroundSVGNode.setAttribute("stroke","white"):this.backgroundSVGNode.setAttribute("stroke","black")};
ChromosomeFeatureTrack.prototype.unmark=function(){for(var a in this.markers)this.trackNodeGroup.removeChild(DOM.select(a));this.markers={}};ChromosomeFeatureTrack.prototype.getMarkIDFromFeature=function(a){var b=a.chromosome+"_"+a.start+"_"+a.end;this.markers[b]=a;return b};
ChromosomeFeatureTrack.prototype.mark=function(a,b){var c=this,d=this.getPixelScale(),e=a.start,f=a.end,g=(f-e)*d;e==f&&(g=1);null!=b&&(this.markcolor=b);if(this.vertical){var g=this.top+e*d,d=[["stroke","black"],["stroke-width","1"],["id",this.getMarkIDFromFeature(a)],["fill",this.markcolor],["opacity","1"],["cursor","pointer"]],h=SVG.drawPoligon([[this.right+6,g-3],[this.right,g],[this.right+6,g+3]],this.trackNodeGroup,d);h.addEventListener("click",function(){c.onMarkerClicked.notify(c.markers[h.id])},
!0)}else e=this.left+e*d,d=[["id",this.markers.length],["fill",this.markcolor],["opacity","1"]],SVG.drawRectangle(e,this.top,g,this.bottom-this.top+this.radio+5,this.trackNodeGroup,d),d=[["id",id],["fill",this.markcolor],["opacity","1"],["stroke","black"]],SVG.drawCircle(e,this.bottom+this.radio+5,this.radio,this.trackNodeGroup,d)};ChromosomeFeatureTrack.prototype.getSelectorId=function(){return this.id+"_selector"};
ChromosomeFeatureTrack.prototype.deselect=function(){var a=this.getSelectorId();null!=DOM.select(a)&&this.trackNodeGroup.removeChild(this.selector.selectorSVG)};
ChromosomeFeatureTrack.prototype.mouseMove=function(a){if(this.selector.selectorIsMoving&&null!=this.selector.selectorSVG){var b=this.getSVGCoordenates(a).x-this.selector.mouseOffsetX,c=this.getPixelScale(),b=parseFloat(this.selector.start)+parseFloat(Math.ceil(b/c));this.select(b,b+(this.selector.end-this.selector.start));this.selector.mouseOffsetX=this.getSVGCoordenates(a).x}};ChromosomeFeatureTrack.prototype.mouseDown=function(a){this.selector.selectorIsMoving=!0;this.selector.mouseOffsetX=this.getSVGCoordenates(a).x};
ChromosomeFeatureTrack.prototype.mouseUp=function(){this.selector.selectorIsMoving=!1;this.click.notify(this.selector.start+(this.selector.end-this.selector.start)/2)};
ChromosomeFeatureTrack.prototype.select=function(a,b){var c=this;this.selector.id=this.getSelectorId();this.selector.start=a;this.selector.end=b;b>this.maxFeatureEnd&&0<(this.maxFeatureEnd-a)*d&&(b=this.maxFeatureEnd);this.deselect();if(null!=this.trackNodeGroup){var d=this.getPixelScale();if(this.vertical){var d=this.getPixelScale(),e=Math.ceil(this.top+d*a),d=[["stroke","black"],["stroke-width","1"],["id",this.selector.id],["cursor","move"],["fill",this.selectcolor],["opacity","1"]];this.selector.selectorSVG=
SVG.drawPoligon([[0,e-5],[this.left,e],[0,e+5]],this.trackNodeGroup,d)}else{var e=this.left+a*d,f=Math.ceil((b-a)*d),d=[["stroke","red"],["stroke-width","1"],["id",this.selector.id],["cursor","move"],["fill",this.selectcolor],["fill-opacity","0.1"]];this.selector.selectorSVG=SVG.drawRectangle(e,this.top+6,f,this.bottom-this.top,this.trackNodeGroup,d);this.selector.selectorSVG.addEventListener("mousemove",function(a){c.mouseMove(a,c)},!1);this.selector.selectorSVG.addEventListener("mousedown",function(a){c.mouseDown(a,
c)},!1);this.selector.selectorSVG.addEventListener("mouseup",function(a){c.mouseUp(a,c)},!1)}}};
ChromosomeFeatureTrack.prototype.drawFeatures=function(){var a=this.getCentromeros();this.pixelInc=this.getPixelScale();var b=0;0!=a.length?(b=a[0].end*this.pixelInc,this.centromerosVisited=!1):this.centromerosVisited=!0;a=[["stroke","black"],["stroke-width","1"],["id","clip"],["fill","pink"],["rx",this.rounded],["ry",this.rounded],["z-index","0"]];if(this.vertical){this.featureHeight=this.right-this.left-1;var c=b+this.top,d=this.bottom-b-this.top,e=SVG.createRectangle(this.left,c,this.featureHeight,
d,a);this.trackNodeGroup.appendChild(e);e=SVG.createRectangle(this.left,c,this.featureHeight,d,a);this.trackNodeGroup.appendChild(e);SVG.drawClip("clip_1"+this.id,e,this.trackNodeGroup);this.groupNodeFirstCentromero=SVG.drawGroup(this.trackNodeGroup,[["id","clip_group"],["clip-path","url(#clip_1"+this.id+")"]]);c=this.top;d=b;e=SVG.createRectangle(this.left,c+1,this.featureHeight,d,a);this.trackNodeGroup.appendChild(e);e=SVG.createRectangle(this.left,c+1,this.featureHeight,d,a)}else this.featureHeight=
Math.ceil(this.bottom-this.top),e=SVG.createRectangle(this.left,this.top+6,b,this.featureHeight,a),this.trackNodeGroup.appendChild(e),e=SVG.createRectangle(this.left,this.top+6,b,this.featureHeight,a),this.trackNodeGroup.appendChild(e),SVG.drawClip("clip_1"+this.id,e,this.trackNodeGroup),this.groupNodeFirstCentromero=SVG.drawGroup(this.trackNodeGroup,[["id","clip_group"],["clip-path","url(#clip_1"+this.id+")"]]),c=Math.ceil(b+this.left),b=Math.ceil(this.right-b-this.left-2),e=SVG.createRectangle(c,
this.top+6,b,this.featureHeight,a),this.trackNodeGroup.appendChild(e),e=SVG.createRectangle(c,this.top+6,b,this.featureHeight,a);this.trackNodeGroup.appendChild(e);SVG.drawClip("clip_2"+this.id,e,this.trackNodeGroup);groupNodeSecondCentromero=SVG.drawGroup(this.trackNodeGroup,[["id","clip_group"],["clip-path","url(#clip_2"+this.id+")"]]);for(b=0;b<this.features.length;b++)a=this.features[b],this._drawCytoband(a),0==b&&this.label&&(e=[["id",this.id_+"title"],["font-size","9"]],this.vertical&&SVG.drawText(this.left,
this.height,a.chromosome,this.labelNodeGroup,e))};
ChromosomeFeatureTrack.prototype._drawCytoband=function(a){var b=this,c=stroke=this.getColorByStain(a),d=null,d=this.pixelInc*(a.end-a.start),c=[["fill",c],["id",this.id+"_"+a.cytoband],["z-index","10"],["stroke",stroke],["style","cursor:pointer"]];this.maxFeatureEnd<a.end&&(this.maxFeatureEnd=a.end);this.vertical?(d=SVG.createRectangle(Math.ceil(this.left),Math.ceil(this.top+this.pixelInc*(a.start-this.start)),Math.ceil(this.right-this.left),Math.ceil(d),c),this.centromerosVisited?this.groupNodeFirstCentromero.appendChild(d):
groupNodeSecondCentromero.appendChild(d)):(d=SVG.createRectangle(Math.ceil(this.left+this.pixelInc*(a.start-this.start)),this.top,d,Math.ceil(this.featureHeight)+6,c),this.centromerosVisited?groupNodeSecondCentromero.appendChild(d):this.groupNodeFirstCentromero.appendChild(d),this.label&&(c=[["fill","black"],["id",this.id_+"title"],["opacity","1"],["font-size","7"]],c.push(["transform","translate("+(this.left+this.pixelInc*(a.start+(a.end-a.start)/2-this.start))+", "+(this.height+10)+"), rotate(270)"]),
SVG.drawText(0,0,a.cytoband,this.labelNodeGroup,c)));d.addEventListener("click",function(c){b.vertical?b.click.notify(a):(c=b._getSVGCoordenates(c),c=Math.ceil((c.x-b.left)/b.pixelInc),b.click.notify(c))},!0);"acen"==a.stain&&(this.centromerosVisited=!0)};ChromosomeFeatureTrack.prototype.draw=function(a){this.features=a.toJSON()[0];this.featuresIndex={};this.printedFeature={};if(null!=this.features){for(a=0;a<this.features.length;a++)this.featuresIndex[this.features[a].id]=a;this.end=this.getEnd(this.features)}this._render()};
ChromosomeFeatureTrack.prototype.getSVGCoordenates=function(a){var b=this._svg.createSVGPoint();b.x=a.clientX;b.y=a.clientY;a=this._svg.getScreenCTM(document.documentElement);return b=b.matrixTransform(a.inverse())};
function FeatureFormatter(a,b,c,d,e){this.id=a;this.internalId=Math.random();this.args={};this.defaultFormat=new ItemFeatureFormat(b);this.selected=null!=c?new ItemFeatureFormat(c):new ItemFeatureFormat(b);this.over=null!=d?new ItemFeatureFormat(d):new ItemFeatureFormat(b);this.dragging=null!=e?new ItemFeatureFormat(e):new ItemFeatureFormat(b);this.stateChanged=new Event(this);this._setEvents()}FeatureFormatter.prototype.getType=function(){return this.args.type};
FeatureFormatter.prototype.toJSON=function(){var a=this.args;a.defaultFormat=this.getDefault().toJSON();a.over=this.getOver().toJSON();a.selected=this.getSelected().toJSON();a.dragging=this.getDragging().toJSON();a.id=this.id;return a};FeatureFormatter.prototype.loadFromJSON=function(a){this.args=a;this.defaultFormat=new ItemFeatureFormat(a.defaultFormat);this.over=new ItemFeatureFormat(a.over);this.selected=new ItemFeatureFormat(a.selected);this.dragging=new ItemFeatureFormat(a.dragging);this._setEvents()};
FeatureFormatter.prototype._setEvents=function(){var a=this;this.defaultFormat.changed.addEventListener(function(){a.over.setSize(a.defaultFormat.getSize());a.selected.setSize(a.defaultFormat.getSize());a.dragging.setSize(a.defaultFormat.getSize());a.stateChanged.notify(a)});this.selected.changed.addEventListener(function(){a.stateChanged.notify(a)});this.over.changed.addEventListener(function(){a.stateChanged.notify(a)});this.dragging.changed.addEventListener(function(){a.stateChanged.notify(a)})};
FeatureFormatter.prototype.getId=function(){return this.id};FeatureFormatter.prototype.getDefault=function(){return this.defaultFormat};FeatureFormatter.prototype.getSelected=function(){return this.selected};FeatureFormatter.prototype.getOver=function(){return this.over};FeatureFormatter.prototype.getDragging=function(){return this.dragging};
function ItemFeatureFormat(a){this.defaultFormat={};this.args={};this.args.title={};this.args.hidden=!1;this.args.stroke="black";this.args.strokeOpacity=0.8;this.args.strokeWidth=1;this.args.fill="white";this.args.size=1;this.args.opacity=1;this.args.fontSize="8";this.args.fontColor="black";null!=a&&(null!=a.opacity&&(this.args.opacity=a.opacity),null!=a.size&&(this.args.size=a.size),null!=a.hidden&&(this.args.hidden=a.hidden),null!=a.stroke&&(this.args.stroke=a.stroke),null!=a.strokeOpacity&&(this.args.strokeOpacity=
a.strokeOpacity),null!=a.strokeWidth&&(this.args.strokeWidth=a.strokeWidth),null!=a.shape&&(this.args.shape=a.shape),null!=a.fill&&(this.args.fill=a.fill),null!=a.fontSize&&(this.args.fontSize=a.fontSize));this.changed=new Event}
ItemFeatureFormat.prototype.toJSON=function(){null!=this.args.strokeOpacity&&(this.args["stroke-opacity"]=this.args.strokeOpacity,delete this.args.strokeOpacity);null!=this.args.strokeWidth&&(this.args["stroke-width"]=this.args.strokeWidth,delete this.args.strokeWidth);this.args.title["font-color"]=null!=this.args.title.fontColor?this.args.title.fontColor:this.args.fontColor;this.args.title["font-size"]=null!=this.args.title.fontSize?this.args.title.fontSize:this.args.fontSize;return this.args};
ItemFeatureFormat.prototype.getAttribute=function(a){return this.args[a]};ItemFeatureFormat.prototype.setVisible=function(a){this.args.visible!=a&&(this.args.visible=a,this.changed.notify(this))};ItemFeatureFormat.prototype.getVisible=function(){return this.args.visible};ItemFeatureFormat.prototype.setHidden=function(a){this.args.hidden!=a&&(this.args.hidden=a,this.changed.notify(this))};ItemFeatureFormat.prototype.getHidden=function(){return this.args.hidden};
ItemFeatureFormat.prototype.setStroke=function(a){this.args.stroke!=a&&(this.args.stroke=a,this.changed.notify(this))};ItemFeatureFormat.prototype.getStroke=function(){return this.args.stroke};ItemFeatureFormat.prototype.setStrokeOpacity=function(a){this.args.strokeOpacity!=a&&(this.args.strokeOpacity=a,this.changed.notify(this))};ItemFeatureFormat.prototype.getStrokeOpacity=function(){return this.args["stroke-opacity"]};
ItemFeatureFormat.prototype.setStrokeWidth=function(a){this.args.strokeWidth!=a&&(this.args.strokeWidth=a,this.changed.notify(this))};ItemFeatureFormat.prototype.getStrokeWidth=function(){return this.args.strokeWidth};ItemFeatureFormat.prototype.setFill=function(a){this.args.fill!=a&&(this.args.fill=a,this.changed.notify(this))};ItemFeatureFormat.prototype.getFill=function(){return this.args.fill};ItemFeatureFormat.prototype.setSize=function(a){this.args.size!=a&&(this.args.size=a,this.changed.notify(this))};
ItemFeatureFormat.prototype.getSize=function(){return this.args.size};ItemFeatureFormat.prototype.setOpacity=function(a){this.args.opacity!=a&&(this.args.opacity=a,this.changed.notify(this))};ItemFeatureFormat.prototype.getOpacity=function(){return this.args.opacity};ItemFeatureFormat.prototype.getArrowSize=function(){return this.args.arrowSize};ItemFeatureFormat.prototype.setArrowSize=function(a){this.args.arrowSize!=a&&(this.args.arrowSize=a,this.changed.notify(this))};
ItemFeatureFormat.prototype.getFontSize=function(){return this.args.title.fontSize};ItemFeatureFormat.prototype.setFontSize=function(a){this.args.title.fontSize!=a&&(this.args.title.fontSize=a,this.changed.notify(this))};GeneFeatureFormatter.prototype.setProperties=FeatureFormatter.prototype.setProperties;GeneFeatureFormatter.prototype.getDefault=FeatureFormatter.prototype.getDefault;GeneFeatureFormatter.prototype.getSelected=FeatureFormatter.prototype.getSelected;
GeneFeatureFormatter.prototype.getOver=FeatureFormatter.prototype.getOver;GeneFeatureFormatter.prototype.getDragging=FeatureFormatter.prototype.getDragging;GeneFeatureFormatter.prototype.getId=FeatureFormatter.prototype.getId;GeneFeatureFormatter.prototype.toJSON=FeatureFormatter.prototype.toJSON;GeneFeatureFormatter.prototype.loadFromJSON=FeatureFormatter.prototype.loadFromJSON;GeneFeatureFormatter.prototype._setEvents=FeatureFormatter.prototype._setEvents;
function GeneFeatureFormatter(a){null!=a&&(this.feature=a,this.start=a.start,this.end=a.end,this.label=this.getLabel(),this.args={},this.args.object=a,this.args.title={},this.args.stroke="#000000",this.args.strokeWidth=0.5,this.args.fill="#"+this._getColor(a),this.args.opacity=1,FeatureFormatter.prototype.constructor.call(this,this.getId(),this.args))}GeneFeatureFormatter.prototype.getId=function(){return this.feature.stableId+"_"+this.feature.start+"_"+this.feature.end};
GeneFeatureFormatter.prototype.getName=function(){return this.feature.stableId};GeneFeatureFormatter.prototype.getLabel=function(){var a=this.feature.externalName;-1==this.feature.strand&&(a="< "+a);1==this.feature.strand&&(a+=" >");return a};GeneFeatureFormatter.prototype.getDetailLabel=function(){var a=this.feature.biotype.replace(/_/gi," "),a=a.charAt(0).toUpperCase()+a.slice(1);return this.getLabel()+" ["+a+"] "};
GeneFeatureFormatter.prototype.getBioTypeColors=function(){return{protein_coding:"a00000",processed_transcript:"0000ff",pseudogene:"666666",miRNA:"8b668b",snRNA:"8b668b",snoRNA:"8b668b",lincRNA:"8b668b",other:"ffffff"}};GeneFeatureFormatter.prototype._getColor=function(a){return-1!=a.biotype.indexOf("pseudogene")?this.getBioTypeColors().pseudogene:null==this.getBioTypeColors()[a.biotype]?this.getBioTypeColors().other:this.getBioTypeColors()[a.biotype]};
TranscriptFeatureFormatter.prototype.setProperties=FeatureFormatter.prototype.setProperties;TranscriptFeatureFormatter.prototype.getDefault=FeatureFormatter.prototype.getDefault;TranscriptFeatureFormatter.prototype.getSelected=FeatureFormatter.prototype.getSelected;TranscriptFeatureFormatter.prototype.getOver=FeatureFormatter.prototype.getOver;TranscriptFeatureFormatter.prototype.getDragging=FeatureFormatter.prototype.getDragging;TranscriptFeatureFormatter.prototype.getId=FeatureFormatter.prototype.getId;
TranscriptFeatureFormatter.prototype.toJSON=FeatureFormatter.prototype.toJSON;TranscriptFeatureFormatter.prototype.loadFromJSON=FeatureFormatter.prototype.loadFromJSON;TranscriptFeatureFormatter.prototype._setEvents=FeatureFormatter.prototype._setEvents;
function TranscriptFeatureFormatter(a){this.feature=a;this.start=a.start;this.end=a.end;this.label=this.getLabel();this.exon=[];for(var b=0;b<a.exon.length;b++)this.exon.push(new ExonFeatureFormatter(a.exon[b],a));this.args={};this.args.title={};this.args.hidden=!1;this.args.stroke="black";this.args.strokeWidth=1;this.args.fill=this.getBioTypeColors()[a.biotype.toUpperCase()];this.args.size=1;this.args.opacity=0.5;this.args.fontSize=10;this.args.fontColor="#FFFFFF";this.showFeatureStableId=!0;FeatureFormatter.prototype.constructor.call(this,
this.getId(),this.args)}TranscriptFeatureFormatter.prototype.getName=function(){return this.feature.stableId};TranscriptFeatureFormatter.prototype.getId=function(){return this.feature.stableId+"_"+this.feature.start+"_"+this.feature.end};
TranscriptFeatureFormatter.prototype.getBioTypeColors=function(){var a={};a[(new String("protein_coding")).toUpperCase()]="21610B";a[(new String("pseudogene")).toUpperCase()]="ffcc00";a[(new String("snRNA")).toUpperCase()]="424242";a[(new String("lincRNA")).toUpperCase()]="8A0886";a[(new String("processed_transcript")).toUpperCase()]="ff9900";a[(new String("other")).toUpperCase()]="FFFFFF";return a};
TranscriptFeatureFormatter.prototype.getLabel=function(){var a=this.feature.externalName;-1==this.feature.strand&&(a="< "+a);1==this.feature.strand&&(a+=" >");var b=this.feature.biotype.replace(/_/gi," "),b=b.charAt(0).toUpperCase()+b.slice(1);return a+" ["+b+"]"};ExonFeatureFormatter.prototype.setProperties=FeatureFormatter.prototype.setProperties;ExonFeatureFormatter.prototype.getDefault=FeatureFormatter.prototype.getDefault;ExonFeatureFormatter.prototype.getSelected=FeatureFormatter.prototype.getSelected;
ExonFeatureFormatter.prototype.getOver=FeatureFormatter.prototype.getOver;ExonFeatureFormatter.prototype.getDragging=FeatureFormatter.prototype.getDragging;ExonFeatureFormatter.prototype.getId=FeatureFormatter.prototype.getId;ExonFeatureFormatter.prototype.toJSON=FeatureFormatter.prototype.toJSON;ExonFeatureFormatter.prototype.loadFromJSON=FeatureFormatter.prototype.loadFromJSON;ExonFeatureFormatter.prototype._setEvents=FeatureFormatter.prototype._setEvents;
function ExonFeatureFormatter(a){this.feature=a;this.start=a.start;this.end=a.end;this.label=a.stableId;this.args={};this.args.title={};this.args.hidden=!1;this.args.opacity=1;this.args.strokeOpacity=1;this.args.fill="#FF0033";this.args.stroke="#3B0B0B";this.args.strokeWidth=1;this.args.size=1;this.args.fontSize=10;this.args.fontColor="#FFFFFF";FeatureFormatter.prototype.constructor.call(this,this.getId(),this.args)}ExonFeatureFormatter.prototype.getName=function(){return this.feature.stableId};
ExonFeatureFormatter.prototype.getId=function(){return this.feature.stableId+"_"+this.feature.start+"_"+this.feature.end};SNPFeatureFormatter.prototype.setProperties=FeatureFormatter.prototype.setProperties;SNPFeatureFormatter.prototype.getDefault=FeatureFormatter.prototype.getDefault;SNPFeatureFormatter.prototype.getSelected=FeatureFormatter.prototype.getSelected;SNPFeatureFormatter.prototype.getOver=FeatureFormatter.prototype.getOver;SNPFeatureFormatter.prototype.getDragging=FeatureFormatter.prototype.getDragging;
SNPFeatureFormatter.prototype.getId=FeatureFormatter.prototype.getId;SNPFeatureFormatter.prototype.toJSON=FeatureFormatter.prototype.toJSON;SNPFeatureFormatter.prototype.loadFromJSON=FeatureFormatter.prototype.loadFromJSON;SNPFeatureFormatter.prototype._setEvents=FeatureFormatter.prototype._setEvents;
function SNPFeatureFormatter(a){null!=a&&(this.feature=a,this.start=a.start,this.end=a.end,this.label=a.name+" ("+a.alleleString+")",this.base=a.alleleString.split("/")[1],this.args={},this.args.stroke="#f55959",this.args.strokeOpacity=1,this.args.strokeWidth=1,this.args.fill=this._getColor(a),this.args.opacity=1,FeatureFormatter.prototype.constructor.call(this,a.name,this.args))}SNPFeatureFormatter.prototype.getName=function(){return this.feature.name};
SNPFeatureFormatter.prototype.getFeatureColor=function(a){return"A"==a?"#90EE90":"T"==a?"#E066FF":"G"==a?"#FFEC8B":"C"==a?"#B0C4DE":"#CC00CC"};
SNPFeatureFormatter.prototype.getBioTypeColors=function(){return{"2KB_upstream_variant":"a2b5cd","5KB_upstream_variant":"a2b5cd","500B_downstream_variant":"a2b5cd","5KB_downstream_variant":"a2b5cd","3_prime_UTR_variant":"7ac5cd","5_prime_UTR_variant":"7ac5cd",coding_sequence_variant:"458b00",complex_change_in_transcript:"00fa9a",frameshift_variant:"ff69b4",incomplete_terminal_codon_variant:"ff00ff",inframe_codon_gain:"ffd700",inframe_codon_loss:"ffd700",initiator_codon_change:"ffd700",non_synonymous_codon:"ffd700",
intergenic_variant:"636363",intron_variant:"02599c",mature_miRNA_variant:"458b00",nc_transcript_variant:"32cd32",splice_acceptor_variant:"ff7f50",splice_donor_variant:"ff7f50",splice_region_variant:"ff7f50",stop_gained:"ff0000",stop_lost:"ff0000",stop_retained_variant:"76ee00",synonymous_codon:"76ee00",other:"ffffff"}};SNPFeatureFormatter.prototype._getColor=function(a){return this.getBioTypeColors()[a.displaySoConsequence]};SequenceFormatter.prototype.setProperties=FeatureFormatter.prototype.setProperties;
SequenceFormatter.prototype.getDefault=FeatureFormatter.prototype.getDefault;SequenceFormatter.prototype.getSelected=FeatureFormatter.prototype.getSelected;SequenceFormatter.prototype.getOver=FeatureFormatter.prototype.getOver;SequenceFormatter.prototype.getDragging=FeatureFormatter.prototype.getDragging;SequenceFormatter.prototype.getId=FeatureFormatter.prototype.getId;SequenceFormatter.prototype.toJSON=FeatureFormatter.prototype.toJSON;SequenceFormatter.prototype.loadFromJSON=FeatureFormatter.prototype.loadFromJSON;
SequenceFormatter.prototype._setEvents=FeatureFormatter.prototype._setEvents;function SequenceFormatter(a){this.start=a.start;this.end=a.end;this.label=a.base;this.args={};this.args.title={};this.args.hidden=!1;this.args.stroke="#FFFFFF";this.args.strokeOpacity=0.6;this.args.strokeWidth=1;this.args.fill=this.getFeatureColor(a.base);this.args.size=1;this.args.opacity=0.6;this.args.fontSize=10;this.args.fontColor="#FFFFFF";FeatureFormatter.prototype.constructor.call(this,a.start,this.args)}
SequenceFormatter.prototype.getName=function(){return this.label};SequenceFormatter.prototype.getFeatureColor=function(a){return"A"==a?"#90EE90":"T"==a?"#E066FF":"G"==a?"#FFEC8B":"C"==a?"#B0C4DE":"#CC00CC"};VCFFeatureFormatter.prototype.setProperties=FeatureFormatter.prototype.setProperties;VCFFeatureFormatter.prototype.getDefault=FeatureFormatter.prototype.getDefault;VCFFeatureFormatter.prototype.getSelected=FeatureFormatter.prototype.getSelected;VCFFeatureFormatter.prototype.getOver=FeatureFormatter.prototype.getOver;
VCFFeatureFormatter.prototype.getDragging=FeatureFormatter.prototype.getDragging;VCFFeatureFormatter.prototype.getId=FeatureFormatter.prototype.getId;VCFFeatureFormatter.prototype.toJSON=FeatureFormatter.prototype.toJSON;VCFFeatureFormatter.prototype.loadFromJSON=FeatureFormatter.prototype.loadFromJSON;VCFFeatureFormatter.prototype._setEvents=FeatureFormatter.prototype._setEvents;
function VCFFeatureFormatter(a){this.feature=a;this.start=a.start;this.end=a.end-1;this.label=a.label;this.base=a.alt;this.args={};this.args.title={};this.args.hidden=!1;this.args.stroke="#000000";this.args.strokeOpacity=1;this.args.strokeWidth=0.1;this.args.fill="purple";this.args.size=1;this.args.opacity=1;this.feature.samples=a.all[9];FeatureFormatter.prototype.constructor.call(this,a.start,this.args)}
VCFFeatureFormatter.prototype.getName=function(){return this.feature.chromosome+":"+this.feature.start+"-"+this.feature.alt};GFFFeatureFormatter.prototype.setProperties=FeatureFormatter.prototype.setProperties;GFFFeatureFormatter.prototype.getDefault=FeatureFormatter.prototype.getDefault;GFFFeatureFormatter.prototype.getSelected=FeatureFormatter.prototype.getSelected;GFFFeatureFormatter.prototype.getOver=FeatureFormatter.prototype.getOver;GFFFeatureFormatter.prototype.getDragging=FeatureFormatter.prototype.getDragging;
GFFFeatureFormatter.prototype.getId=FeatureFormatter.prototype.getId;GFFFeatureFormatter.prototype.toJSON=FeatureFormatter.prototype.toJSON;GFFFeatureFormatter.prototype.loadFromJSON=FeatureFormatter.prototype.loadFromJSON;GFFFeatureFormatter.prototype._setEvents=FeatureFormatter.prototype._setEvents;
function GFFFeatureFormatter(a){this.feature=a;this.start=a.start;this.end=a.end;this.label=a.label;this.args={};this.args.title={};this.args.hidden=!1;this.args.stroke="blue";this.args.strokeOpacity=1;this.args.strokeWidth=0.4;this.args.fill="purple";this.args.size=1;this.args.opacity=null!=a.score?1*a.score/1E3:0.5;this.args.fontColor="blue";FeatureFormatter.prototype.constructor.call(this,a.start,this.args)}GFFFeatureFormatter.prototype.getName=function(){return this.label};
BEDFeatureFormatter.prototype.setProperties=FeatureFormatter.prototype.setProperties;BEDFeatureFormatter.prototype.getDefault=FeatureFormatter.prototype.getDefault;BEDFeatureFormatter.prototype.getSelected=FeatureFormatter.prototype.getSelected;BEDFeatureFormatter.prototype.getOver=FeatureFormatter.prototype.getOver;BEDFeatureFormatter.prototype.getDragging=FeatureFormatter.prototype.getDragging;BEDFeatureFormatter.prototype.getId=FeatureFormatter.prototype.getId;
BEDFeatureFormatter.prototype.toJSON=FeatureFormatter.prototype.toJSON;BEDFeatureFormatter.prototype.loadFromJSON=FeatureFormatter.prototype.loadFromJSON;BEDFeatureFormatter.prototype._setEvents=FeatureFormatter.prototype._setEvents;
function BEDFeatureFormatter(a){this.feature=a;this.start=a.start;this.end=a.end;this.label=a.label;this.score=a.score;0>this.score&&(this.score=0);1E3<this.score&&(this.score=1E3);var b=Math.abs(Math.ceil(0.255*this.score)-255).toString(16);this.args={};this.args.title={};this.args.hidden=!1;this.args.strokeOpacity=1;this.args.strokeWidth=1;this.args.fill="#"+b+b+b;this.args.stroke="#000000";FeatureFormatter.prototype.constructor.call(this,a.start,this.args)}
BEDFeatureFormatter.prototype.getName=function(){return this.label};CytobandFeatureFormatter.prototype.setProperties=FeatureFormatter.prototype.setProperties;CytobandFeatureFormatter.prototype.getDefault=FeatureFormatter.prototype.getDefault;CytobandFeatureFormatter.prototype.getSelected=FeatureFormatter.prototype.getSelected;CytobandFeatureFormatter.prototype.getOver=FeatureFormatter.prototype.getOver;CytobandFeatureFormatter.prototype.getDragging=FeatureFormatter.prototype.getDragging;
CytobandFeatureFormatter.prototype.getId=FeatureFormatter.prototype.getId;CytobandFeatureFormatter.prototype.toJSON=FeatureFormatter.prototype.toJSON;CytobandFeatureFormatter.prototype.loadFromJSON=FeatureFormatter.prototype.loadFromJSON;CytobandFeatureFormatter.prototype._setEvents=FeatureFormatter.prototype._setEvents;
function CytobandFeatureFormatter(a){this.feature=a;this.start=a.start;this.end=a.end;this.label=a.cytoband;this.args={};this.args.title={};this.args.hidden=!1;this.args.stroke="#000000";this.args.strokeOpacity=0.1;this.args.strokeWidth=0.5;this.args.fill=this.getColor(a);this.args.size=1;this.args.opacity=1;this.args.fontSize=10;this.args.fontColor="blue";FeatureFormatter.prototype.constructor.call(this,a.cytoband,this.args)}
CytobandFeatureFormatter.prototype.getColor=function(a){if("gneg"==a.stain)return"white";if("stalk"==a.stain)return"#666666";if("gvar"==a.stain)return"#CCCCCC";if(-1!=a.stain.indexOf("gpos")){var b=a.stain.replace("gpos","");if(25==b)return"silver";if(50==b)return"gray";if(75==b)return"darkgray";if(100==b)return"black"}return"acen"==a.stain?"blue":"purple"};MarkerRuleFeatureFormatter.prototype.setProperties=FeatureFormatter.prototype.setProperties;MarkerRuleFeatureFormatter.prototype.getDefault=FeatureFormatter.prototype.getDefault;
MarkerRuleFeatureFormatter.prototype.getSelected=FeatureFormatter.prototype.getSelected;MarkerRuleFeatureFormatter.prototype.getOver=FeatureFormatter.prototype.getOver;MarkerRuleFeatureFormatter.prototype.getDragging=FeatureFormatter.prototype.getDragging;MarkerRuleFeatureFormatter.prototype.getId=FeatureFormatter.prototype.getId;MarkerRuleFeatureFormatter.prototype.toJSON=FeatureFormatter.prototype.toJSON;MarkerRuleFeatureFormatter.prototype.loadFromJSON=FeatureFormatter.prototype.loadFromJSON;
MarkerRuleFeatureFormatter.prototype._setEvents=FeatureFormatter.prototype._setEvents;
function MarkerRuleFeatureFormatter(a){this.start=a.start;this.end=a.end;this.label=this.start;this.isLabeled=!1;this.args={};this.args.title={};this.args.hidden=!1;this.args.stroke="#FFFFFF";this.args.strokeOpacity=0.6;this.args.strokeWidth=1;this.args.fill="black";this.args.size=1;this.args.opacity=0.1;a.label&&(this.isLabeled=!0,this.args.opacity=0.2);this.args.fontSize=10;this.args.fontColor="#FFFFFF";FeatureFormatter.prototype.constructor.call(this,a.start,this.args)}
DASFeatureFormatter.prototype.setProperties=FeatureFormatter.prototype.setProperties;DASFeatureFormatter.prototype.getDefault=FeatureFormatter.prototype.getDefault;DASFeatureFormatter.prototype.getSelected=FeatureFormatter.prototype.getSelected;DASFeatureFormatter.prototype.getOver=FeatureFormatter.prototype.getOver;DASFeatureFormatter.prototype.getDragging=FeatureFormatter.prototype.getDragging;DASFeatureFormatter.prototype.getId=FeatureFormatter.prototype.getId;
DASFeatureFormatter.prototype.toJSON=FeatureFormatter.prototype.toJSON;DASFeatureFormatter.prototype.loadFromJSON=FeatureFormatter.prototype.loadFromJSON;DASFeatureFormatter.prototype._setEvents=FeatureFormatter.prototype._setEvents;
function DASFeatureFormatter(a){this.feature=a;this.start=a.start;this.end=a.end;this.label=a.id;this.args={};this.args.title={};this.args.hidden=!1;this.args.stroke="#FFFFFF";this.args.strokeOpacity=1;this.args.strokeWidth=1;this.args.fill="purple";this.args.size=1;this.args.opacity="1";this.args.fontSize=10;FeatureFormatter.prototype.constructor.call(this,a.start,this.args)}GenericFeatureFormatter.prototype.setProperties=FeatureFormatter.prototype.setProperties;
GenericFeatureFormatter.prototype.getDefault=FeatureFormatter.prototype.getDefault;GenericFeatureFormatter.prototype.getSelected=FeatureFormatter.prototype.getSelected;GenericFeatureFormatter.prototype.getOver=FeatureFormatter.prototype.getOver;GenericFeatureFormatter.prototype.getDragging=FeatureFormatter.prototype.getDragging;GenericFeatureFormatter.prototype.getId=FeatureFormatter.prototype.getId;GenericFeatureFormatter.prototype.toJSON=FeatureFormatter.prototype.toJSON;
GenericFeatureFormatter.prototype.loadFromJSON=FeatureFormatter.prototype.loadFromJSON;GenericFeatureFormatter.prototype._setEvents=FeatureFormatter.prototype._setEvents;
function GenericFeatureFormatter(a){this.feature=a;this.start=a.start;this.end=a.end;this.label=this.getLabel(a);this.base=a.alt;this.args={};this.args.title={};this.args.hidden=!1;this.args.stroke="#000000";this.args.strokeOpacity=1;this.args.strokeWidth=0.1;this.args.fill="purple";this.args.size=1;this.args.opacity=1;FeatureFormatter.prototype.constructor.call(this,a.start,this.args)}
GenericFeatureFormatter.prototype.getLabel=function(a){return null!=a.externalName?a.externalName:null!=a.stableId?a.stableId:null!=a.name?a.name:null!=a.label?a.label:a.chromosome+":"+a.start+"-"+a.end};TfbsFeatureFormatter.prototype.setProperties=FeatureFormatter.prototype.setProperties;TfbsFeatureFormatter.prototype.getDefault=FeatureFormatter.prototype.getDefault;TfbsFeatureFormatter.prototype.getSelected=FeatureFormatter.prototype.getSelected;TfbsFeatureFormatter.prototype.getOver=FeatureFormatter.prototype.getOver;
TfbsFeatureFormatter.prototype.getDragging=FeatureFormatter.prototype.getDragging;TfbsFeatureFormatter.prototype.getId=FeatureFormatter.prototype.getId;TfbsFeatureFormatter.prototype.toJSON=FeatureFormatter.prototype.toJSON;TfbsFeatureFormatter.prototype.loadFromJSON=FeatureFormatter.prototype.loadFromJSON;TfbsFeatureFormatter.prototype._setEvents=FeatureFormatter.prototype._setEvents;
function TfbsFeatureFormatter(a){this.feature=a;this.start=a.start;this.end=a.end;this.label=this.getLabel(a);this.base=a.alt;this.args={};this.args.stroke="#000000";this.args.strokeOpacity=1;this.args.strokeWidth=0.5;this.args.fill=this.getColors()[a.cellType];this.args.opacity=1;FeatureFormatter.prototype.constructor.call(this,a.start,this.args)}TfbsFeatureFormatter.prototype.getName=function(){return this.feature.tfName};
TfbsFeatureFormatter.prototype.getLabel=function(a){return a.tfName+" ["+a.cellType+"]"};TfbsFeatureFormatter.prototype.getColors=function(){return{CD4:"38610B",GM06990:"4B8A08",GM12878:"5FB404",H1ESC:"74DF00","HeLa-S3":"80FF00",HepG2:"9AFE2E",HUVEC:"ACFA58",IMR90:"BEF781",K562:"E1F5A9",K562b:"ECF6CE",NHEK:"F1F8E0",other:"ffffff"}};MiRNAFeatureFormatter.prototype.setProperties=FeatureFormatter.prototype.setProperties;MiRNAFeatureFormatter.prototype.getDefault=FeatureFormatter.prototype.getDefault;
MiRNAFeatureFormatter.prototype.getSelected=FeatureFormatter.prototype.getSelected;MiRNAFeatureFormatter.prototype.getOver=FeatureFormatter.prototype.getOver;MiRNAFeatureFormatter.prototype.getDragging=FeatureFormatter.prototype.getDragging;MiRNAFeatureFormatter.prototype.getId=FeatureFormatter.prototype.getId;MiRNAFeatureFormatter.prototype.toJSON=FeatureFormatter.prototype.toJSON;MiRNAFeatureFormatter.prototype.loadFromJSON=FeatureFormatter.prototype.loadFromJSON;
MiRNAFeatureFormatter.prototype._setEvents=FeatureFormatter.prototype._setEvents;function MiRNAFeatureFormatter(a){console.log(a);this.feature=a;this.start=a.start;this.end=a.end;this.label=this.getLabel(a);this.base=a.alt;this.args={};this.args.title={};this.args.hidden=!1;this.args.stroke="#000000";this.args.strokeOpacity=1;this.args.strokeWidth=0.1;this.args.fill="purple";this.args.size=1;this.args.opacity=1;FeatureFormatter.prototype.constructor.call(this,a.start,this.args)}
MiRNAFeatureFormatter.prototype.getLabel=function(a){return a.mirbaseId+"["+a.geneTargetName+"]"};function GeneBlockManager(){this.data={};this.data.queues=[];this.data.queues[0]=[];this.data.transcriptQueueCount={};this.data.transcriptQueue=[]}GeneBlockManager.prototype.getGenesTrackCount=function(){return this.data.queues.length};GeneBlockManager.prototype.getFeaturesFromGeneTrackIndex=function(a){return this.data.queues[a]};GeneBlockManager.prototype.toJSON=function(){return this.data};
GeneBlockManager.prototype.init=function(a){this.data.features=a;for(var a=this.data.features,b=0;b<a.length;b++){var c=this._searchSpace(a[b],this.data.queues);this.data.queues[c].push(a[b]);null==this.data.transcriptQueue[c]&&this.data.transcriptQueue.push([]);this.data.TranscriptQueuesTest=[];for(var d=0;d<a[b].transcript.length;d++){var e={start:a[b].transcript[d].exon[0].start,end:a[b].transcript[d].exon[a[b].transcript[d].exon.length-1].end},f=this._searchSpace(e,this.data.TranscriptQueuesTest);
this.data.TranscriptQueuesTest[f].push(e);null==this.data.transcriptQueue[c][f]&&this.data.transcriptQueue[c].push([]);this.data.transcriptQueue[c][f].push(a[b].transcript[d])}}return this.data.queues[c].length};GeneBlockManager.prototype._overlapBlocks=function(a,b){return a.start<=b.end&&a.end>=b.start?!0:!1};
GeneBlockManager.prototype._searchSpace=function(a,b){for(var c=0;c<b.length;c++){for(var d=[],e=0;e<b[c].length;e++)d.push(this._overlapBlocks(a,b[c][e]));if(-1==d.valueOf(d).indexOf(!0))return c}b.push([]);return b.length-1};GeneBlockManager.prototype.loadFromJSON=DataSet.prototype.loadFromJSON;GeneBlockManager.prototype.loadFromFile=DataSet.prototype.loadFromFile;GeneBlockManager.prototype.loadFromURL=DataSet.prototype.loadFromURL;function GeneBlockManager(){this.data={}}
GeneBlockManager.prototype.getGenesTrackCount=function(){return this.data.queues.length};GeneBlockManager.prototype.getFeaturesFromGeneTrackIndex=function(a){return this.data.queues[a]};GeneBlockManager.prototype.toJSON=function(){return this.data};GeneBlockManager.prototype.validate=function(){return!0};GeneBlockManager.prototype.sort=function(a,b){return b.end-b.start-(a.end-a.start)};
GeneBlockManager.prototype.toDatasetFormatter=function(a){var b=[];try{for(var c=0;c<a.length;c++){var d=new GeneFeatureFormatter(a[c]);b.push(d);if(null!=a[c].transcript)for(var e=a[c].transcript,f=0;f<e.length;f++)null==d.transcript&&(d.transcript=[]),d.transcript.push(new TranscriptFeatureFormatter(a[c].transcript[f]))}}catch(g){alert("ERROR: GeneBlockManager: "+g)}return b};VCFFileWidget.prototype.getTitleName=FileWidget.prototype.getTitleName;VCFFileWidget.prototype.getFileUpload=FileWidget.prototype.getFileUpload;
VCFFileWidget.prototype.draw=FileWidget.prototype.draw;VCFFileWidget.prototype.sessionInitiated=FileWidget.prototype.sessionInitiated;VCFFileWidget.prototype.sessionFinished=FileWidget.prototype.sessionFinished;function VCFFileWidget(a){null==a&&(a={});a.title="VCF";a.tags=["vcf"];FileWidget.prototype.constructor.call(this,a);this.chartWidgetByChromosome=new ChartWidget;this.chartWidgetQuality=new ChartWidget({height:300})}
VCFFileWidget.prototype.getChartItems=function(){return[this.chartWidgetByChromosome.getChart(["features","chromosome"]),this.chartWidgetQuality.getChart(["features","quality"])]};VCFFileWidget.prototype.loadFileFromLocal=function(a){var b=new VCFFileDataAdapter;this._fileLoad(b);b.loadFromFile(a)};
VCFFileWidget.prototype._fileLoad=function(a){var b=this;a.onRead.addEventListener(function(a){b.dataAdapter=new VCFLocalRegionDataAdapter;b.dataAdapter.loadFromFileDataAdapter(a);var a=[],d;for(d in b.dataAdapter.featuresByChromosome)a.push({features:b.dataAdapter.featuresByChromosome[d].length,chromosome:d});d=[];for(var e in b.dataAdapter.qualitycontrol)d.push({features:b.dataAdapter.qualitycontrol[e],quality:e});b.chartWidgetByChromosome.getStore().loadData(a);b.chartWidgetQuality.getStore().loadData(d);
b.panel.setLoading(!1);b.featureCountLabel.setText("Features count: "+b.dataAdapter.features.length,!1);b.btnOk.enable()})};VCFFileWidget.prototype.loadFileFromServer=function(a){var b=new VCFFileDataAdapter;this._fileLoad(b);b.loadFromContent(a.data)};
function FileWidget(a){var b=this;this.targetId=null;this.id="FileWidget_"+Math.round(1E5*Math.random());this.wum=!0;this.tags=[];this.args=a;null!=a&&(null!=a.targetId&&(this.targetId=a.targetId),null!=a.title&&(this.title=a.title,this.id=this.title+this.id),null!=a.wum&&(this.wum=a.wum),null!=a.tags&&(this.tags=a.tags));this.dataAdapter=null;this.onOk=new Event(this);this.browserData=new BrowserDataWidget;this.browserData.onSelect.addEventListener(function(a,d){b.trackNameField.setValue(d.filename);
b.fileNameLabel.setText('<span class="emph">'+d.filename+'</span> <span class="info">(server)</span>',!1);b.panel.setLoading()});this.browserData.adapter.onReadData.addEventListener(function(a,d){b.trackNameField.setValue(d.filename);b.fileNameLabel.setText('<span class="emph">'+d.filename+'</span> <span class="info">(server)</span>',!1);b.loadFileFromServer(d)})}FileWidget.prototype.getTitleName=function(){return this.trackNameField.getValue()};FileWidget.prototype.getFileFromServer=function(){};
FileWidget.prototype.loadFileFromLocal=function(){};FileWidget.prototype.getChartItems=function(){return[]};
FileWidget.prototype.getFileUpload=function(){var a=this;return this.uploadField=Ext.create("Ext.form.field.File",{msgTarget:"side",width:75,emptyText:"Choose a local file",allowBlank:!1,buttonText:"Browse local",buttonOnly:!0,listeners:{change:{fn:function(){a.panel.setLoading();var b=document.getElementById(a.uploadField.fileInputEl.id).files[0];a.trackNameField.setValue(b.fileName);a.fileNameLabel.setText('<span class="emph">'+b.name+'</span> <span class="info">(local)</span>',!1);a.loadFileFromLocal(b)}}}})};
FileWidget.prototype.draw=function(){var a=this;if(null==this.openDialog){var b=Ext.create("Ext.toolbar.Toolbar");this.featureCountLabel=Ext.create("Ext.toolbar.TextItem",{html:'<span class="dis">No file loaded</span>'});b.add([this.featureCountLabel]);var c=Ext.create("Ext.toolbar.Toolbar",{cls:"bio-border-false"});c.add(this.getFileUpload());this.panel=Ext.create("Ext.panel.Panel",{border:!1,cls:"panel-border-top panel-border-bottom",title:"Previsualization",items:this.getChartItems(),bbar:b});
this.trackNameField=Ext.create("Ext.form.field.Text",{name:"file",fieldLabel:"Track Name",allowBlank:!1,value:"New track from "+this.title+" file",emptyText:"Choose a name",flex:1});b=Ext.create("Ext.panel.Panel",{border:!1,layout:"hbox",bodyPadding:10,items:[this.trackNameField]});this.wum&&(this.btnBrowse=Ext.create("Ext.button.Button",{text:"Browse server",disabled:!0,handler:function(){a.browserData.draw($.cookie("bioinfo_sid"),a.tags)}}),c.add(this.btnBrowse),null!=$.cookie("bioinfo_sid")?this.sessionInitiated():
this.sessionFinished());this.fileNameLabel=Ext.create("Ext.toolbar.TextItem",{html:'<span class="emph">Select a <span class="info">local</span> file or a <span class="info">server</span> file from your account.</span>'});c.add(["->",this.fileNameLabel]);this.btnOk=Ext.create("Ext.button.Button",{text:"Ok",disabled:!0,handler:function(){a.onOk.notify({title:a.getTitleName(),dataAdapter:a.dataAdapter});a.openDialog.close()}});this.openDialog=Ext.create("Ext.ux.Window",{title:"Open "+this.title+" file",
taskbar:Ext.getCmp(this.args.viewer.id+"uxTaskbar"),width:800,resizable:!1,items:[c,this.panel,b],buttons:[this.btnOk,{text:"Cancel",handler:function(){a.openDialog.close()}}],listeners:{scope:this,minimize:function(){this.openDialog.hide()},destroy:function(){delete this.openDialog}}})}this.openDialog.show()};FileWidget.prototype.sessionInitiated=function(){null!=this.btnBrowse&&this.btnBrowse.enable()};FileWidget.prototype.sessionFinished=function(){null!=this.btnBrowse&&this.btnBrowse.disable()};
GFFFileWidget.prototype.getTitleName=FileWidget.prototype.getTitleName;GFFFileWidget.prototype.getFileUpload=FileWidget.prototype.getFileUpload;GFFFileWidget.prototype.draw=FileWidget.prototype.draw;GFFFileWidget.prototype.sessionInitiated=FileWidget.prototype.sessionInitiated;GFFFileWidget.prototype.sessionFinished=FileWidget.prototype.sessionFinished;
function GFFFileWidget(a){null==a&&(a={});a.title="GFF";a.tags=["gff"];FileWidget.prototype.constructor.call(this,a);this.chartWidgetByChromosome=new ChartWidget}GFFFileWidget.prototype.getChartItems=function(){return[this.chartWidgetByChromosome.getChart(["features","chromosome"])]};GFFFileWidget.prototype.loadFileFromLocal=function(a){var b=new GFFFileDataAdapter;this._fileLoad(b);b.loadFromFile(a)};
GFFFileWidget.prototype._fileLoad=function(a){var b=this;a.onRead.addEventListener(function(a){b.dataAdapter=new GFFLocalRegionDataAdapter;b.dataAdapter.loadFromFileDataAdapter(a);var a=[],d;for(d in b.dataAdapter.featuresByChromosome)a.push({features:b.dataAdapter.featuresByChromosome[d].length,chromosome:d});b.chartWidgetByChromosome.getStore().loadData(a);b.panel.setLoading(!1);b.featureCountLabel.setText("Features count: "+b.dataAdapter.features.length,!1);b.btnOk.enable()})};
GFFFileWidget.prototype.loadFileFromServer=function(a){var b=new GFFFileDataAdapter;this._fileLoad(b);b.loadFromContent(a.data)};BEDFileWidget.prototype.getTitleName=FileWidget.prototype.getTitleName;BEDFileWidget.prototype.getFileUpload=FileWidget.prototype.getFileUpload;BEDFileWidget.prototype.draw=FileWidget.prototype.draw;BEDFileWidget.prototype.sessionInitiated=FileWidget.prototype.sessionInitiated;BEDFileWidget.prototype.sessionFinished=FileWidget.prototype.sessionFinished;
function BEDFileWidget(a){null==a&&(a={});a.title="BED";a.tags=["bed"];FileWidget.prototype.constructor.call(this,a);this.chartWidgetByChromosome=new ChartWidget}BEDFileWidget.prototype.getChartItems=function(){return[this.chartWidgetByChromosome.getChart(["features","chromosome"])]};BEDFileWidget.prototype.loadFileFromLocal=function(a){var b=new BEDFileDataAdapter;this._fileLoad(b);b.loadFromFile(a)};
BEDFileWidget.prototype._fileLoad=function(a){var b=this;a.onRead.addEventListener(function(a){b.dataAdapter=new BEDLocalRegionDataAdapter;b.dataAdapter.loadFromFileDataAdapter(a);var a=[],d;for(d in b.dataAdapter.featuresByChromosome)a.push({features:b.dataAdapter.featuresByChromosome[d].length,chromosome:d});b.chartWidgetByChromosome.getStore().loadData(a);b.panel.setLoading(!1);b.featureCountLabel.setText("Features count: "+b.dataAdapter.features.length,!1);b.btnOk.enable()})};
BEDFileWidget.prototype.loadFileFromServer=function(a){var b=new BEDFileDataAdapter;this._fileLoad(b);b.loadFromContent(a.data)};function UrlWidget(a){this.id="UrlWidget_"+Math.round(1E7*Math.random());this.targetId=null;this.title="Custom url";this.width=500;this.height=400;null!=a&&(null!=a.targetId&&(this.targetId=a.targetId),null!=a.title&&(this.title=a.title),null!=a.width&&(this.width=a.width),null!=a.height&&(this.height=a.height));this.onAdd=new Event(this)}
UrlWidget.prototype.draw=function(){null==this.panel&&this.render();this.panel.show()};
UrlWidget.prototype.render=function(){var a=this;this.urlField=Ext.create("Ext.form.field.Text",{margin:"0 2 2 0",labelWidth:30,flex:1,fieldLabel:"URL",emptyText:"enter a valid url",value:"http://www.ensembl.org/das/Homo_sapiens.GRCh37.gene/features",listeners:{change:{fn:function(){var b=this.value.split("/das/")[1].split("/")[0];a.trackNameField.setValue(b)}}}});this.checkButton=Ext.create("Ext.button.Button",{text:"Check",handler:function(){a.form.setLoading();var b=new DasRegionDataAdapter({url:a.urlField.getValue()});
b.successed.addEventListener(function(){a.contentArea.setValue(b.xml);a.form.setLoading(!1)});b.onError.addEventListener(function(){a.contentArea.setValue("XMLHttpRequest cannot load. This server is not allowed by Access-Control-Allow-Origin");a.form.setLoading(!1)});b.fill(1,1,1)}});this.trackNameField=Ext.create("Ext.form.field.Text",{name:"file",allowBlank:!1,value:a.urlField.value.split("/das/")[1].split("/")[0],emptyText:"Choose a name",flex:1});this.panelSettings=Ext.create("Ext.panel.Panel",
{layout:"hbox",border:!1,title:"Track name",cls:"panel-border-top",bodyPadding:10,items:[this.trackNameField]});this.contentArea=Ext.create("Ext.form.field.TextArea",{margin:"-1",width:this.width,height:this.height});this.infobar=Ext.create("Ext.toolbar.Toolbar",{height:28,cls:"bio-border-false"});this.infobar.add(this.urlField);this.infobar.add(this.checkButton);this.form=Ext.create("Ext.panel.Panel",{border:!1,items:[this.infobar,this.contentArea,this.panelSettings]});this.panel=Ext.create("Ext.ux.Window",
{title:this.title,layout:"fit",resizable:!1,items:[this.form],buttons:[{text:"Add",handler:function(){a.onAdd.notify({name:a.trackNameField.getValue(),url:a.urlField.getValue()});a.panel.close()}},{text:"Cancel",handler:function(){a.panel.close()}}],listeners:{destroy:function(){delete a.panel}}})};
function MasterSlaveGenomeViewer(a,b,c){this.targetId=b;this.id=a+Math.random();this.width=1300;this.masterHeight=this.slaveHeight=this.height=700;this.masterWindowSize=1E6;null!=c&&(null!=c.width&&(this.width=c.width),null!=c.height&&(this.height=c.height),null!=c.masterHeight&&(this.masterHeight=c.height),null!=c.slaveHeight&&(this.slaveHeight=c.height));this.pixelRatio=5.0E-4;this.zoomLevels=[];for(a=1;10>=a;a++)this.zoomLevels[a]=this.pixelRatio*2*a;this.zoomLevels[0.1]=this.pixelRatio;this.genomeWidget=
null;this.markerChanged=new Event(this)}MasterSlaveGenomeViewer.prototype.getZoomFactor=function(a){return this.zoomLevels[a/10]};MasterSlaveGenomeViewer.prototype.getMasterId=function(){return this.id+"_master"};MasterSlaveGenomeViewer.prototype.getSlaveId=function(){return this.id+"_slave"};MasterSlaveGenomeViewer.prototype.getMasterStart=function(){return this.position-this.masterWindowSize};MasterSlaveGenomeViewer.prototype.getMasterEnd=function(){return this.position+this.masterWindowSize};
MasterSlaveGenomeViewer.prototype.init=function(){};MasterSlaveGenomeViewer.prototype.goTo=function(a,b){this.clear();this.chromosome=a;this.position=b;this._drawMaster();this._drawSlave(this.position)};MasterSlaveGenomeViewer.prototype.zoomIn=function(){this.position=this.genomeWidget.trackCanvas.getMiddlePoint();this.pixelRatio*=1.5;this.clear();this.genomeWidget.trackCanvas._goToCoordinateX(this.position-this.genomeWidget.trackCanvas.width/2/this.pixelRatio);console.log("PIXEL RATIO "+this.pixelRatio)};
MasterSlaveGenomeViewer.prototype.zoom=function(a){this.pixelRatio=50<a?this.pixelRatio*1.5*(a/4/10):this.pixelRatio/(1.5*(a/4/10));this.pixelRatio=this.getZoomFactor(a);this.position=this.genomeWidget.trackCanvas.getMiddlePoint();this.clear();this.genomeWidget.trackCanvas._goToCoordinateX(this.position-this.genomeWidget.trackCanvas.width/2/this.pixelRatio)};
MasterSlaveGenomeViewer.prototype.zoomOut=function(){this.position=this.genomeWidget.trackCanvas.getMiddlePoint();this.pixelRatio/=1.5;this.clear();this.genomeWidget.trackCanvas._goToCoordinateX(this.position-this.genomeWidget.trackCanvas.width/2/this.pixelRatio);console.log("PIXEL RATIO "+this.pixelRatio)};MasterSlaveGenomeViewer.prototype.clear=function(){this.genomeWidget.clear();this._drawMaster()};
MasterSlaveGenomeViewer.prototype._createMaster=function(){var a=new GenomeWidget(this.id+"master",this.getMasterId(),{pixelRatio:this.pixelRatio,width:this.width,height:this.height,showTranscripts:this.showTranscripts,showExons:this.showExons,showSNPTrack:this.showSNPTrack});if(null!=this.genomeWidget){a.trackList=this.genomeWidget.trackList;a.dataAdapterList=this.genomeWidget.dataAdapterList;for(var b=0;b<a.dataAdapterList.length;b++)a.dataAdapterList.preloadSuccess=new Event,a.dataAdapterList.successed=
new Event}return a};MasterSlaveGenomeViewer.prototype._drawMaster=function(){this.genomeWidget=this._createMaster();this.genomeWidget.draw(this.chromosome,this.getMasterStart(),this.getMasterEnd());this._attachMasterEvents()};MasterSlaveGenomeViewer.prototype._attachMasterEvents=function(){var a=this;this.genomeWidget.onClick.addEventListener(function(){});this.genomeWidget.markerChanged.addEventListener(function(b,c){a.updateSlave(c);a.chromosome=a.genomeWidget.chromosome;a.position=c;a.markerChanged.notify()})};
MasterSlaveGenomeViewer.prototype.addTrackMaster=function(a,b){this.genomeWidget=this._createMaster();this.genomeWidget.addTrack(a,b);this._attachMasterEvents()};MasterSlaveGenomeViewer.prototype._drawSlave=function(a){DOM.removeChilds(this.getSlaveId());this.detailViewer=new SequenceGenomeWidget(this.id+"detail",this.getSlaveId(),{width:this.width});this.detailViewer.draw(this.chromosome,a-100,a+100)};
MasterSlaveGenomeViewer.prototype.draw=function(a,b){this.chromosome=a;this.position=b;this.init();this._drawMaster();this._drawSlave(this.position)};MasterSlaveGenomeViewer.prototype.updateSlave=function(a){this._drawSlave(a);this.detailViewer.trackCanvas._goToCoordinateX(a-this.detailViewer.trackCanvas.width/this.detailViewer.trackCanvas.pixelRatio/2)};
function KaryotypePanelWindow(a,b){var c=this;this.id="KaryotypePanelWindow_"+Math.random();this.karyotypeWidget=new KaryotypePanel(this.getKaryotypePanelId(),a,{top:10,width:1E3,height:300,trackWidth:15});this.karyotypeCellBaseDataAdapter=new KaryotypeCellBaseDataAdapter(a);this.args=b;this.onRendered=new Event;this.onMarkerChanged=new Event;this.karyotypeCellBaseDataAdapter.successed.addEventListener(function(){c.karyotypeWidget.onRendered.addEventListener(function(){c.onRendered.notify()});c.karyotypeWidget.onClick.addEventListener(function(a,
b){c.onMarkerChanged.notify(b)});c.karyotypeWidget.draw(c.karyotypeCellBaseDataAdapter.chromosomeNames,c.karyotypeCellBaseDataAdapter.dataset.json)})}KaryotypePanelWindow.prototype.select=function(a,b,c){this.karyotypeWidget.select(a,b,c)};KaryotypePanelWindow.prototype.mark=function(a){this.karyotypeWidget.mark(a)};KaryotypePanelWindow.prototype.draw=function(){null==this.panel&&this.render();this.panel.show()};
KaryotypePanelWindow.prototype.getKaryotypePanel=function(){if(null==this.karyotypePanel){var a=Ext.create("Ext.toolbar.TextItem",{html:'<span class="dis">Click on chromosome to go</span>'}),b=Ext.create("Ext.toolbar.Toolbar",{dock:"top"});b.add(a);this.karyotypePanel=Ext.create("Ext.panel.Panel",{height:350,maxHeight:350,border:!1,bodyPadding:15,padding:"0 0 0 0",html:'<div id="'+this.getKaryotypePanelId()+'" ><div>',dockedItems:[b]})}return this.karyotypePanel};
KaryotypePanelWindow.prototype.render=function(){var a=this;this.panel=Ext.create("Ext.ux.Window",{title:"Karyotype",resizable:!1,taskbar:Ext.getCmp(this.args.viewer.id+"uxTaskbar"),constrain:!0,animCollapse:!0,width:1050,height:412,minWidth:300,minHeight:200,layout:"fit",items:[this.getKaryotypePanel()],buttonAlign:"center",buttons:[{text:"Close",handler:function(){a.panel.close()}}],listeners:{destroy:function(){delete a.panel}}});this.karyotypeCellBaseDataAdapter.fill()};
KaryotypePanelWindow.prototype.getKaryotypePanelId=function(){return this.id+"_karyotypePanel"};function KaryotypePanel(a,b,c){this.id=a+Math.round(1E4*Math.random());this.targetId=a;this.species=b;this.width=500;this.height=300;null!=c&&(null!=c.height&&(this.height=c.height),null!=c.width&&(this.width=c.width),null!=c.trackWidth&&(this.trackWidth=c.trackWidth));this.onClick=new Event(this);this.onRendered=new Event(this);this.onMarkerClicked=new Event(this)}
KaryotypePanel.prototype.getTrackId=function(a){return this.id+"_track_"+a};KaryotypePanel.prototype.init=function(){this.containerTable=DOM.createNewElement("table",DOM.select(this.targetId),[["id",this.id+"_table"],["width",this.width],["height",this.height]]);tr=DOM.createNewElement("tr",this.containerTable,[["width",this.width],["style","vertical-align:bottom"]]);for(var a=0;a<this.features.length;a++)DOM.createNewElement("td",tr,[["style","vertical-align:bottom"],["id",this.getTrackId(a)]])};
KaryotypePanel.prototype.drawFeatures=function(){var a=this,b=this.width/this.features.length;this.panels={};for(var c=0;c<this.features.length;c++){var d=this.chromosomeSize[c]*this.height-10,d=new ChromosomeFeatureTrack(this.id+"chr"+this.chromosomesNames[c],document.getElementById(this.getTrackId(c)),this.species,{top:10,bottom:d,left:12,right:25,width:b,height:this.chromosomeSize[c]*this.height,labelChromosome:!0,label:!0,vertical:!0,rounded:2,backgroundcolor:"yellow"});a.panels[this.chromosomesNames[c]]=
d;var e=new DataSet;e.loadFromJSON([this.features[c]]);d.draw(e);a.panels[this.chromosomesNames[c]].click.addEventListener(function(b,c){var d=(c.end-c.start)/2+c.start;a.select(c.chromosome,d,d+2E6);a.onClick.notify(c)});a.panels[this.chromosomesNames[c]].onMarkerClicked.addEventListener(function(b,c){a.onMarkerClicked.notify(c)})}this.onRendered.notify()};
KaryotypePanel.prototype.select=function(a,b,c){for(var d=0;d<this.chromosomesNames.length;d++)this.panels[this.chromosomesNames[d]].deselect();this.panels[a].select(b,c)};KaryotypePanel.prototype.mark=function(a,b){for(var c=0;c<a.length;c++)null!=this.panels[a[c].chromosome]&&this.panels[a[c].chromosome].mark(a[c],b)};KaryotypePanel.prototype.unmark=function(){for(var a in this.panels)this.panels[a].unmark()};
KaryotypePanel.prototype.draw=function(a,b){this.features=b;this.chromosomesNames=a;this.chromosomeSize=[];for(var c=this.maxChromosomeSize=0;c<this.features.length;c++)this.chromosomeSize.push(this.features[c][this.features[c].length-1].end),this.maxChromosomeSize<this.features[c][this.features[c].length-1].end&&(this.maxChromosomeSize=this.features[c][this.features[c].length-1].end);for(c=0;c<this.features.length;c++)this.chromosomeSize[c]/=this.maxChromosomeSize;this.init();this.drawFeatures()};
function TooltipPanel(a){this.id="TooltipPanel"+Math.round(1E7*Math.random());this.targetId=null;this.width=100;this.height=60;null!=a&&(null!=a.title&&(this.title=a.title),null!=a.targetId&&(this.targetId=a.targetId),null!=a.width&&(this.width=a.width),null!=a.height&&(this.height=a.height))}TooltipPanel.prototype.getPanel=function(a){null==this.panel&&(this.panel=Ext.create("Ext.tip.Tip",{html:this._getItemInfo(a)}));return this.panel};TooltipPanel.prototype.destroy=function(){this.panel.destroy()};
TooltipPanel.prototype._getItemInfo=function(a){var b="";if(a instanceof GeneFeatureFormatter||a instanceof TranscriptFeatureFormatter||a instanceof ExonFeatureFormatter||a instanceof SNPFeatureFormatter||a instanceof TfbsFeatureFormatter)b='<span class="ssel">'+a.getName()+'</span><br>start: <span class="emph">'+a.start+'</span><br>end:  <span class="emph">'+a.end+'</span><br>length: <span class="info">'+(a.end-a.start+1)+"</span><br>";a instanceof VCFFeatureFormatter&&(b='<span class="ssel">'+a.getName()+
"</span><br>");return b};
function KaryotypeHorizontalMarkerWidget(){this.id="GV_";this.width=600;this.height=700;this.tabPanelHeight=250;this.topPanelHeight=600;this.genomeWidget=new GenomeWidget("id","container_map",{width:100,height:this.topPanelHeight});this.genomeWidgetProperties=new GenomeWidgetProperties({windowSize:1E6,pixelRatio:1.0E-5});this.genomeWidgetProperties.addTrackByZoom(100,100,new SequenceFeatureTrack(this.id+"sequence",this.tracksPanel,{top:0,left:0,right:this.width,width:this.width,height:20,featureHeight:12,
avoidOverlapping:!1,backgroundColor:"#FFFFFF"}),new RegionCellBaseDataAdapter({resource:"sequence"}));this.genomeWidgetProperties.addTrackByZoom(0,0,new CytobandFeatureTrack(this.id+"_cytoband",this.tracksPanel,{top:0,left:0,height:20,title:"Cytoband",titleFontSize:9,label:!1,featureHeight:8,opacity:1,backgroundColor:"#FFFFFF"}),new RegionCellBaseDataAdapter({resource:"cytoband"}));this.genomeWidgetProperties.addTrackByZoom(10,100,new CytobandFeatureTrack(this.id+"_cytoband",this.tracksPanel,{top:0,
left:0,height:20,title:"Cytoband",titleFontSize:9,label:!0,featureHeight:8,opacity:1,backgroundColor:"#FFFFFF"}),new RegionCellBaseDataAdapter({resource:"cytoband"}));var a=new HistogramFeatureTrack(this.id+"_multiTrack",this.tracksPanel,{top:5,left:0,height:20,featureHeight:18,queueHeight:18,title:"GENES",titleFontSize:9,showTranscripts:!1,allowDuplicates:!0,backgroundColor:"#FFFFFF",label:!1,pixelSpaceBetweenBlocks:1,showDetailGeneLabel:!1,forceColor:"blue",intervalSize:1E6});this.genomeWidgetProperties.addTrackByZoom(0,
0,a,new GeneRegionCellBaseDataAdapter({obtainTranscripts:!1}));a=new HistogramFeatureTrack(this.id+"_multiTrack",this.tracksPanel,{top:5,left:0,height:20,featureHeight:18,queueHeight:18,title:"GENES",titleFontSize:9,showTranscripts:!1,allowDuplicates:!0,backgroundColor:"#FFFFFF",label:!1,pixelSpaceBetweenBlocks:1,showDetailGeneLabel:!1,forceColor:"blue",intervalSize:1E5});this.genomeWidgetProperties.addTrackByZoom(10,10,a,new GeneRegionCellBaseDataAdapter({obtainTranscripts:!1}));this.genomeWidgetProperties.addTrackByZoom(20,
40,new MultiFeatureTrack(this.id+"_multiTrack",this.tracksPanel,{top:5,left:0,height:10,featureHeight:7,queueHeight:10,title:"GENES",titleFontSize:9,showTranscripts:!1,allowDuplicates:!1,backgroundColor:"#FFFFFF",label:!1,pixelSpaceBetweenBlocks:1,showDetailGeneLabel:!1}),new GeneRegionCellBaseDataAdapter({obtainTranscripts:!1}));this.genomeWidgetProperties.addTrackByZoom(50,60,new MultiFeatureTrack(this.id+"_multiTrack",this.tracksPanel,{top:5,left:0,height:10,featureHeight:7,queueHeight:10,title:"GENES",
titleFontSize:9,showTranscripts:!1,allowDuplicates:!1,backgroundColor:"#FFFFFF",label:!0,pixelSpaceBetweenBlocks:200,showDetailGeneLabel:!1}),new GeneRegionCellBaseDataAdapter({obtainTranscripts:!1}));this.genomeWidgetProperties.addTrackByZoom(70,90,new MultiFeatureTrack(this.id+"_multiTrack",this.tracksPanel,{top:5,left:0,height:10,featureHeight:6,queueHeight:10,title:"GENES",titleFontSize:9,labelFontSize:8,showTranscripts:!0,allowDuplicates:!1,backgroundColor:"#FFFFFF",label:!0,pixelSpaceBetweenBlocks:200,
showDetailGeneLabel:!0}),new GeneRegionCellBaseDataAdapter)}KaryotypeHorizontalMarkerWidget.prototype.draw=function(a,b){this.chromosome=a;this.position=b;var c=Ext.create("Ext.panel.Panel",{layout:"vbox",region:"center",margins:"0 0 0 5",items:[this.getTopPanel()]});Ext.create("Ext.container.Viewport",{layout:"border",items:[c]});this._drawMasterKaryotypeHorizontalMarkerWidget(this.chromosome,this.position-this.genomeWidgetProperties.windowSize,this.position+this.genomeWidgetProperties.windowSize)};
KaryotypeHorizontalMarkerWidget.prototype.getMasterId=function(){return this.id+"_master"};KaryotypeHorizontalMarkerWidget.prototype.zoom=function(){this.position=this.genomeWidget.getMiddlePoint();this.refreshMasterKaryotypeHorizontalMarkerWidget();this.genomeWidget.trackCanvas._goToCoordinateX(this.position-this.genomeWidget.trackCanvas.width/2/this.genomeWidgetProperties.getPixelRatio())};KaryotypeHorizontalMarkerWidget.prototype.goTo=function(a,b){this.chromosome=a;this.position=b;this.refreshMasterKaryotypeHorizontalMarkerWidget()};
KaryotypeHorizontalMarkerWidget.prototype.refreshMasterKaryotypeHorizontalMarkerWidget=function(){this.genomeWidget.clear();this._drawMasterKaryotypeHorizontalMarkerWidget()};KaryotypeHorizontalMarkerWidget.prototype.addMasterTrack=function(a,b){this.genomeWidgetProperties.getCustomTracks().push(a);this.genomeWidgetProperties.getCustomDataAdapters().push(b);this._drawMasterKaryotypeHorizontalMarkerWidget()};
KaryotypeHorizontalMarkerWidget.prototype._drawMasterKaryotypeHorizontalMarkerWidget=function(){this.genomeWidget=new GenomeWidget(this.id+"master",this.getMasterId(),{pixelRatio:2.0E-6,width:this.width,height:this.height});for(var a=0;a<this.genomeWidgetProperties.getCustomTracks().length;a++)this.genomeWidgetProperties.getCustomTracks()[a].top=this.genomeWidgetProperties.getCustomTracks()[a].originalTop,this.genomeWidgetProperties.getCustomTracks()[a].height=this.genomeWidgetProperties.getCustomTracks()[a].originalHeight,
this.genomeWidgetProperties.getCustomTracks()[a].clear(),this.genomeWidgetProperties.getCustomDataAdapters()[a].datasets={},this.genomeWidget.addTrack(this.genomeWidgetProperties.getCustomTracks()[a],this.genomeWidgetProperties.getCustomDataAdapters()[a]);for(var b=this.genomeWidgetProperties.getZoom(),a=0;a<this.genomeWidgetProperties.getTrackByZoom(b).length;a++){var c=this.genomeWidgetProperties.getTrackByZoom(b)[a];c.top=c.originalTop;c.height=c.originalHeight;c.clear();this.genomeWidgetProperties.getDataAdapterByZoom(b)[a].datasets=
{};this.genomeWidget.addTrack(c,this.genomeWidgetProperties.getDataAdapterByZoom(b)[a])}a=Math.ceil(this.position-this.genomeWidgetProperties.windowSize);b=Math.ceil(this.position+this.genomeWidgetProperties.windowSize);0>a&&(a=0);this.genomeWidget.draw(this.chromosome,a,b)};KaryotypeHorizontalMarkerWidget.prototype.getTopPanel=function(){return Ext.create("Ext.panel.Panel",{width:this.width,height:this.topPanelHeight,margins:"0 5 2 5",html:'<div id = "'+this.getMasterId()+'"></div>'})};
function GenomeWidgetProperties(a,b){this.args=b;this.species=a;this.windowSize=1E7;this.minWindowSize=100;this.maxWindowSize=1E8;this._pixelRatio=5.0E-4;this.showTranscripts=!1;this._zoom=0;this.labelSize=this.labelHeight=10;this.featureHeight=4;null!=b&&(null!=b.windowSize&&(this.windowSize=b.windowSize),null!=b.id&&(this.id=b.id),null!=b._pixelRatio&&(this._pixelRatio=b._pixelRatio),null!=b.showTrancsripts&&(this.showTrancsripts=b.showTranscripts),null!=b.showExons&&(this.showExons=b.showExons));
this._zoomLevels={};this._windowSizeLevels={};this._zoomTracks={};this._zoomDataAdapters={};for(var c=0;100>=c;c+=10)this._zoomTracks[c]=[],this._zoomDataAdapters[c]=[];this.tracks={};this.customTracks=[];this.customDataAdapters=[];this.init()}GenomeWidgetProperties.prototype.getWindowSize=function(a){return this._windowSizeLevels[a]};
GenomeWidgetProperties.prototype.init=function(){this._zoomLevels[0]=5.0E-6;this._zoomLevels[10]=2.0E-5;this._zoomLevels[20]=8.0E-4;this._zoomLevels[30]=8.0E-4;this._zoomLevels[40]=0.0032;this._zoomLevels[50]=0.0064;this._zoomLevels[60]=0.0128;this._zoomLevels[70]=0.0256;this._zoomLevels[80]=0.0512;this._zoomLevels[90]=0.1024;this._zoomLevels[100]=10;this._windowSizeLevels[0]=13E7;this._windowSizeLevels[10]=4E7;this._windowSizeLevels[20]=75E4;this._windowSizeLevels[30]=75E4;this._windowSizeLevels[40]=
187500;this._windowSizeLevels[50]=93750;this._windowSizeLevels[60]=46875;this._windowSizeLevels[70]=23437.5;this._windowSizeLevels[80]=11718.75;this._windowSizeLevels[90]=5859.375;this._windowSizeLevels[100]=100;this._zoom=40;this._pixelRatio=this._zoomLevels[this._zoom];this.windowSize=this._windowSizeLevels[this._zoom];for(var a=0;100>=a;a+=10){var b=new RuleFeatureTrack(this.id+"_ruleTrack",this.tracksPanel,this.species,{top:10,left:0,height:20,expandRuleHeight:1500,labelHeight:this.labelHeight,
featureHeight:this.featureHeight,floating:!0});this.addTrackByZoom(a,a,b,new RuleRegionDataAdapter({pixelRatio:this._zoomLevels[a]}))}this.addNativeTracks()};GenomeWidgetProperties.prototype.setLabelHeight=function(a){for(var b in this._zoomTracks)for(var c=this._zoomTracks[b],d=0;d<c.length;d++)c[d].labelHeight=a,c[d].labelSize=a};
GenomeWidgetProperties.prototype.addCustomTrackByZoom=function(a,b,c,d){c.titleWidth=5<c.titleName.length?5*c.titleName.length:25;this.customTracks.push(c);!1==c instanceof HistogramFeatureTrack&&!1==c instanceof SNPFeatureTrack&&(c.labelHeight=this.labelHeight,c.featureHeight=this.featureHeight);this.addTrackByZoom(a,b,c,d)};GenomeWidgetProperties.prototype.addTrackByZoom=function(a,b,c,d){for(null==this.tracks[c.titleName]&&(this.tracks[c.titleName]=!0);a<=b;a+=10)this._zoomTracks[a].push(c),this._zoomDataAdapters[a].push(d)};
GenomeWidgetProperties.prototype.getTrackByZoom=function(a){for(var b=[],c=0;c<this._zoomTracks[a].length;c++)!0==this.tracks[this._zoomTracks[a][c].titleName]&&b.push(this._zoomTracks[a][c]);return b};GenomeWidgetProperties.prototype.getDataAdapterByZoom=function(a){for(var b=[],c=0;c<this._zoomTracks[a].length;c++)!0==this.tracks[this._zoomTracks[a][c].titleName]&&b.push(this._zoomDataAdapters[a][c]);return b};GenomeWidgetProperties.prototype.getPixelRatio=function(){return this._zoomLevels[this.getZoom()]};
GenomeWidgetProperties.prototype.setZoom=function(a){this._zoom=a;this._pixelRatio=this.getPixelRatioByZoomLevel(this.getZoom());this.windowSize=this._windowSizeLevels[a]};GenomeWidgetProperties.prototype.getZoom=function(){return this._zoom};GenomeWidgetProperties.prototype.getPixelRatioByZoomLevel=function(a){return 100==a?10:this._zoomLevels[a]};GenomeWidgetProperties.prototype.getCustomTracks=function(){return this.customTracks};GenomeWidgetProperties.prototype.getCustomDataAdapters=function(){return this.customDataAdapters};
GenomeWidgetProperties.prototype.addNativeTracks=function(){this.addSequenceTracks();this.addSNPTracks();this.addCytobandTracks();this.addMultifeatureTracks();this.addTFBSTracks();this.addHistoneTracks();this.addPolymeraseTracks();this.addOpenChromatinTracks();this.addMirnaTargetTracks();this.addConservedRegionsTracks();this.tracks.SNP=!1;this.tracks.Sequence=!1;this.tracks.Cytoband=!1;this.tracks.Histone=!1;this.tracks["Open Chromatin"]=!1;this.tracks.Polymerase=!1;this.tracks.TFBS=!1;this.tracks["miRNA targets"]=
!1;this.tracks["Conserved regions"]=!1};
GenomeWidgetProperties.prototype.addSNPTracks=function(){var a=new SNPFeatureTrack(this.id+"snp",this.tracksPanel,this.species,{top:5,left:0,label:!0,title:"SNP",height:20,isAvalaible:!1});this.addTrackByZoom(0,80,a,new RegionCellBaseDataAdapter(this.species,{resource:"snp"}));a=new SNPFeatureTrack(this.id+"snp",this.tracksPanel,this.species,{top:5,left:0,label:!1,title:"SNP",height:20,labelHeight:this.labelHeight,featureHeight:10,labelSize:this.labelSize,pixelSpaceBetweenBlocks:150,avoidOverlapping:!1,
backgroundColor:"#FFFFFF"});this.addTrackByZoom(90,90,a,new RegionCellBaseDataAdapter(this.species,{resource:"snp"}));a=new SNPFeatureTrack(this.id+"snp",this.tracksPanel,this.species,{top:5,left:0,label:!0,title:"SNP",height:20,labelHeight:this.labelHeight,featureHeight:10,labelSize:this.labelSize,pixelSpaceBetweenBlocks:150,avoidOverlapping:!0,backgroundColor:"#FFFFFF"});this.addTrackByZoom(100,100,a,new RegionCellBaseDataAdapter(this.species,{resource:"snp"}))};
GenomeWidgetProperties.prototype.addSequenceTracks=function(){var a=new SequenceFeatureTrack(this.id+"sequence",this.tracksPanel,this.species,{top:20,title:"Sequence",height:15,featureHeight:12,avoidOverlapping:!1,backgroundColor:"#FFFFFF",isAvalaible:!1});this.addTrackByZoom(0,90,a,new RegionCellBaseDataAdapter(this.species));a=new SequenceFeatureTrack(this.id+"sequence",this.tracksPanel,this.species,{top:20,title:"Sequence",height:15,featureHeight:12,avoidOverlapping:!1,backgroundColor:"#FFFFFF"});
this.addTrackByZoom(100,100,a,new RegionCellBaseDataAdapter(this.species,{resource:"sequence"}))};
GenomeWidgetProperties.prototype.addCytobandTracks=function(){this.addTrackByZoom(0,0,new FeatureTrack(this.id+"_cytoband",this.tracksPanel,this.species,{top:10,height:20,labelHeight:this.labelHeight,featureHeight:this.featureHeight,labelSize:this.labelSize,title:"Cytoband",allowDuplicates:!0,label:!1}),new RegionCellBaseDataAdapter(this.species,{resource:"cytoband"}));this.addTrackByZoom(10,100,new FeatureTrack(this.id+"_cytoband",this.tracksPanel,this.species,{top:10,height:20,labelHeight:this.labelHeight,
featureHeight:this.featureHeight,labelSize:this.labelSize,title:"Cytoband",allowDuplicates:!0,label:!0}),new RegionCellBaseDataAdapter(this.species,{resource:"cytoband"}))};
GenomeWidgetProperties.prototype.addMirnaTargetTracks=function(){var a=new FeatureTrack(this.id+"_tfbs",this.tracksPanel,this.species,{top:10,height:20,labelHeight:this.labelHeight,featureHeight:this.featureHeight,labelSize:this.labelSize,title:"miRNA targets",allowDuplicates:!1,label:!1,pixelSpaceBetweenBlocks:0,avoidOverlapping:!0,isAvalaible:!1});this.addTrackByZoom(0,70,a,new RegionCellBaseDataAdapter(this.species,{resource:"mirnatarget"}));a=new FeatureTrack(this.id+"_tfbs",this.tracksPanel,
this.species,{top:10,height:20,labelHeight:this.labelHeight,featureHeight:this.featureHeight,labelSize:this.labelSize,title:"miRNA targets",allowDuplicates:!1,label:!0,pixelSpaceBetweenBlocks:100,avoidOverlapping:!0,showLabelsOnMiddleMarker:!0});this.addTrackByZoom(80,100,a,new RegionCellBaseDataAdapter(this.species,{resource:"mirnatarget"}))};
GenomeWidgetProperties.prototype.addOpenChromatinTracks=function(){var a=new HistogramFeatureTrack(this.id+"_multiTrack",this.tracksPanel,this.species,{top:20,left:0,height:20,featureHeight:18,title:"Open Chromatin",titleFontSize:9,titleWidth:70,showTranscripts:!1,allowDuplicates:!0,backgroundColor:"#FFFFFF",label:!1,pixelSpaceBetweenBlocks:1,showDetailGeneLabel:!1,forceColor:"#298A08",intervalSize:5E5});this.addTrackByZoom(0,0,a,new RegionCellBaseDataAdapter(this.species,{resource:"regulatory?type=open chromatin"}));
a=new HistogramFeatureTrack(this.id+"_multiTrack",this.tracksPanel,this.species,{top:20,left:0,height:20,featureHeight:18,title:"Open Chromatin",titleFontSize:9,titleWidth:70,showTranscripts:!1,allowDuplicates:!0,backgroundColor:"#FFFFFF",label:!1,pixelSpaceBetweenBlocks:1,showDetailGeneLabel:!1,forceColor:"#298A08",intervalSize:25E4});this.addTrackByZoom(10,10,a,new RegionCellBaseDataAdapter(this.species,{resource:"regulatory?type=open chromatin"}));a=new HistogramFeatureTrack(this.id+"_multiTrack",
this.tracksPanel,this.species,{top:20,left:0,height:20,featureHeight:18,title:"Open Chromatin",titleFontSize:9,titleWidth:100,backgroundColor:"#FFFFFF",label:!1,pixelSpaceBetweenBlocks:1,forceColor:"#298A08",intervalSize:7812.5});this.addTrackByZoom(20,20,a,new RegionCellBaseDataAdapter(this.species,{resource:"regulatory?type=open chromatin"}));a=new FeatureTrack(this.id+"_tfbs",this.tracksPanel,this.species,{top:10,height:20,labelHeight:this.labelHeight,featureHeight:this.featureHeight,labelSize:this.labelSize,
title:"Open Chromatin",allowDuplicates:!0,label:!1,pixelSpaceBetweenBlocks:0,avoidOverlapping:!0});this.addTrackByZoom(30,90,a,new RegionCellBaseDataAdapter(this.species,{resource:"regulatory?type=open chromatin"}));a=new FeatureTrack(this.id+"_tfbs",this.tracksPanel,this.species,{top:10,height:20,labelHeight:this.labelHeight,featureHeight:this.featureHeight,labelSize:this.labelSize,title:"Open Chromatin",allowDuplicates:!0,label:!0,pixelSpaceBetweenBlocks:100,avoidOverlapping:!0,showLabelsOnMiddleMarker:!0});
this.addTrackByZoom(100,100,a,new RegionCellBaseDataAdapter(this.species,{resource:"regulatory?type=open chromatin"}))};
GenomeWidgetProperties.prototype.addPolymeraseTracks=function(){var a=new HistogramFeatureTrack(this.id+"_multiTrack",this.tracksPanel,this.species,{top:20,left:0,height:20,featureHeight:18,title:"Polymerase",titleFontSize:9,titleWidth:70,showTranscripts:!1,allowDuplicates:!0,backgroundColor:"#FFFFFF",label:!1,pixelSpaceBetweenBlocks:1,showDetailGeneLabel:!1,forceColor:"#298A08",intervalSize:5E5});this.addTrackByZoom(0,0,a,new RegionCellBaseDataAdapter(this.species,{resource:"regulatory?type=Polymerase"}));
a=new HistogramFeatureTrack(this.id+"_multiTrack",this.tracksPanel,this.species,{top:20,left:0,height:20,featureHeight:18,title:"Polymerase",titleFontSize:9,titleWidth:70,showTranscripts:!1,allowDuplicates:!0,backgroundColor:"#FFFFFF",label:!1,pixelSpaceBetweenBlocks:1,showDetailGeneLabel:!1,forceColor:"#298A08",intervalSize:25E4});this.addTrackByZoom(10,10,a,new RegionCellBaseDataAdapter(this.species,{resource:"regulatory?type=Polymerase"}));a=new HistogramFeatureTrack(this.id+"_multiTrack",this.tracksPanel,
this.species,{top:20,left:0,height:20,featureHeight:18,title:"Polymerase",titleFontSize:9,titleWidth:70,backgroundColor:"#FFFFFF",label:!1,pixelSpaceBetweenBlocks:1,forceColor:"#298A08",intervalSize:7812.5});this.addTrackByZoom(20,20,a,new RegionCellBaseDataAdapter(this.species,{resource:"regulatory?type=Polymerase"}));a=new FeatureTrack(this.id+"_tfbs",this.tracksPanel,this.species,{top:10,height:20,labelHeight:this.labelHeight,featureHeight:this.featureHeight,labelSize:this.labelSize,title:"Polymerase",
allowDuplicates:!0,label:!1,pixelSpaceBetweenBlocks:0,avoidOverlapping:!0});this.addTrackByZoom(30,90,a,new RegionCellBaseDataAdapter(this.species,{resource:"regulatory?type=Polymerase"}));a=new FeatureTrack(this.id+"_tfbs",this.tracksPanel,this.species,{top:10,height:20,labelHeight:this.labelHeight,featureHeight:this.featureHeight,labelSize:this.labelSize,title:"Polymerase",allowDuplicates:!0,label:!0,pixelSpaceBetweenBlocks:100,avoidOverlapping:!0});this.addTrackByZoom(100,100,a,new RegionCellBaseDataAdapter(this.species,
{resource:"regulatory?type=Polymerase"}))};
GenomeWidgetProperties.prototype.addHistoneTracks=function(){var a=new HistogramFeatureTrack(this.id+"_multiTrack",this.tracksPanel,this.species,{top:20,left:0,height:40,featureHeight:40,title:"Histone",titleFontSize:9,titleWidth:70,showTranscripts:!1,allowDuplicates:!0,backgroundColor:"#FFFFFF",label:!1,pixelSpaceBetweenBlocks:1,showDetailGeneLabel:!1,forceColor:"#298A08"});this.addTrackByZoom(0,0,a,new RegionCellBaseDataAdapter(this.species,{resource:"regulatory?type=HISTONE&histogram=true&interval=250000"}));a=
new HistogramFeatureTrack(this.id+"_multiTrack",this.tracksPanel,this.species,{top:20,left:0,height:40,featureHeight:40,title:"Histone",titleFontSize:9,titleWidth:70,showTranscripts:!1,allowDuplicates:!0,backgroundColor:"#FFFFFF",label:!1,pixelSpaceBetweenBlocks:1,showDetailGeneLabel:!1,forceColor:"#298A08",intervalSize:25E4});this.addTrackByZoom(10,10,a,new RegionCellBaseDataAdapter(this.species,{resource:"regulatory?type=HISTONE&histogram=true&interval=125000"}));a=new HistogramFeatureTrack(this.id+
"_multiTrack",this.tracksPanel,this.species,{top:20,left:0,height:20,featureHeight:18,title:"Histone",titleFontSize:9,titleWidth:70,backgroundColor:"#FFFFFF",label:!1,pixelSpaceBetweenBlocks:1,forceColor:"#298A08",intervalSize:7812.5});this.addTrackByZoom(20,20,a,new RegionCellBaseDataAdapter(this.species,{resource:"regulatory?type=HISTONE"}));a=new FeatureTrack(this.id+"_tfbs",this.tracksPanel,this.species,{top:10,height:20,labelHeight:this.labelHeight,featureHeight:this.featureHeight,labelSize:this.labelSize,
title:"Histone",allowDuplicates:!0,label:!1,pixelSpaceBetweenBlocks:0,avoidOverlapping:!0});this.addTrackByZoom(30,90,a,new RegionCellBaseDataAdapter(this.species,{resource:"regulatory?type=HISTONE"}));a=new FeatureTrack(this.id+"_tfbs",this.tracksPanel,this.species,{top:10,height:20,labelHeight:this.labelHeight,featureHeight:this.featureHeight,labelSize:this.labelSize,title:"Histone",allowDuplicates:!0,label:!0,pixelSpaceBetweenBlocks:100,avoidOverlapping:!0});this.addTrackByZoom(100,100,a,new RegionCellBaseDataAdapter(this.species,
{resource:"regulatory?type=HISTONE"}))};
GenomeWidgetProperties.prototype.addTFBSTracks=function(){var a=new HistogramFeatureTrack(this.id+"_multiTrack",this.tracksPanel,this.species,{top:20,left:0,height:20,featureHeight:18,title:"TFBS",titleFontSize:9,titleWidth:70,showTranscripts:!1,allowDuplicates:!0,backgroundColor:"#FFFFFF",label:!1,pixelSpaceBetweenBlocks:1,showDetailGeneLabel:!1,forceColor:"#298A08",intervalSize:5E5});this.addTrackByZoom(0,0,a,new RegionCellBaseDataAdapter(this.species,{resource:"tfbs"}));a=new HistogramFeatureTrack(this.id+
"_multiTrack",this.tracksPanel,this.species,{top:20,left:0,height:20,featureHeight:18,title:"TFBS",titleFontSize:9,titleWidth:70,showTranscripts:!1,allowDuplicates:!0,backgroundColor:"#FFFFFF",label:!1,pixelSpaceBetweenBlocks:1,showDetailGeneLabel:!1,forceColor:"#298A08",intervalSize:25E4});this.addTrackByZoom(10,10,a,new RegionCellBaseDataAdapter(this.species,{resource:"tfbs"}));a=new HistogramFeatureTrack(this.id+"_multiTrack",this.tracksPanel,this.species,{top:20,left:0,height:20,featureHeight:18,
title:"TFBS",titleFontSize:9,titleWidth:70,backgroundColor:"#FFFFFF",label:!1,pixelSpaceBetweenBlocks:1,forceColor:"#298A08",intervalSize:7812.5});this.addTrackByZoom(20,20,a,new RegionCellBaseDataAdapter(this.species,{resource:"tfbs"}));a=new FeatureTrack(this.id+"_tfbs",this.tracksPanel,this.species,{top:10,height:20,labelHeight:this.labelHeight,featureHeight:this.featureHeight,labelSize:this.labelSize,title:"TFBS",allowDuplicates:!0,label:!1,pixelSpaceBetweenBlocks:0,avoidOverlapping:!0});this.addTrackByZoom(30,
90,a,new RegionCellBaseDataAdapter(this.species,{resource:"tfbs"}));a=new FeatureTrack(this.id+"_tfbs",this.tracksPanel,this.species,{top:10,height:20,labelHeight:this.labelHeight,featureHeight:this.featureHeight,labelSize:this.labelSize,title:"TFBS",allowDuplicates:!0,label:!0,pixelSpaceBetweenBlocks:100,avoidOverlapping:!0});this.addTrackByZoom(100,100,a,new RegionCellBaseDataAdapter(this.species,{resource:"tfbs"}))};
GenomeWidgetProperties.prototype.addConservedRegionsTracks=function(){var a=new FeatureTrack(this.id+"_conservedregion",this.tracksPanel,this.species,{top:10,height:20,labelHeight:this.labelHeight,featureHeight:this.featureHeight,labelSize:this.labelSize,allowDuplicates:!0,label:!1,titleWidth:92,pixelSpaceBetweenBlocks:0,avoidOverlapping:!0,title:"Conserved regions"});this.addTrackByZoom(0,50,a,new RegionCellBaseDataAdapter(this.species,{resource:"conservedregion"}));a=new FeatureTrack(this.id+"_conservedregion",
this.tracksPanel,this.species,{top:10,height:20,labelHeight:this.labelHeight,featureHeight:this.featureHeight,labelSize:this.labelSize,allowDuplicates:!0,label:!0,titleWidth:92,pixelSpaceBetweenBlocks:0,avoidOverlapping:!0,title:"Conserved regions"});this.addTrackByZoom(60,100,a,new RegionCellBaseDataAdapter(this.species,{resource:"conservedregion"}))};
GenomeWidgetProperties.prototype.addMultifeatureTracks=function(){this.addTrackByZoom(0,10,new HistogramFeatureTrack(this.id+"_multiTrack",this.tracksPanel,this.species,{top:20,left:0,height:40,featureHeight:40,title:"Gene/Transcript",titleFontSize:9,titleWidth:70,showTranscripts:!1,allowDuplicates:!0,backgroundColor:"#FFFFFF",label:!1,pixelSpaceBetweenBlocks:1,showDetailGeneLabel:!1,forceColor:"blue"}),new RegionCellBaseDataAdapter(this.species,{resource:"gene?histogram=true&interval=250000"}));
var a=new MultiFeatureTrack(this.id+"_multiTrack",this.tracksPanel,this.species,{top:20,left:0,height:10,labelHeight:this.labelHeight,featureHeight:this.featureHeight,labelSize:this.labelSize,title:"Gene/Transcript",titleWidth:70,titleFontSize:9,showTranscripts:!1,allowDuplicates:!1,backgroundColor:"#FFFFFF",label:!1,pixelSpaceBetweenBlocks:1,showDetailGeneLabel:!1,isAvalaible:!0});this.addTrackByZoom(20,20,a,new GeneRegionCellBaseDataAdapter(this.species,{obtainTranscripts:!1}));a=new MultiFeatureTrack(this.id+
"_multiTrack",this.tracksPanel,this.species,{top:20,left:0,height:10,labelHeight:this.labelHeight,featureHeight:this.featureHeight,labelSize:this.labelSize,title:"Gene/Transcript",titleWidth:70,titleFontSize:9,showTranscripts:!1,allowDuplicates:!1,backgroundColor:"#FFFFFF",label:!0,pixelSpaceBetweenBlocks:7*this.labelSize,showDetailGeneLabel:!1,isAvalaible:!0});this.addTrackByZoom(30,40,a,new GeneRegionCellBaseDataAdapter(this.species,{obtainTranscripts:!1}));this.addTrackByZoom(50,60,new MultiFeatureTrack(this.id+
"_multiTrack",this.tracksPanel,this.species,{top:20,left:0,height:10,labelHeight:this.labelHeight,featureHeight:this.featureHeight,labelSize:this.labelSize,title:"Gene/Transcript",titleFontSize:9,titleWidth:70,showTranscripts:!1,allowDuplicates:!1,backgroundColor:"#FFFFFF",label:!0,pixelSpaceBetweenBlocks:200,showDetailGeneLabel:!0}),new GeneRegionCellBaseDataAdapter(this.species,{obtainTranscripts:!1}));a=new MultiFeatureTrack(this.id+"_multiTrack",this.tracksPanel,this.species,{top:20,left:0,height:10,
labelHeight:this.labelHeight,featureHeight:this.featureHeight,labelSize:this.labelSize,title:"Gene/Transcript",titleWidth:70,titleFontSize:9,showTranscripts:!0,showExonLabel:!1,allowDuplicates:!1,backgroundColor:"#FFFFFF",label:!0,pixelSpaceBetweenBlocks:200,showDetailGeneLabel:!0});this.addTrackByZoom(70,70,a,new GeneRegionCellBaseDataAdapter(this.species,{obtainTranscripts:!0}));a=new MultiFeatureTrack(this.id+"_multiTrack",this.tracksPanel,this.species,{top:20,left:0,height:10,labelHeight:this.labelHeight,
featureHeight:this.featureHeight,labelSize:this.labelSize,title:"Gene/Transcript",titleWidth:70,titleFontSize:9,showTranscripts:!0,showExonLabel:!1,allowDuplicates:!1,backgroundColor:"#FFFFFF",label:!0,pixelSpaceBetweenBlocks:200,showDetailGeneLabel:!0});this.addTrackByZoom(80,80,a,new GeneRegionCellBaseDataAdapter(this.species,{obtainTranscripts:!0}));a=new MultiFeatureTrack(this.id+"_multiTrack",this.tracksPanel,this.species,{top:10,left:0,height:10,labelHeight:this.labelHeight,featureHeight:this.featureHeight,
labelSize:this.labelSize,title:"Gene/Transcript",titleWidth:70,titleFontSize:9,labelFontSize:8,showTranscripts:!0,allowDuplicates:!1,backgroundColor:"#FFFFFF",label:!0,pixelSpaceBetweenBlocks:200,showDetailGeneLabel:!0});this.addTrackByZoom(90,90,a,new GeneRegionCellBaseDataAdapter(this.species));a=new MultiFeatureTrack(this.id+"_multiTrack",this.tracksPanel,this.species,{top:10,left:0,height:10,labelHeight:this.labelHeight,featureHeight:this.featureHeight,labelSize:this.labelSize,title:"Gene/Transcript",
titleWidth:70,titleFontSize:9,labelFontSize:8,showTranscripts:!0,allowDuplicates:!1,backgroundColor:"#FFFFFF",label:!0,pixelSpaceBetweenBlocks:200,showDetailGeneLabel:!0,showLabelsOnMiddleMarker:!0,showExonLabel:!0,onMouseOverShitExonTranscriptLabel:!0});this.addTrackByZoom(100,100,a,new GeneRegionCellBaseDataAdapter(this.species))};
function GenomeWidget(a,b,c){this.id=a;this.targetId=b;this.pixelRatio=0.0010;this.width=100;this.height=500;this.end=this.start=this.chromosome=null;this.viewBoxModule=7E6;this.allowDragging=!0;null!=c&&(null!=c.width&&(this.width=c.width),null!=c.height&&(this.height=c.height),null!=c.pixelRatio&&(this.pixelRatio=c.pixelRatio),null!=c.viewBoxModule&&(this.viewBoxModule=c.viewBoxModule),null!=c.allowDragging&&(this.allowDragging=c.allowDragging));this.trackList=[];this.dataAdapterList=[];this.trackCanvas=
null;this.onMarkerChange=new Event(this);this.onClick=new Event(this);this.onRender=new Event(this);this.onMove=new Event(this)}GenomeWidget.prototype.clear=function(){this.trackCanvas.clear()};GenomeWidget.prototype.init=function(){DOM.removeChilds(this.targetId);this.tracksPanel=DOM.createNewElement("div",document.getElementById(this.targetId),[["id","detail_tracks_container"]])};
GenomeWidget.prototype.getviewBoxModule=function(){for(var a=this.viewBoxModule,b=2E6;this.end*this.pixelRatio%a<this.start*this.pixelRatio%a;)b+=b,a=parseFloat(a)+b;return a};GenomeWidget.prototype.getMiddlePoint=function(){return this.trackCanvas.getMiddlePoint()};GenomeWidget.prototype.addTrack=function(a,b){this.trackList.push(a);this.dataAdapterList.push(b)};
GenomeWidget.prototype.draw=function(a,b,c){this.chromosome=a;this.start=b;this.end=c;var d=this;this.init();this.trackCanvas=new TrackCanvas(this.id+"_canvas",document.getElementById(this.targetId),{top:0,left:0,right:this.width,width:this.width,height:this.height,start:this.start,end:this.end,backgroundColor:"#FFCCFF",pixelRatio:this.pixelRatio,viewBoxModule:this.getviewBoxModule(),allowDragging:this.allowDragging});this.trackCanvas.init();this.trackCanvas.afterDrag.addEventListener(function(){});
this.trackCanvas.onMove.addEventListener(function(a,b){d.onMarkerChange.notify(b)});for(a=0;a<this.trackList.length;a++)this.trackList[a].viewBoxModule=this.getviewBoxModule(),this.trackList[a].pixelRatio=this.pixelRatio,this.trackList[a].targetID=document.getElementById(this.targetId),this.trackCanvas.addTrack(this.trackList[a],this.dataAdapterList[a]);d=this;this.trackCanvas.onRender.addEventListener(function(){d.onRender.notify()});this.trackCanvas.draw(this.chromosome,this.start,this.end)};
function LegendPanel(a){this.width=200;this.height=250;null!=a&&(null!=a.title&&(this.title=a.title),null!=a.targetId&&(this.targetId=a.targetId),null!=a.width&&(this.width=a.width),null!=a.height&&(this.height=a.height))}
LegendPanel.prototype.getColorItems=function(a){panelsArray=[];for(var b in a){var c=Ext.create("Ext.draw.Component",{width:15,height:15,items:[{type:"rect",fill:a[b],x:0,y:0,width:15,height:15}]}),d=b.replace(/_/gi," "),d=d.charAt(0).toUpperCase()+d.slice(1),c=Ext.create("Ext.panel.Panel",{height:15,border:!1,flex:1,margin:"1 0 0 1",layout:{type:"hbox",align:"stretch"},items:[c,{xtype:"tbtext",text:d,margin:"1 0 0 3"}]});panelsArray.push(c)}return panelsArray};
LegendPanel.prototype.getPanel=function(a){null==this.panel&&(a=this.getColorItems(a),this.panel=Ext.create("Ext.panel.Panel",{bodyPadding:"0 0 0 2",border:!1,layout:{type:"vbox",align:"stretch"},items:a,width:this.width,height:20*a.length}));return this.panel};LegendPanel.prototype.getButton=function(a){null==this.button&&(this.button=Ext.create("Ext.button.Button",{text:this.title,menu:{items:[this.getPanel(a)]}}));return this.button};
function LegendWidget(a){this.height=this.width=300;this.title="Legend";null!=a&&(null!=a.title&&(this.title=a.title),null!=a.targetId&&(this.targetId=a.targetId),null!=a.width&&(this.width=a.width),null!=a.height&&(this.height=a.height));this.legendPanel=new LegendPanel}
LegendWidget.prototype.draw=function(a){var b=this;null==this.panel&&(a=this.legendPanel.getPanel(a),this.panel=Ext.create("Ext.ux.Window",{title:this.title,resizable:!1,constrain:!0,closable:!0,width:a.width+10,height:a.height+70,items:[a],buttonAlign:"right",layout:{type:"hbox",align:"stretch"},buttons:[{text:"Close",handler:function(){b.panel.close()}}]}));this.panel.show()};
function GenomeViewer(a,b,c){var d=this;this.id="GenomeViewer:"+Math.round(1E4*Math.random());this.menuBar=null;this.width=$(document).width();this.height=$(document).height();this.targetId=null;this.species="hsa";this.speciesName="Homo sapiens";null!=a&&(this.targetId=a);null!=b&&(this.species=b.species,this.speciesName=b.name,this.chromosome=b.chromosome,this.position=b.position);null!=c&&(null!=c.description&&(c.description="beta"),null!=c.menuBar&&(this.menuBar=c.menuBar),null!=c.width&&(this.width=
c.width),null!=c.height&&(this.height=c.height),null!=c.pluginsMenu&&(this.pluginsMenu=c.pluginsMenu));this.onSpeciesChange=new Event;console.log(this.width+"x"+this.height);console.log(this.targetId);console.log(this.id);this.genomeWidget=null;this.genomeWidgetProperties=new GenomeWidgetProperties(this.species,{windowSize:1E6,pixelRatio:5.0E-4,id:this.id});this.onSpeciesChange.addEventListener(function(a,b){d.setLocation(b.chromosome,b.position);d.species=b.species;d.speciesName=b.name;Ext.getCmp(d.id+
"speciesMenuButton").setText(d.speciesName);Ext.example.msg("Species",d.speciesName+" selected.");Ext.getCmp(d.id+"chromosomeMenuButton").menu=d._getChromosomeMenu();d.genomeWidgetProperties=new GenomeWidgetProperties(d.species,{windowSize:1E6,pixelRatio:5.0E-4,id:d.id});null!=d.targetId&&d.draw()});this.customTracksAddedCount=1;$(window).resize(function(){});this.chromosome=13;this.position=32889611;this.drawing=0}GenomeViewer.prototype.setMenuBar=function(a){this.menuBar=a};
GenomeViewer.prototype.draw=function(){null!=this.targetId&&this._getPanel(this.width,this.height);this._render()};GenomeViewer.prototype._render=function(){var a=this.position-this.genomeWidgetProperties.windowSize,b=this.position+this.genomeWidgetProperties.windowSize;this._drawGenomeViewer();this.drawChromosome(this.chromosome,a,b);this._setScaleLabels()};
GenomeViewer.prototype._getPanel=function(a,b){if(null==this._panel){var c=[];null!=this.menuBar&&c.push(this.menuBar);c.push(this._getNavigationBar());c.push(this._getChromosomePanel());c.push(this._getWindowSizePanel());c.push(this._getTracksPanel());c.push(this._getBottomBar());this._panel=Ext.create("Ext.panel.Panel",{renderTo:this.targetId,border:!1,width:a,height:b,cls:"x-unselectable",layout:{type:"vbox",align:"stretch"},region:"center",margins:"0 0 0 0",border:!1,items:c})}return this._panel};
GenomeViewer.prototype.setSize=function(a,b){500>a&&(a=500);2400<a&&(a=2400);this.width=a;this.height=b;this._getPanel().setSize(a,b);this.draw()};GenomeViewer.prototype._getSpeciesMenu=function(){null==this._specieMenu&&(this._specieMenu=Ext.create("Ext.menu.Menu",{margin:"0 0 10 0",floating:!0,items:[]}));return this._specieMenu};
GenomeViewer.prototype.setSpeciesMenu=function(a){var b=this,c=this._getSpeciesMenu();c.hide();c.removeAll();for(var d=0;d<a.length;d++)c.add({text:a[d].name,speciesObj:a[d],handler:function(a){b.setSpecies(a.speciesObj)}})};GenomeViewer.prototype.setSpecies=function(a){this.onSpeciesChange.notify(a)};
GenomeViewer.prototype._getChromosomeMenu=function(){var a=this,b=Ext.create("Ext.data.Store",{fields:["name"],autoLoad:!1}),c=Ext.create("Ext.view.View",{store:b,selModel:{mode:"SINGLE",listeners:{selectionchange:function(b,c){a.setChromosome(c[0].data.name);d.hide()}}},cls:"list",trackOver:!0,overItemCls:"list-item-hover",itemSelector:".chromosome-item",tpl:'<tpl for="."><div style="float:left" class="chromosome-item">{name}</div></tpl>'}),c=Ext.create("Ext.container.Container",{width:125,autoScroll:!0,
style:"background-color:#fff",items:[c]}),d=Ext.create("Ext.menu.Menu",{almacen:b,items:[c]}),e=new KaryotypeCellBaseDataAdapter(this.species);e.successed.addEventListener(function(){for(var a=[],c=0;c<e.chromosomeNames.length;c++)a.push({name:e.chromosomeNames[c]});b.loadData(a)});e.fill();return d};
GenomeViewer.prototype._showKaryotypeWindow=function(){var a=this,b=new KaryotypePanelWindow(this.species,{viewer:this});b.onRendered.addEventListener(function(){b.select(a.chromosome,a.position,a.position)});b.onMarkerChanged.addEventListener(function(b,d){a.setLocation(d.chromosome,d.start)});b.draw()};
GenomeViewer.prototype._getZoomSlider=function(){var a=this;null==this._zoomSlider&&(this._zoomSlider=Ext.create("Ext.slider.Single",{id:this.id+" zoomSlider",width:200,minValue:0,hideLabel:!1,maxValue:100,value:a.genomeWidgetProperties.getZoom(),useTips:!0,increment:10,tipText:function(a){return Ext.String.format("<b>{0}%</b>",a.value)}}),this._zoomSlider.on("changecomplete",function(b,c){a._handleNavigationBar("ZOOM",c)}));return this._zoomSlider};
GenomeViewer.prototype._handleNavigationBar=function(a,b){"OptionMenuClick"==a&&(this.genomeWidget.showTranscripts=Ext.getCmp("showTranscriptCB").checked,this.genomeWidgetProperties.setShowTranscripts(Ext.getCmp("showTranscriptCB").checked),this.refreshMasterGenomeViewer());"ZOOM"==a&&this.setZoom(b);"GoToGene"==a&&this.openGeneListWidget(Ext.getCmp(this.id+"tbGene").getValue());if("+"==a){var c=this.genomeWidgetProperties.getZoom();100>c&&this.setZoom(c+10)}"-"==a&&(c=this.genomeWidgetProperties.getZoom(),
10<=c&&this.setZoom(c-10));if("Go"==a){var c=Ext.getCmp(this.id+"tbCoordinate").getValue(),d=c.split(":")[1];this.chromosome=c.split(":")[0];this.setLocation(this.chromosome,d)}"<"==a&&(Ext.getCmp(this.id+"tbCoordinate").getValue(),this.setLocation(this.chromosome,this.position-this.genomeWidgetProperties.windowSize/2));">"==a&&(Ext.getCmp(this.id+"tbCoordinate").getValue(),this.setLocation(this.chromosome,this.position+this.genomeWidgetProperties.windowSize/2))};
GenomeViewer.prototype._getNavigationBar=function(){var a=this;return Ext.create("Ext.toolbar.Toolbar",{cls:"bio-toolbar",height:35,enableOverflow:!0,border:0,items:[{id:this.id+"speciesMenuButton",text:this.speciesName,menu:this._getSpeciesMenu()},{id:this.id+"chromosomeMenuButton",text:"Chromosome",menu:this._getChromosomeMenu()},{text:"Karyotype",handler:function(){a._showKaryotypeWindow()}},{text:"<",margin:"0 0 0 15",handler:function(){a._handleNavigationBar("<")}},{margin:"0 0 0 5",iconCls:"icon-zoom-out",
handler:function(){a._handleNavigationBar("-")}},this._getZoomSlider(),{margin:"0 5 0 0",iconCls:"icon-zoom-in",handler:function(){a._handleNavigationBar("+")}},{text:">",handler:function(){a._handleNavigationBar(">")}},"->",{xtype:"label",text:"Position:",margins:"0 0 0 10"},{xtype:"textfield",id:this.id+"tbCoordinate",text:this.chromosome+":"+this.position,listeners:{specialkey:function(b,c){c.getKey()==c.ENTER&&a._handleNavigationBar("Go")}}},{text:"Go",handler:function(){a._handleNavigationBar("Go")}},
{xtype:"label",text:"Search:",margins:"0 0 0 10"},{xtype:"textfield",id:this.id+"tbGene",emptyText:"gene, protein, transcript",name:"field1",listeners:{specialkey:function(b,c){c.getKey()==c.ENTER&&a._handleNavigationBar("GoToGene")}}},{text:"Go",handler:function(){a._handleNavigationBar("GoToGene")}}]})};GenomeViewer.prototype.setChromosome=function(a){this.setLocation(a,this.position);this._setChromosomeLabel(a)};
GenomeViewer.prototype._setChromosomeLabel=function(a){document.getElementById(this._getChromosomeLabelID()).innerHTML="Chromosome&nbsp;"+a;Ext.getCmp(this.id+"chromosomeMenuButton").setText("Chromosome "+a)};GenomeViewer.prototype._getChromosomeContainerID=function(){return this.id+"container_map_one_chromosome"};GenomeViewer.prototype._getChromosomeLabelID=function(){return this.id+"chromosome_label_id"};
GenomeViewer.prototype._getChromosomePanel=function(){var a=Ext.create("Ext.container.Container",{id:this._getChromosomeLabelID(),margin:5}),b=Ext.create("Ext.container.Container",{id:this._getChromosomeContainerID(),margin:10});return Ext.create("Ext.container.Container",{height:70,layout:{type:"table",columns:2},items:[a,b]})};
GenomeViewer.prototype._getWindowSizePanel=function(){var a=Ext.create("Ext.toolbar.TextItem",{id:this.id+"windowSizeLabel",text:"window Size"});return Ext.create("Ext.container.Container",{style:"text-align:center;",height:20,items:a})};GenomeViewer.prototype._getTracksPanelID=function(){return this.id+"master"};
GenomeViewer.prototype._getTracksPanel=function(){null==this._mainPanel&&(this._mainPanel=Ext.create("Ext.panel.Panel",{autoScroll:!0,flex:1,border:!1,html:'<div height=2000px; overflow-y="scroll"; id = "'+this._getTracksPanelID()+'"></div>'}));return this._mainPanel};
GenomeViewer.prototype._getBottomBar=function(){var a=new GeneFeatureFormatter,b=new SNPFeatureFormatter,c=new LegendPanel({title:"Gene legend"}),d=new LegendPanel({title:"SNP legend"}),e=Ext.create("Ext.draw.Component",{id:this.id+"scaleLabel",width:100,height:20,items:[{type:"text",text:"Scale number",fill:"#000000",x:10,y:5,width:5,height:20},{type:"rect",fill:"#000000",x:0,y:0,width:2,height:20},{type:"rect",fill:"#000000",x:2,y:12,width:100,height:3},{type:"rect",fill:"#000000",x:101,y:0,width:2,
height:20}]}),f=Ext.create("Ext.toolbar.Toolbar",{id:this.id+"uxTaskbar",winMgr:new Ext.ZIndexManager,enableOverflow:!0,cls:"bio-hiddenbar",height:28,flex:1}),a=Ext.create("Ext.toolbar.Toolbar",{cls:"bio-hiddenbar",width:300,height:28,items:[e,"-",c.getButton(a.getBioTypeColors()),d.getButton(b.getBioTypeColors()),"->"]});return Ext.create("Ext.container.Container",{layout:"hbox",cls:"bio-botbar x-unselectable",height:30,items:[f,a]})};
GenomeViewer.prototype.openListWidget=function(a,b,c,d,e,f){var g=this,h=new CellBaseDataAdapter(this.species);h.successed.addEventListener(function(){var a=new GenomicListWidget({title:e,gridFields:f,viewer:g});a.draw(h.dataset.toJSON(),c);a.onSelected.addEventListener(function(a,b){null!=b&&null!=b.chromosome&&g.setLocation(b.chromosome,b.start)});a.onTrackAddAction.addEventListener(function(a,b){null!=b&&g.addTrackFromFeatures(b)})});h.fill(a,b,c,d)};
GenomeViewer.prototype.openGeneListWidget=function(a){this.openListWidget("feature","gene",a.toString(),"info","Gene List")};GenomeViewer.prototype.openTranscriptListWidget=function(a){this.openListWidget("feature","transcript",a.toString(),"info","Transcript List","externalName,stableId,biotype,chromosome,start,end,strand,description".split(","))};
GenomeViewer.prototype.openExonListWidget=function(a){var b=this,c=new CellBaseDataAdapter(this.species);c.successed.addEventListener(function(){var d=new GenomicListWidget({title:"Exon List",gridFields:["stableId","chromosome","start","end","strand"]}),e=[];e.push(c.dataset.toJSON());d.draw(e,a);d.onSelected.addEventListener(function(a,c){null!=c&&null!=c.chromosome&&b.setLocation(c.chromosome,c.start)})});c.fill("feature","exon",a.toString(),"info")};
GenomeViewer.prototype.openSNPListWidget=function(a){this.openListWidget("feature","snp",a.toString(),"info","SNP List","name,variantAlleles,ancestralAllele,mapWeight,position,sequence".split(","))};GenomeViewer.prototype.openGOListWidget=function(a){var b=this,c=new CellBaseDataAdapter(this.species);c.successed.addEventListener(function(){for(var a=[],e=0;e<c.dataset.toJSON()[0].length;e++)a.push(c.dataset.toJSON()[0][e].displayId);b.openGeneListWidget(a)});c.fill("feature","id",a.toString(),"xref?dbname=ensembl_gene&")};
GenomeViewer.prototype.drawChromosome=function(a){this._setChromosomeLabel(a);DOM.removeChilds(this._getChromosomeContainerID());var b=this.width-100;this.chromosomeFeatureTrack=new ChromosomeFeatureTrack(this.id+"chr",document.getElementById(this._getChromosomeContainerID()),this.species,{top:5,bottom:20,left:10,right:b-100,width:b,height:40,label:!0,vertical:!1,rounded:4});var c=this,d=new RegionCellBaseDataAdapter(this.species,{resource:"cytoband"});d.successed.addEventListener(function(){c.chromosomeFeatureTrack.draw(d.dataset);
c.chromosomeFeatureTrack.click.addEventListener(function(a,b){c.setLocation(c.chromosome,b)})});d.fill(a,1,26E7,"cytoband")};GenomeViewer.prototype._setScaleLabels=function(){var a=Math.floor(100/this.genomeWidgetProperties.getPixelRatio())+" nt ";Ext.getCmp(this.id+"scaleLabel").surface.items.items[0].setAttributes({text:a},!0);a="Viewing "+10*Math.floor(100/this.genomeWidgetProperties.getPixelRatio())+" nts ";Ext.getCmp(this.id+"windowSizeLabel").setText(a)};
GenomeViewer.prototype.setZoom=function(a){this.genomeWidgetProperties.setZoom(a);this.position=this.genomeWidget.getMiddlePoint();this._getZoomSlider().setValue(a);this.genomeWidget.trackCanvas._goToCoordinateX(this.position-this.genomeWidget.trackCanvas.width/2/this.genomeWidgetProperties.getPixelRatio());this._setScaleLabels();this.refreshMasterGenomeViewer()};
GenomeViewer.prototype.setLocation=function(a,b){this.chromosome=a;this.position=Math.ceil(b);this.drawChromosome(this.chromosome,1,26E6);this.refreshMasterGenomeViewer()};GenomeViewer.prototype._setPositionField=function(a,b){NaN==b&&(b=1E6);0>b?Ext.getCmp(this.id+"tbCoordinate").setValue(a+":0"):Ext.getCmp(this.id+"tbCoordinate").setValue(a+":"+Math.ceil(b))};GenomeViewer.prototype._getWindowsSize=function(){return this.genomeWidgetProperties.getWindowSize(this.genomeWidgetProperties.getZoom())};
GenomeViewer.prototype.refreshMasterGenomeViewer=function(){this.updateRegionMarked(this.chromosome,this.position);this._drawGenomeViewer()};GenomeViewer.prototype._drawGenomeViewer=function(){var a=this;a.drawing+=1;setTimeout(function(){a.drawing-=1;0==a.drawing&&a._drawOnceGenomeViewer()},300)};
GenomeViewer.prototype._drawOnceGenomeViewer=function(){var a=this;this._getPanel().setLoading("Retrieving data");null!=this.genomeWidget&&this.genomeWidget.clear();this.genomeWidget=new GenomeWidget(this.id+"master",this._getTracksPanelID(),{pixelRatio:this.genomeWidgetProperties.getPixelRatio(),width:this.width-15,height:2E3});var b=this.genomeWidgetProperties.getZoom();if(0<this.genomeWidgetProperties.getTrackByZoom(b).length){for(var c=0;c<this.genomeWidgetProperties.getTrackByZoom(b).length;c++){var d=
this.genomeWidgetProperties.getTrackByZoom(b)[c];d.top=d.originalTop;d.height=d.originalHeight;d.clear();this.genomeWidgetProperties.getDataAdapterByZoom(b)[c].datasets={};this.genomeWidget.addTrack(d,this.genomeWidgetProperties.getDataAdapterByZoom(b)[c])}b=Math.ceil(this.position-this._getWindowsSize());c=Math.ceil(this.position+this._getWindowsSize());0>b&&(b=0);this.genomeWidget.onMarkerChange.addEventListener(function(b,c){a.updateRegionMarked(a.chromosome,c.middle)});this.genomeWidget.onRender.addEventListener(function(){a._getPanel().setLoading(!1);
a.genomeWidget.trackCanvas.selectPaintOnRules(a.position)});this._setPositionField(this.chromosome,this.position);this.genomeWidget.draw(this.chromosome,b,c)}else a._getPanel().setLoading("No tracks to display")};GenomeViewer.prototype.updateRegionMarked=function(a,b){var c=this.genomeWidgetProperties.windowSize/2,d=b-c;0>d&&(d=0);this.chromosomeFeatureTrack.select(d,b+c)};
GenomeViewer.prototype.loadDASTrack=function(a,b){if(void 0==this.genomeWidgetProperties.tracks[a]){var c=new DasRegionDataAdapter({url:b});this.genomeWidgetProperties.addCustomTrackByZoom(0,50,new FeatureTrack("vcf",null,this.species,{top:10,left:0,height:10,title:a,opacity:0.9,titleFontSize:9,forceColor:"purple",label:!0,avoidOverlapping:!0,pixelSpaceBetweenBlocks:100,allowDuplicates:!0,backgroundColor:"#FCFFFF",isAvalaible:!1}),c);this.genomeWidgetProperties.addCustomTrackByZoom(60,100,new FeatureTrack("vcf",
null,this.species,{top:10,left:0,height:10,title:a,titleFontSize:9,forceColor:"#000000",label:!0,avoidOverlapping:!0,pixelSpaceBetweenBlocks:100,allowDuplicates:!0,backgroundColor:"#FCFFFF",isAvalaible:!1}),c)}};
GenomeViewer.prototype.addFeatureTrack=function(a,b){this._getPanel().setLoading();if(null!=b){this.genomeWidgetProperties.addCustomTrackByZoom(0,0,new HistogramFeatureTrack("vcf",null,this.species,{top:20,left:0,height:20,featureHeight:18,title:a,titleFontSize:9,titleWidth:70,label:!1,forceColor:"purple",intervalSize:5E5}),b);this.genomeWidgetProperties.addCustomTrackByZoom(10,20,new HistogramFeatureTrack("vcf",null,this.species,{top:20,left:0,height:20,featureHeight:18,title:a,titleFontSize:9,titleWidth:70,
label:!1,forceColor:"purple",intervalSize:15E4}),b);var c=new FeatureTrack("vcf",null,this.species,{top:10,left:0,height:10,title:a,label:!1,avoidOverlapping:!0,pixelSpaceBetweenBlocks:1,allowDuplicates:!0});this.genomeWidgetProperties.addCustomTrackByZoom(30,80,c,b);c=new FeatureTrack("vcf",null,this.species,{top:10,left:0,height:10,title:a,label:!0,avoidOverlapping:!0,pixelSpaceBetweenBlocks:75,allowDuplicates:!0});this.genomeWidgetProperties.addCustomTrackByZoom(90,90,c,b);this.genomeWidgetProperties.addCustomTrackByZoom(100,
100,new SNPFeatureTrack("vcf",null,this.species,{top:10,left:0,height:20,title:a,featureHeight:10,label:!0,avoidOverlapping:!0,pixelSpaceBetweenBlocks:75,allowDuplicates:!0}),b);this._drawGenomeViewer()}};GenomeViewer.prototype.addTrackFromFeatures=function(a,b){var c=new LocalRegionDataAdapter;c.loadFromFeatures(a);null==b&&(b="");this.addFeatureTrack(b.substr(0,20)+" #"+this.customTracksAddedCount,c);this.customTracksAddedCount++};
GenomeViewer.prototype.addTrackFromFeaturesList=function(a){for(var b=[],c=0;c<a.features.length;c++)for(var d=0;d<a.features[c].length;d++)b.push(a.features[c][d]);this.addTrackFromFeatures(b,a.trackName)};
